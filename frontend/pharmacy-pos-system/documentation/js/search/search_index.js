var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.084,1,0.64]],["body/components/AppComponent.html",[0,0.154,1,1.2,2,1.224,3,0.271,4,0.231,5,1.026,6,1.026,7,1.026,8,1.026,9,0.231,10,3.348,11,0.491,12,3.05,13,3.245,14,5.101,15,0.821,16,1.026,17,1.107,18,0.927,19,0.827,20,5.632,21,0.827,22,5.101,23,0.354,24,0.974,25,6.143,26,0.491,27,0.028,28,1.273,29,1.471,30,1.471,31,5.101,32,4.295,33,2.363,34,0.759,35,3.977,36,0.271,37,0.271,38,0.347,39,0.199,40,0.444,41,0.759,42,1.317,43,0.454,44,1.026,45,1.533,46,1.026,47,0.693,48,1.026,49,0.759,50,1.026,51,1.454,52,0.701,53,1.026,54,0.701,55,1.026,56,0.759,57,1.026,58,0.759,59,1.026,60,0.645,61,1.026,62,0.701,63,1.026,64,0.701,65,1.026,66,0.701,67,0.886,68,1.026,69,0.701,70,1.026,71,0.701,72,1.026,73,0.759,74,1.026,75,0.645,76,0.954,77,0.591,78,0.759,79,0.591,80,1.026,81,0.645,82,0.886,83,1.026,84,1.026,85,0.016,86,0.021,87,0.016]],["title/modules/AppModule.html",[88,1.552,89,2.212]],["body/modules/AppModule.html",[1,1.293,3,0.302,4,0.258,9,0.258,18,0.603,27,0.028,36,0.44,37,0.302,38,0.302,39,0.173,41,0.849,85,0.018,86,0.022,87,0.018,88,2.059,89,4.451,90,2.231,91,2.428,92,3.911,93,3.911,94,3.61,95,2.658,96,3.742,97,3.742,98,3.742,99,3.742,100,3.866,101,3.866,102,3.61,103,2.933,104,2.059,105,4.444,106,3.61,107,5.47,108,4.605,109,2.933,110,3.61,111,4.444,112,4.444,113,5.47,114,4.444,115,4.444]],["title/classes/AppPage.html",[39,0.131,116,2.472]],["body/classes/AppPage.html",[3,0.306,4,0.261,9,0.261,11,0.556,13,2.46,15,0.929,23,0.401,27,0.029,34,1.053,36,0.306,38,0.375,39,0.215,40,0.615,43,0.53,85,0.018,86,0.023,87,0.018,109,2.972,116,4.702,117,4.503,118,3.791,119,5.514,120,1.138,121,6.211,122,6.211,123,4.503,124,5.514,125,5.514,126,5.514,127,1.053,128,6.721,129,4.503,130,4.068,131,5.514,132,5.514,133,3.791,134,3.393,135,4.503,136,4.503,137,2.46,138,4.503]],["title/modules/AppRoutingModule.html",[88,1.552,100,2.004]],["body/modules/AppRoutingModule.html",[0,0.165,3,0.271,4,0.231,9,0.231,27,0.029,32,3.353,36,0.46,37,0.271,38,0.271,39,0.155,52,0.9,54,0.9,60,0.828,62,0.9,64,0.9,66,0.9,69,0.9,71,0.9,79,0.759,81,0.828,82,0.887,85,0.016,86,0.021,87,0.016,90,2,95,2.382,100,3.053,106,2.629,110,3.37,139,3.983,140,3.983,141,3.983,142,3.353,143,3.72,144,3.767,145,2,146,3.76,147,3.353,148,3.923,149,3.983,150,2.939,151,3.983,152,3.983,153,3.983,154,3.983,155,3.983,156,3.983,157,3.983,158,2.382,159,2.939,160,3.983,161,3.983,162,1.473,163,6.593,164,3.983,165,4.778,166,2.176,167,2.382,168,3.353,169,2.176,170,2.939,171,2.629,172,2.176,173,3.983]],["title/guards/AuthGuard.html",[146,2.004,174,2.472]],["body/guards/AuthGuard.html",[3,0.273,4,0.233,9,0.233,11,0.634,13,2.195,15,0.829,23,0.358,26,0.496,27,0.029,33,2.763,34,0.98,36,0.385,37,0.273,38,0.349,39,0.2,40,0.573,47,0.546,85,0.016,86,0.021,87,0.016,104,2.379,120,1.231,127,0.767,134,3.092,145,2.017,146,3.917,165,4.833,175,2.965,176,3.383,177,4.4,178,1.328,179,3.936,180,5.135,181,4.323,182,4.323,183,5.135,184,0.895,185,1.723,186,1.272,187,4.4,188,4.547,189,4.018,190,0.697,191,0.697,192,1.037,193,1.037,194,1.57,195,4.4,196,4.323,197,3.389,198,3.389,199,5.135,200,5.135,201,4.018,202,3.789,203,4.323,204,3.735,205,3.071,206,1.037,207,0.697,208,2.652,209,0.833,210,0.829,211,1.599,212,2.965,213,1.723,214,4.018,215,1.599]],["title/components/CourseDialogComponent.html",[0,0.084,49,0.64]],["body/components/CourseDialogComponent.html",[0,0.148,1,0.667,2,1.124,3,0.238,4,0.203,5,0.902,6,0.902,7,0.902,8,0.902,9,0.203,11,0.431,15,0.721,16,0.902,17,1.093,18,0.916,19,0.76,21,0.76,23,0.311,26,0.431,27,0.028,34,1.009,36,0.319,37,0.238,38,0.319,39,0.183,40,0.589,41,0.667,42,1.209,43,0.417,44,0.902,45,1.458,46,0.902,47,0.718,48,0.902,49,1.23,50,1.625,51,1.364,52,0.615,53,0.902,54,0.615,55,0.902,56,0.667,57,0.902,58,0.667,59,0.902,60,0.566,61,0.902,62,0.615,63,0.902,64,0.615,65,0.902,66,0.615,67,0.778,68,0.902,69,0.615,70,0.902,71,0.615,72,0.902,73,0.667,74,0.902,75,0.566,76,0.838,77,0.519,78,0.667,79,0.519,80,0.902,81,0.566,82,0.778,83,0.902,84,0.902,85,0.014,86,0.019,87,0.014,120,0.967,127,0.894,170,3.456,184,0.778,190,0.636,191,0.636,192,0.902,193,0.902,207,0.718,209,0.566,210,0.721,216,4.167,217,3.728,218,2.089,219,2.601,220,3.092,221,4.685,222,2.17,223,3.944,224,1.078,225,3.489,226,3.092,227,3.044,228,1.158,229,2.577,230,3.888,231,3.493,232,2.449,233,3.493,234,3.092,235,0.931,236,3.493,237,2.352,238,1.864,239,2.306,240,1.39,241,2.306,242,3.456,243,4.685,244,4.685]],["title/components/DashboardComponent.html",[0,0.084,52,0.59]],["body/components/DashboardComponent.html",[0,0.145,1,0.634,2,1.086,3,0.226,4,0.193,5,0.858,6,0.858,7,0.858,8,0.858,9,0.193,11,0.41,15,0.686,16,0.858,17,1.088,18,0.911,19,0.734,21,0.734,23,0.296,27,0.028,34,0.865,36,0.226,37,0.226,38,0.308,39,0.177,40,0.505,41,0.634,42,1.169,43,0.403,44,0.858,45,1.428,46,0.858,47,0.615,48,0.858,49,0.634,50,0.858,51,1.33,52,1.112,53,0.858,54,0.585,55,0.858,56,0.634,57,0.858,58,0.634,59,0.858,60,0.539,61,0.858,62,0.585,63,0.858,64,0.585,65,0.858,66,0.585,67,1.147,68,0.858,69,0.585,70,0.858,71,0.585,72,0.858,73,0.634,74,0.858,75,0.539,76,0.797,77,0.494,78,0.634,79,0.494,80,0.858,81,0.539,82,1.147,83,0.858,84,0.858,85,0.014,86,0.019,87,0.014,120,0.935,127,0.634,137,2.474,166,2.474,167,2.708,172,2.474,178,1.009,184,1.147,190,0.615,191,0.615,207,0.7,224,1.057,228,1.057,235,0.798,237,2.274,238,1.802,245,2.797,246,4.083,247,2.989,248,4.529,249,5.152,250,4.529,251,3.322,252,3.322,253,4.529,254,2.989,255,1.802,256,2.797,257,2.797,258,2.778,259,4.409,260,2.797,261,3.401,262,1.987,263,3.322,264,2.21,265,2.797,266,3.322,267,2.451,268,3.401,269,4.272,270,3.322,271,3.802,272,3.322,273,3.322,274,3.322,275,3.322,276,4.529,277,4.529,278,1.45,279,4.529,280,3.342,281,3.813,282,3.342,283,2.098,284,4.529,285,3.322,286,4.529,287,2.451,288,2.989,289,3.813,290,2.989,291,2.474,292,4.529,293,3.322,294,2.797,295,1.815]],["title/components/DefaultComponent.html",[0,0.084,54,0.59]],["body/components/DefaultComponent.html",[0,0.14,1,0.575,2,1.273,3,0.205,4,0.175,5,0.777,6,0.777,7,0.777,8,0.777,9,0.175,11,0.372,12,3.172,15,0.621,16,0.777,17,1.076,18,0.901,19,0.686,21,0.686,23,0.268,24,0.808,26,0.655,27,0.029,29,1.808,30,1.113,34,1.067,36,0.288,37,0.205,38,0.288,39,0.165,40,0.623,41,0.575,42,1.092,43,0.377,44,0.777,45,1.369,46,0.777,47,0.759,48,0.777,49,0.575,50,0.777,51,1.262,52,0.53,53,0.777,54,1.125,55,0.777,56,0.575,57,0.777,58,0.575,59,0.777,60,0.488,61,0.777,62,0.53,63,0.777,64,0.53,65,0.777,66,0.53,67,0.67,68,0.777,69,0.53,70,0.777,71,0.53,72,0.777,73,0.575,74,0.777,75,0.488,76,0.722,77,0.448,78,0.575,79,0.448,80,0.777,81,0.488,82,0.67,83,0.777,84,0.777,85,0.012,86,0.017,87,0.012,120,0.873,127,0.934,137,1.645,178,0.942,179,2.792,184,0.67,185,1.291,186,1.154,190,0.574,191,0.574,192,1.262,193,1.262,194,1.357,204,3.929,206,0.777,207,0.664,209,0.793,210,0.621,212,2.221,213,1.291,215,1.683,224,1.013,228,1.013,234,2.792,235,0.935,255,1.946,261,1.987,271,3.121,278,0.964,281,3.561,296,2.535,297,4.23,298,2.792,299,4.23,300,3.561,301,3.561,302,4.89,303,4.23,304,2.458,305,4.89,306,4.23,307,4.23,308,4.23,309,3.01,310,2.311,311,4.618,312,4.23,313,4.23,314,3.01,315,1.96,316,3.561,317,4.123,318,4.23,319,3.01,320,3.01,321,4.23,322,4.23,323,3.561,324,1.814,325,2.311,326,2.53,327,3.121,328,3.01,329,2.535,330,3.01,331,4.89,332,2.535,333,3.01,334,3.01,335,2.53,336,4.89,337,3.01,338,3.01,339,2.535,340,2.221]],["title/modules/DefaultModule.html",[88,1.552,101,2.004]],["body/modules/DefaultModule.html",[3,0.203,4,0.173,9,0.173,27,0.029,36,0.467,37,0.203,38,0.203,39,0.116,41,0.57,49,1.158,52,1.019,54,1.019,60,0.937,62,1.019,64,1.019,66,1.019,69,1.019,71,1.019,75,0.983,77,0.902,79,0.86,81,0.937,85,0.012,86,0.017,87,0.012,88,1.384,90,1.5,91,1.632,92,3.215,93,1.972,94,3.215,95,1.786,101,4.086,102,2.777,103,1.972,104,1.384,106,2.777,110,2.777,144,3.104,145,1.5,146,2.516,147,2.515,158,1.786,159,2.204,213,1.281,216,2.204,217,1.972,240,1.189,341,2.515,342,2.515,343,2.515,344,2.515,345,3.457,346,3.457,347,2.987,348,4.207,349,3.542,350,2.204,351,2.987,352,2.987,353,4.207,354,2.987,355,3.542,356,2.515,357,2.987,358,4.1,359,2.515,360,1.281,361,4.87,362,2.987,363,1.281,364,5.286,365,2.987,366,4.207,367,1.189,368,2.987,369,4.87,370,2.298,371,4.87,372,2.987,373,4.1,374,2.515,375,4.207,376,2.987,377,4.207,378,2.987,379,4.207,380,4.207,381,2.515,382,3.542,383,2.515,384,4.207,385,4.207,386,1.972,387,1.972,388,2.987,389,2.987,390,2.987,391,2.987,392,2.987,393,4.207,394,1.189,395,3.542,396,2.515,397,4.207,398,2.987,399,2.987,400,4.207,401,2.516,402,2.256,403,1.786,404,1.632,405,1.972,406,1.5,407,2.987,408,2.987,409,2.987,410,2.987,411,2.987]],["title/interfaces/DialogData.html",[412,0.804,413,1.333]],["body/interfaces/DialogData.html",[0,0.067,3,0.112,4,0.096,9,0.096,11,0.204,17,0.268,18,0.224,19,0.268,21,0.268,23,0.301,24,0.512,26,0.66,27,0.029,28,1.785,29,0.611,30,2.022,36,0.291,37,0.112,38,0.291,39,0.105,40,0.725,43,0.301,47,0.656,66,1.153,67,0.754,75,0.268,76,0.643,78,1.044,85,0.007,86,0.011,87,0.007,127,0.316,134,2.128,158,0.988,162,1.696,166,2.505,169,0.903,172,0.903,177,1.219,178,1.218,186,0.884,190,0.364,191,0.224,194,0.744,202,1.219,206,0.426,207,0.364,209,0.933,210,0.341,211,1.55,213,1.67,215,2.289,219,1.837,220,1.091,222,2.731,224,0.646,228,0.316,232,0.766,235,0.473,238,1.347,240,0.658,242,3.713,254,1.091,262,2.329,278,0.529,283,2.627,295,3.098,304,1.704,310,0.903,315,0.766,317,1.979,326,2.024,327,1.979,360,2.072,363,1.67,370,0.903,401,0.988,402,0.766,404,0.903,412,0.934,413,1.55,414,0.83,415,1.219,416,1.77,417,4.831,418,4.184,419,3.279,420,1.731,421,3.565,422,0.568,423,2.258,424,3.605,425,2.571,426,2.024,427,1.391,428,1.662,429,2.842,430,4.282,431,1.652,432,1.652,433,1.652,434,5.468,435,1.652,436,1.652,437,1.391,438,1.391,439,1.391,440,2.339,441,1.391,442,1.391,443,4.831,444,1.652,445,1.391,446,2.682,447,1.652,448,1.652,449,1.652,450,1.652,451,3.279,452,1.652,453,0.709,454,1.922,455,1.391,456,1.652,457,2.682,458,1.219,459,2.682,460,1.652,461,1.652,462,2.682,463,3.894,464,4.067,465,3.279,466,1.067,467,1.391,468,1.391,469,1.652,470,1.164,471,1.391,472,1.391,473,2.849,474,1.391,475,1.391,476,1.391,477,3.894,478,3.894,479,4.282,480,4.831,481,0.873,482,2.258,483,1.652,484,1.391,485,1.391,486,1.652,487,1.652,488,1.219,489,1.652,490,1.091,491,0.922,492,2.258,493,1.219,494,2.849,495,1.391,496,2.258,497,1.391,498,1.391,499,2.682,500,4.586,501,3.894,502,3.384,503,1.219,504,2.497,505,0.611,506,1.251,507,1.652,508,1.77,509,1.652,510,2.682,511,1.652,512,2.258,513,1.652,514,1.652,515,1.391,516,1.391,517,1.391,518,0.709,519,1.391,520,1.391,521,1.391,522,0.988,523,1.391,524,1.652,525,1.391,526,2.258,527,1.391,528,1.391,529,1.391,530,1.652,531,1.652,532,2.571,533,1.652,534,1.652,535,2.258,536,2.682,537,2.682,538,1.652,539,3.894,540,2.849,541,3.384,542,2.571,543,2.258,544,2.682,545,1.652,546,2.682,547,2.682,548,2.682,549,2.497,550,2.497,551,1.091,552,0.766,553,1.652,554,1.652,555,2.849,556,1.091,557,1.652,558,1.652,559,1.652,560,1.652,561,1.652,562,1.652,563,1.391,564,1.391,565,2.849,566,1.652,567,1.391,568,1.391,569,1.652,570,1.652,571,1.391,572,1.652,573,1.652,574,1.652,575,1.652,576,1.652,577,1.652,578,2.682,579,3.384,580,2.682,581,1.652,582,2.682,583,2.682,584,2.682,585,4.282,586,1.652,587,1.652,588,1.652,589,2.258,590,1.652,591,1.652,592,1.652,593,1.091,594,2.682,595,1.652,596,1.652,597,1.391,598,1.652,599,1.652,600,1.652,601,1.652,602,1.652,603,1.652,604,1.652,605,0.568,606,0.903,607,1.652]],["title/interfaces/DialogData-1.html",[262,1.679,412,0.673,413,1.117]],["body/interfaces/DialogData-1.html",[0,0.101,3,0.192,4,0.164,9,0.164,11,0.349,17,0.459,18,0.384,19,0.459,21,0.459,23,0.252,24,0.773,26,0.779,27,0.029,28,1.915,36,0.386,37,0.192,38,0.371,39,0.11,40,0.72,43,0.486,77,0.421,78,1.179,79,0.918,85,0.012,86,0.017,87,0.012,162,1.497,172,2.211,178,0.63,186,0.976,190,0.384,191,0.384,194,1.123,206,0.73,207,0.384,209,1.001,210,0.584,211,1.126,215,1.126,219,2.436,224,0.773,228,0.54,232,1.311,235,0.713,240,1.126,278,0.906,283,2.862,310,1.546,324,2.027,325,1.546,367,1.126,394,1.126,402,1.311,406,1.42,412,1.403,413,2.327,414,1.42,416,3.12,420,2.125,422,0.973,426,2.826,428,1.953,453,1.213,454,1.126,466,1.881,470,0.973,481,0.73,491,1.392,505,1.497,506,1.497,518,1.213,551,1.868,552,1.311,556,1.868,605,1.775,606,1.546,608,1.868,609,4.7,610,4.7,611,4.659,612,3.12,613,3.487,614,2.19,615,2.027,616,1.213,617,2.373,618,2.088,619,2.088,620,2.172,621,1.213,622,1.213,623,1.213,624,2.088,625,1.736,626,1.213,627,2.088,628,1.213,629,1.42,630,1.736,631,1.213,632,1.692,633,2.088,634,1.42,635,1.42,636,1.42,637,1.42,638,1.42,639,1.42,640,1.692,641,1.546,642,2.088,643,2.088,644,2.088,645,2.088,646,2.088,647,2.088]],["title/interfaces/Element.html",[43,0.298,412,0.804]],["body/interfaces/Element.html",[0,0.129,3,0.227,4,0.194,9,0.194,11,0.412,17,0.541,18,0.453,19,0.541,21,0.541,23,0.297,24,0.867,26,0.788,27,0.029,28,1.774,36,0.377,37,0.227,38,0.377,39,0.177,40,0.719,43,0.545,47,0.831,60,1.036,85,0.014,86,0.019,87,0.014,162,1.233,166,3.028,169,3.167,178,0.743,186,1.066,190,0.453,191,0.453,194,1.26,195,2.46,197,2.201,198,2.201,206,0.861,207,0.617,209,0.736,210,0.688,222,2.771,224,0.986,228,0.637,235,0.588,295,1.822,315,1.545,324,2.214,326,1.994,363,1.43,367,1.327,394,1.327,412,1.089,414,1.674,420,2.235,421,3.809,422,1.147,428,1.562,429,3.344,440,3.028,453,1.43,454,2.054,458,2.46,466,1.327,470,1.147,481,0.861,490,2.201,491,1.147,503,2.46,504,2.46,505,1.233,506,1.233,518,1.43,552,1.545,593,2.201,605,1.147,606,1.822,615,2.214,616,1.43,617,2.279,620,2.307,621,1.43,622,1.43,623,1.43,625,1.947,626,1.43,628,1.43,629,1.674,630,1.947,631,1.43,632,1.994,634,1.674,635,1.674,636,1.674,637,1.674,638,1.674,639,1.674,640,1.994,648,2.46,649,3.467,650,3.823,651,2.808,652,2.808,653,2.46]],["title/interfaces/Element-1.html",[43,0.25,262,1.679,412,0.673]],["body/interfaces/Element-1.html",[0,0.102,3,0.194,4,0.165,9,0.165,11,0.351,17,0.462,18,0.387,19,0.462,21,0.462,23,0.253,24,0.776,26,0.772,27,0.029,28,1.98,36,0.387,37,0.194,38,0.372,39,0.111,40,0.721,43,0.506,77,0.423,78,1.181,79,0.92,85,0.012,86,0.017,87,0.012,162,1.504,172,2.221,178,0.634,186,0.979,190,0.387,191,0.387,194,1.128,206,0.735,207,0.387,209,1.003,210,0.588,211,1.133,215,1.133,219,2.441,224,0.776,228,0.544,232,1.319,235,0.716,240,1.133,278,0.912,283,2.535,310,1.555,324,2.034,325,1.555,367,1.133,394,1.133,402,1.319,406,1.429,412,1.405,413,2.264,414,1.429,416,3.131,420,2.06,422,0.979,426,2.836,428,1.957,453,1.221,454,1.133,466,1.887,470,0.979,481,0.735,491,1.399,505,1.504,506,1.504,518,1.221,551,1.879,552,1.319,556,1.879,605,1.78,606,1.555,608,1.879,609,4.705,610,4.705,611,4.664,612,3.131,613,3.5,614,2.197,615,2.034,616,1.221,617,2.597,618,2.101,619,2.101,620,2.177,621,1.221,622,1.221,623,1.221,624,2.101,625,1.744,626,1.221,627,2.101,628,1.221,629,1.429,630,1.744,631,1.221,632,1.702,633,2.101,634,1.429,635,1.429,636,1.429,637,1.429,638,1.429,639,1.429,640,1.702,641,1.555,642,2.101,643,2.101,644,2.101,645,2.101,646,2.101,647,2.101]],["title/interfaces/Element-2.html",[43,0.25,412,0.673,654,2.363]],["body/interfaces/Element-2.html",[0,0.113,3,0.224,4,0.191,9,0.191,11,0.407,17,0.534,18,0.447,19,0.534,21,0.534,23,0.293,24,0.86,26,0.806,27,0.029,28,2.076,33,2.086,36,0.375,37,0.224,38,0.375,39,0.176,40,0.717,43,0.553,47,0.749,81,1.021,82,1.142,85,0.014,86,0.018,87,0.014,162,1.218,178,0.734,186,1.059,190,0.447,191,0.447,194,1.249,206,0.85,207,0.611,209,0.73,210,0.68,224,0.98,228,0.629,235,0.58,247,2.972,324,2.2,360,1.413,367,1.311,394,1.311,412,1.323,414,1.654,420,2.192,422,1.133,428,2.099,453,1.413,454,1.311,466,1.311,470,1.133,481,0.85,491,1.133,505,1.218,506,1.218,518,1.413,552,1.526,605,1.133,614,3.004,615,2.2,616,1.413,620,2.297,621,1.413,622,1.413,623,1.413,625,1.931,626,1.413,628,1.413,629,1.654,630,1.931,631,1.413,634,1.654,635,1.654,636,1.654,637,1.654,638,1.654,639,1.654,655,2.431,656,2.693,657,4.502,658,4.26,659,4.26,660,4.26,661,3.322,662,3.322,663,2.774,664,2.774,665,2.774,666,2.774,667,2.774]],["title/interfaces/Element-3.html",[43,0.25,289,2.363,412,0.673]],["body/interfaces/Element-3.html",[0,0.118,3,0.241,4,0.206,9,0.206,11,0.437,17,0.574,18,0.481,19,0.574,21,0.574,23,0.315,24,0.903,26,0.767,27,0.029,28,1.819,36,0.414,37,0.241,38,0.386,39,0.184,40,0.713,43,0.542,47,0.844,67,0.789,75,0.574,77,0.951,78,1.163,85,0.015,86,0.019,87,0.015,190,0.481,191,0.481,207,0.642,209,0.767,210,0.731,218,2.119,219,2.283,220,2.339,222,2.821,224,1.017,225,2.339,226,2.339,227,1.779,228,0.676,230,3.514,232,2.191,234,2.339,235,0.624,239,2.339,240,1.41,241,2.339,283,2.191,304,1.41,360,1.52,367,1.41,394,1.41,402,1.641,403,2.119,404,1.935,405,2.339,406,1.779,412,1.363,413,2.118,414,1.779,420,2.173,422,1.219,428,1.627,429,3.396,440,2.584,470,1.219,481,0.914,605,1.627,615,2.283,616,1.52,620,2.261,621,1.52,622,1.52,623,1.52,625,2.028,626,1.52,628,1.52,630,1.52,631,1.52,649,3.539,656,2.828,668,2.614,669,2.983,670,2.983,671,2.614,672,2.983]],["title/components/FooterComponent.html",[0,0.084,56,0.64]],["body/components/FooterComponent.html",[0,0.138,1,0.721,2,1.184,3,0.257,4,0.219,5,0.975,6,0.975,7,0.975,8,0.975,9,0.219,11,0.466,15,0.78,16,0.975,17,1.102,18,0.923,19,0.8,21,0.8,23,0.336,27,0.028,34,0.942,36,0.257,37,0.257,38,0.336,39,0.192,40,0.55,41,0.721,42,1.274,43,0.439,44,0.975,45,1.504,46,0.975,47,0.67,48,0.975,49,0.721,50,0.975,51,1.418,52,0.666,53,0.975,54,0.666,55,0.975,56,1.237,57,0.975,58,0.721,59,0.975,60,0.613,61,0.975,62,0.666,63,0.975,64,0.666,65,0.975,66,0.666,67,0.841,68,0.975,69,0.666,70,0.975,71,0.666,72,0.975,73,0.721,74,0.975,75,0.613,76,0.906,77,0.562,78,0.721,79,0.562,80,0.975,81,0.613,82,0.841,83,0.975,84,0.975,85,0.015,86,0.02,87,0.015,120,1.019,127,0.721,184,1.224,190,0.67,191,0.67,207,0.746,224,1.112,228,1.184,235,0.87,237,2.477,238,1.964,339,3.181,340,2.788,673,3.181,674,3.641,675,3.641,676,6.045,677,5.495,678,4.935,679,3.778,680,3.778,681,3.778,682,4.935,683,4.935,684,4.935]],["title/components/HeaderComponent.html",[0,0.084,58,0.64]],["body/components/HeaderComponent.html",[0,0.138,1,0.553,2,0.988,3,0.197,4,0.168,5,0.748,6,0.748,7,0.748,8,0.748,9,0.168,11,0.358,12,2.463,15,0.598,16,0.748,17,1.078,18,0.903,19,0.668,21,0.668,23,0.258,24,0.786,26,0.644,27,0.029,29,1.523,33,1.908,34,1.093,36,0.355,37,0.197,38,0.28,39,0.161,40,0.614,41,0.553,42,1.063,43,0.367,44,0.748,45,1.346,46,0.748,47,0.708,48,0.748,49,0.553,50,0.748,51,1.236,52,0.511,53,0.748,54,1.009,55,0.748,56,0.553,57,0.748,58,1.211,59,0.748,60,0.47,61,0.748,62,0.511,63,0.748,64,0.511,65,0.748,66,0.511,67,1.067,68,0.748,69,0.511,70,0.748,71,0.511,72,0.748,73,0.553,74,0.748,75,0.47,76,0.695,77,0.431,78,0.553,79,0.431,80,0.748,81,0.47,82,0.645,83,0.748,84,0.748,85,0.012,86,0.017,87,0.012,104,1.343,120,0.85,127,0.915,150,2.139,167,3.423,171,2.718,178,1.162,184,0.645,186,1.296,190,0.559,191,0.559,192,1.063,193,1.063,206,0.748,207,0.65,209,0.846,211,1.639,224,0.996,227,1.455,228,1.093,235,0.919,237,2.068,238,1.639,254,2.718,294,2.44,295,1.583,298,2.718,300,3.467,304,2.278,315,1.908,324,2.455,360,1.243,386,1.913,387,1.913,481,0.748,641,2.25,674,3.039,675,3.039,685,2.44,686,3.127,687,4.79,688,4.118,689,6.208,690,4.118,691,4.118,692,5.509,693,2.44,694,4.391,695,3.848,696,4.065,697,4.118,698,5.509,699,4.819,700,4.118,701,4.118,702,2.898,703,4.118,704,2.898,705,2.898,706,2.898,707,4.118,708,2.898,709,4.118,710,2.139,711,2.898,712,2.898,713,2.898,714,2.44,715,2.139,716,2.139,717,2.44,718,2.139,719,2.139,720,2.139,721,2.898,722,4.118,723,2.718,724,4.118,725,4.118,726,2.898,727,2.898,728,2.898,729,2.898,730,2.898]],["title/components/InventoryComponent.html",[0,0.084,60,0.543]],["body/components/InventoryComponent.html",[0,0.132,1,0.495,2,0.911,3,0.176,4,0.15,5,0.669,6,0.669,7,0.669,8,0.669,9,0.15,11,0.32,15,0.535,16,0.669,17,1.056,18,0.884,19,0.616,21,0.616,23,0.231,24,0.726,26,0.758,27,0.029,28,1.217,29,0.959,30,0.959,34,1.087,36,0.337,37,0.176,38,0.337,39,0.148,40,0.685,41,0.495,42,0.981,43,0.52,44,0.669,45,1.278,46,0.669,47,0.822,48,0.669,49,0.495,50,0.669,51,1.161,52,0.457,53,0.669,54,0.457,55,0.669,56,0.495,57,0.669,58,0.495,59,0.669,60,1.025,61,0.669,62,0.457,63,0.669,64,0.457,65,0.669,66,0.457,67,0.577,68,0.669,69,0.457,70,0.669,71,0.457,72,0.669,73,0.495,74,0.669,75,0.42,76,0.622,77,0.385,78,0.495,79,0.385,80,0.669,81,0.42,82,0.577,83,0.669,84,0.669,85,0.011,86,0.02,87,0.011,120,0.784,127,0.726,162,0.959,166,3.19,169,2.881,178,0.846,184,0.577,185,1.112,186,1.088,190,0.516,191,0.516,192,0.981,193,0.981,194,1.248,195,2.803,197,2.508,198,2.508,206,0.669,207,0.611,209,0.616,210,0.535,222,2.443,224,0.946,228,0.946,235,0.793,255,1.032,264,1.112,278,1.217,288,1.711,290,1.711,291,1.416,295,1.416,315,1.76,324,2.363,326,2.272,335,1.55,363,1.929,367,1.032,394,1.032,412,0.911,420,1.895,421,3.654,422,0.892,428,1.547,429,3.01,440,2.076,453,1.63,454,2.266,458,2.803,466,1.512,470,1.307,481,0.669,490,1.711,491,0.892,503,1.913,504,1.913,505,0.959,506,0.959,518,1.112,542,2.508,543,3.199,549,2.803,550,2.803,552,2.705,593,1.711,605,1.704,606,2.076,615,2.124,616,1.112,617,1.301,620,2.443,621,1.929,622,1.63,623,1.929,625,2.262,626,1.63,628,1.112,629,1.301,630,1.63,631,1.112,632,2.272,634,1.908,635,1.301,636,1.301,637,1.301,638,1.301,639,1.301,640,2.272,648,1.913,649,2.69,650,2.183,651,3.199,652,3.787,653,2.803,731,2.803,732,3.8,733,2.592,734,2.592,735,2.592,736,2.592,737,1.908,738,2.592,739,2.803,740,1.913,741,1.416,742,1.913,743,2.803]],["title/components/LoginComponent.html",[0,0.084,62,0.59]],["body/components/LoginComponent.html",[0,0.131,1,0.486,2,0.899,3,0.173,4,0.148,5,0.657,6,0.657,7,0.657,8,0.657,9,0.148,11,0.314,15,0.525,16,0.657,17,1.053,18,0.882,19,0.608,21,0.608,23,0.226,24,0.716,26,0.549,27,0.029,29,1.386,30,1.386,34,1.045,36,0.385,37,0.173,38,0.255,39,0.146,40,0.61,41,0.486,42,0.967,43,0.334,44,0.657,45,1.267,46,0.657,47,0.604,48,0.657,49,0.486,50,0.657,51,1.148,52,0.448,53,0.657,54,0.964,55,0.657,56,0.486,57,0.657,58,0.486,59,0.657,60,0.412,61,0.657,62,1.101,63,0.657,64,0.448,65,0.657,66,0.448,67,0.567,68,0.657,69,0.448,70,0.657,71,0.448,72,0.657,73,1.045,74,0.657,75,0.412,76,0.61,77,0.378,78,0.486,79,0.378,80,0.657,81,0.412,82,0.567,83,0.657,84,0.657,85,0.01,86,0.015,87,0.01,104,1.179,120,0.774,127,0.849,130,1.877,137,1.39,145,1.277,150,1.877,167,3.867,178,1.361,179,1.679,184,0.567,185,1.091,186,1.08,187,3.621,188,3.861,190,0.509,191,0.509,192,0.657,193,0.657,194,1.234,203,3.155,206,0.657,207,0.604,209,0.848,210,0.525,211,1.953,213,1.091,215,1.491,224,0.937,227,1.277,228,1.045,235,0.865,237,1.881,238,1.491,246,2.765,255,1.77,258,1.277,259,2.765,264,1.607,267,1.877,268,1.679,269,2.765,278,0.815,282,1.877,287,1.877,311,2.765,325,2.047,327,2.765,329,2.142,363,1.091,370,1.39,386,1.679,387,1.679,425,3.454,428,1.289,453,1.607,481,1.413,488,2.765,491,1.289,505,2.024,506,0.941,508,2.474,522,1.521,614,1.736,617,1.881,641,2.047,656,2.241,686,1.39,694,4.132,695,3.621,696,3.861,714,2.142,715,1.877,716,1.877,717,2.142,718,1.877,719,1.877,720,3.282,741,1.39,744,2.142,745,4.449,746,3.747,747,4.449,748,3.746,749,4.908,750,4.132,751,4.908,752,2.544,753,2.544,754,4.608,755,3.747,756,3.155,757,3.747,758,2.544,759,2.544,760,3.747,761,3.747,762,3.747,763,4.405,764,4.608,765,2.544,766,4.132,767,2.544,768,3.155,769,3.155,770,2.544,771,2.544,772,2.544,773,2.544,774,2.544,775,2.544,776,2.544,777,2.544,778,2.142,779,2.544,780,2.142,781,2.544,782,2.544,783,3.747,784,3.747,785,2.544,786,2.544,787,2.544,788,2.544,789,3.747,790,2.937,791,1.679,792,1.877,793,1.877,794,2.142,795,2.142,796,2.142,797,2.544,798,2.142]],["title/components/ManagementComponent.html",[0,0.084,64,0.59]],["body/components/ManagementComponent.html",[0,0.109,1,0.323,2,0.655,3,0.115,4,0.098,5,0.436,6,0.436,7,0.436,8,0.436,9,0.098,11,0.209,15,0.349,16,0.436,17,0.986,18,0.826,19,0.443,21,0.443,23,0.15,24,0.522,26,0.68,27,0.029,28,1.998,30,1.459,34,1.162,36,0.295,37,0.115,38,0.234,39,0.107,40,0.678,41,0.323,42,0.705,43,0.306,44,0.436,45,1.019,46,0.436,47,0.775,48,0.436,49,0.522,50,0.705,51,0.887,52,0.298,53,0.436,54,0.298,55,0.436,56,0.323,57,0.436,58,0.323,59,0.436,60,0.274,61,0.436,62,0.298,63,0.436,64,1.115,65,0.436,66,0.298,67,0.376,68,0.436,69,0.298,70,0.436,71,0.298,72,0.436,73,0.323,74,0.436,75,0.274,76,0.825,77,0.251,78,0.323,79,0.251,80,0.436,81,0.274,82,0.376,83,0.436,84,0.436,85,0.007,86,0.011,87,0.007,120,0.564,127,1.105,134,2.532,162,1.271,166,2.773,169,2.532,170,2.912,178,1.13,184,0.376,186,1.082,190,0.536,191,0.371,192,1.31,193,1.31,194,1.095,196,2.3,204,1.116,206,0.436,207,0.467,209,0.873,210,0.349,211,1.844,213,1.474,215,0.673,217,1.116,219,1.988,222,2.891,223,3.323,224,0.754,228,0.754,235,0.989,238,1.571,240,0.673,242,4.414,255,1.368,256,1.423,257,1.423,258,0.849,260,1.423,261,2.269,264,0.725,278,1.1,280,1.247,283,2.147,295,1.492,304,2.402,310,1.492,325,2.156,360,2.177,363,1.171,370,0.923,402,0.783,420,1.678,423,2.3,424,4.274,425,3.059,426,2.591,427,2.3,429,2.156,437,3.648,438,3.323,439,3.648,440,1.878,441,2.3,442,3.648,451,3.902,454,1.724,455,2.894,464,2.3,465,1.423,466,1.844,467,1.423,468,2.894,470,0.94,471,2.3,472,3.323,473,1.423,474,2.3,475,2.3,476,1.423,481,1.259,484,2.3,490,1.116,491,1.182,492,2.894,493,1.247,494,2.894,495,1.423,496,2.3,497,1.423,498,1.423,505,0.625,506,1.271,515,2.3,516,3.323,517,2.3,518,0.725,519,1.423,520,1.423,521,1.423,522,1.633,523,2.3,525,1.423,526,2.3,527,1.423,528,2.3,529,3.323,532,2.605,540,1.423,542,1.116,555,2.3,563,1.423,564,1.423,565,3.648,567,1.423,568,1.423,589,2.3,593,1.803,617,1.371,649,1.633,723,1.803,741,2.773,766,3.323,793,1.247,799,1.247,800,2.3,801,3.437,802,2.731,803,3.437,804,2.731,805,2.731,806,2.731,807,2.731,808,3.947,809,2.731,810,3.323,811,3.947,812,3.947,813,2.731,814,1.69,815,2.731,816,1.69,817,1.69,818,2.731,819,2.731,820,1.69,821,2.731,822,1.69,823,2.731,824,2.731,825,2.731,826,1.69,827,2.3,828,1.69,829,1.69,830,2.731,831,1.69,832,1.69,833,1.69,834,1.69,835,2.731,836,1.69,837,2.731,838,1.69,839,2.731,840,2.731,841,2.731,842,4.634,843,1.69,844,1.69,845,1.69,846,1.69,847,1.69,848,1.69,849,2.731,850,1.69,851,1.69,852,1.69,853,1.69,854,1.69,855,1.69,856,1.69,857,2.731,858,1.69,859,1.69,860,1.69,861,1.69,862,1.69,863,1.69,864,1.69,865,1.69,866,1.69,867,1.69,868,1.69,869,1.69,870,1.69,871,2.731,872,2.731,873,1.69,874,1.69,875,1.69,876,1.69,877,1.69,878,1.69,879,1.69,880,2.731,881,1.69,882,1.69,883,1.69,884,1.69,885,1.69,886,1.69,887,1.69,888,1.69,889,1.69,890,1.69,891,1.69,892,2.731,893,1.69,894,1.69,895,1.69,896,2.731,897,2.731,898,2.3,899,2.731,900,1.69,901,1.69,902,1.69,903,3.437,904,2.894,905,2.731]],["title/guards/ManagerGuard.html",[148,2.212,174,2.472]],["body/guards/ManagerGuard.html",[3,0.274,4,0.234,9,0.234,11,0.497,13,2.202,15,0.832,23,0.359,26,0.497,27,0.029,33,2.384,34,0.982,36,0.385,37,0.274,38,0.35,39,0.201,40,0.574,47,0.547,85,0.017,86,0.021,87,0.017,120,1.062,127,0.77,134,3.096,145,2.023,148,4.326,165,4.836,175,2.973,177,3.796,178,1.146,179,3.396,182,4.331,184,0.897,185,1.728,186,1.273,187,4.405,188,4.551,190,0.699,191,0.699,192,1.04,193,1.04,194,1.572,202,3.796,204,3.941,205,3.076,207,0.699,208,2.66,209,0.834,210,0.832,211,1.604,212,2.973,213,1.728,215,1.604,246,3.796,315,2.384,778,3.393,800,5.026,906,3.393,907,5.144,908,4.181,909,5.144,910,5.144,911,5.144,912,5.144,913,4.03,914,4.03,915,5.144,916,4.03,917,4.03,918,4.03,919,4.03,920,4.03]],["title/components/RegisterComponent.html",[0,0.084,69,0.59]],["body/components/RegisterComponent.html",[0,0.114,1,0.508,2,0.929,3,0.181,4,0.154,5,0.687,6,0.687,7,0.687,8,0.687,9,0.154,11,0.328,15,0.549,16,0.687,17,1.06,18,0.887,19,0.628,21,0.628,23,0.237,24,0.739,26,0.658,27,0.029,29,1.432,30,1.432,33,2.323,34,1.062,36,0.362,37,0.181,38,0.263,39,0.151,40,0.62,41,0.508,42,0.999,43,0.345,44,0.687,45,1.294,46,0.687,47,0.779,48,0.687,49,0.508,50,0.687,51,1.178,52,0.469,53,0.687,54,0.469,55,0.687,56,0.508,57,0.687,58,0.508,59,0.687,60,0.431,61,0.687,62,0.469,63,0.687,64,0.469,65,0.687,66,0.469,67,0.593,68,0.687,69,1.11,70,0.687,71,0.469,72,0.687,73,0.508,74,0.687,75,0.431,76,0.638,77,0.396,78,0.508,79,0.396,80,0.687,81,0.431,82,1.017,83,0.687,84,0.687,85,0.016,86,0.016,87,0.011,120,0.799,127,0.739,137,1.454,162,0.984,167,2.316,168,5.049,178,0.862,181,3.26,184,0.593,185,1.141,186,1.185,190,0.526,191,0.526,192,0.687,193,0.687,194,1.267,206,0.687,207,0.62,209,0.628,210,0.549,211,1.059,213,1.958,215,1.541,224,0.957,227,1.336,228,1.062,235,0.804,237,1.944,238,1.995,247,2.556,255,1.817,258,1.336,259,2.857,264,1.661,267,1.963,268,1.756,269,2.857,278,0.852,282,1.963,287,1.963,315,1.794,317,2.857,363,1.141,370,2.116,386,1.756,387,1.756,422,0.915,425,3.014,428,0.915,481,1.662,491,0.915,493,1.963,505,1.97,506,0.984,522,1.591,532,2.556,571,3.26,605,1.332,614,2.469,641,2.116,657,3.7,658,2.857,659,2.857,660,2.857,661,2.857,662,2.857,686,1.454,695,3.7,696,3.932,715,1.963,716,1.963,718,1.963,719,1.963,720,1.963,723,2.556,737,1.336,741,3.038,748,3.844,750,4.222,763,5.197,764,4.222,769,3.26,780,2.24,790,3.014,791,1.756,792,1.963,793,1.963,795,2.24,796,2.24,798,2.24,827,3.26,898,3.26,908,3.7,921,2.24,922,3.872,923,4.565,924,3.872,925,5.328,926,2.661,927,2.661,928,2.661,929,3.872,930,2.661,931,5.014,932,3.872,933,3.872,934,2.661,935,3.872,936,2.661,937,2.661,938,2.661,939,2.661,940,2.661,941,2.661,942,2.661,943,2.661,944,2.661,945,2.661]],["title/components/SettingsComponent.html",[0,0.084,71,0.59]],["body/components/SettingsComponent.html",[0,0.126,1,0.602,2,1.048,3,0.214,4,0.183,5,0.814,6,0.814,7,0.814,8,0.814,9,0.183,11,0.389,15,1.035,16,0.814,17,1.082,18,0.906,19,0.708,21,0.708,23,0.281,24,0.834,26,0.619,27,0.029,33,2.508,34,1.085,36,0.297,37,0.214,38,0.297,39,0.17,40,0.634,41,0.602,42,1.128,43,0.389,44,0.814,45,1.397,46,0.814,47,0.681,48,0.814,49,0.602,50,0.814,51,1.294,52,0.556,53,0.814,54,0.556,55,0.814,56,0.602,57,0.814,58,0.602,59,0.814,60,0.511,61,0.814,62,0.556,63,0.814,64,0.556,65,0.814,66,0.556,67,0.702,68,0.814,69,0.556,70,0.814,71,1.134,72,0.814,73,0.602,74,0.814,75,0.511,76,0.756,77,0.469,78,0.602,79,0.469,80,0.814,81,0.511,82,0.702,83,0.814,84,0.814,85,0.013,86,0.018,87,0.013,120,0.902,127,0.834,171,2.884,178,1.205,184,0.702,185,1.352,186,1.288,190,0.593,191,0.593,192,0.814,193,0.814,194,1.391,207,0.681,209,0.511,210,0.651,235,0.883,238,1.739,258,2.193,264,1.874,278,1.01,291,1.723,304,1.995,316,4.557,326,3.237,420,1.955,422,1.085,454,2.483,466,1.739,491,1.085,508,3.573,512,2.655,532,3.573,686,1.723,737,1.583,790,2.081,791,2.081,946,2.655,947,4.369,948,6.437,949,5.412,950,5.013,951,4.369,952,5.013,953,5.412,954,5.412,955,4.369,956,3.153,957,4.369,958,3.153,959,4.369,960,4.369,961,3.153,962,3.153,963,3.153,964,3.153,965,3.153,966,3.153,967,3.153,968,3.153,969,3.153,970,4.369,971,3.153,972,3.679,973,2.655,974,2.655]],["title/modules/SharedModule.html",[88,1.552,345,2.004]],["body/modules/SharedModule.html",[3,0.273,4,0.233,9,0.233,27,0.029,36,0.46,37,0.273,38,0.273,39,0.156,41,0.765,56,1.275,58,1.275,73,1.275,85,0.016,86,0.021,87,0.016,88,1.856,90,2.011,91,2.189,92,3.73,93,2.645,94,2.645,95,3.379,102,3.383,103,2.645,104,1.856,106,2.645,110,3.383,144,3.781,145,2.011,298,2.645,345,4.013,349,4.315,350,2.956,355,4.315,356,3.373,358,4.315,359,3.373,360,1.718,373,4.315,374,3.373,382,4.315,383,3.373,395,4.315,396,3.373,975,3.373,976,3.373,977,3.373,978,4.006,979,4.006,980,4.006,981,4.006,982,5.125,983,4.006,984,5.125,985,3.373,986,5.125,987,4.006,988,5.125,989,4.006]],["title/components/SidebarComponent.html",[0,0.084,73,0.64]],["body/components/SidebarComponent.html",[0,0.12,1,0.557,2,0.992,3,0.198,4,0.169,5,0.753,6,0.753,7,0.753,8,0.753,9,0.169,11,0.36,13,1.594,15,0.854,16,0.753,17,1.072,18,0.898,19,0.671,21,0.671,23,0.26,24,0.79,26,0.819,27,0.029,28,1.325,29,1.53,30,1.53,34,1.095,36,0.281,37,0.198,38,0.281,39,0.161,40,0.616,41,0.557,42,1.068,43,0.368,44,0.753,45,1.35,46,0.753,47,0.71,48,0.753,49,0.557,50,0.753,51,1.241,52,0.514,53,0.753,54,0.514,55,0.753,56,0.557,57,0.753,58,0.557,59,0.753,60,0.473,61,0.753,62,0.514,63,0.753,64,0.514,65,0.753,66,0.514,67,0.65,68,0.753,69,0.514,70,0.753,71,0.514,72,0.753,73,1.212,74,0.753,75,0.473,76,0.7,77,0.434,78,0.557,79,0.434,80,0.753,81,0.473,82,1.071,83,0.753,84,0.753,85,0.012,86,0.017,87,0.012,120,0.854,127,0.79,169,2.26,171,2.731,178,1.165,184,0.65,186,1.298,190,0.562,191,0.562,192,1.068,193,1.068,205,2.474,206,0.753,207,0.653,208,1.926,209,0.779,224,0.999,228,0.999,235,0.847,254,2.731,255,1.646,258,2.077,264,1.774,265,2.456,268,1.926,291,1.594,304,1.646,311,4.232,332,2.456,340,2.152,485,3.483,508,3.453,674,3.052,675,3.052,686,1.594,693,2.456,710,2.152,754,5.493,756,3.483,768,4.404,790,1.926,908,3.052,972,3.483,973,2.456,974,2.456,990,2.456,991,4.807,992,4.137,993,4.137,994,4.137,995,2.917,996,4.137,997,4.137,998,4.137,999,2.917,1000,2.917,1001,4.137,1002,2.917,1003,2.917,1004,2.917,1005,2.917,1006,2.917,1007,2.917,1008,2.917,1009,2.917,1010,2.917,1011,4.137,1012,4.137,1013,4.137,1014,4.137,1015,4.137,1016,4.137,1017,4.137,1018,4.137,1019,4.137,1020,4.137,1021,2.917,1022,2.917,1023,2.917,1024,2.917,1025,2.917,1026,2.917]],["title/components/SuccessDialogComponent.html",[0,0.084,75,0.543]],["body/components/SuccessDialogComponent.html",[0,0.129,1,0.631,2,1.083,3,0.225,4,0.192,5,0.853,6,0.853,7,0.853,8,0.853,9,0.192,11,0.408,15,0.682,16,0.853,17,1.087,18,0.91,19,0.732,21,0.732,23,0.294,24,0.862,26,0.557,27,0.028,34,1.054,36,0.35,37,0.225,38,0.307,39,0.176,40,0.573,41,0.631,42,1.165,43,0.402,44,0.853,45,1.425,46,0.853,47,0.698,48,0.853,49,0.631,50,0.853,51,1.327,52,0.583,53,0.853,54,0.583,55,0.853,56,0.631,57,0.853,58,0.631,59,0.853,60,0.536,61,0.853,62,0.583,63,0.853,64,0.583,65,0.853,66,0.583,67,1.005,68,0.853,69,0.583,70,0.853,71,0.583,72,0.853,73,0.631,74,0.853,75,1.034,76,1.53,77,0.492,78,1.104,79,0.492,80,0.853,81,0.536,82,0.736,83,0.853,84,0.853,85,0.014,86,0.018,87,0.014,120,0.932,127,0.862,159,2.44,184,0.736,190,0.613,191,0.613,192,0.853,193,0.853,207,0.698,209,0.732,210,0.682,213,1.418,218,1.977,219,2.559,224,1.054,225,3.393,226,2.98,227,2.995,228,1.139,229,2.44,230,3.816,232,2.381,235,0.906,237,2.266,238,1.796,239,2.182,240,1.316,241,2.182,304,2.045,323,3.8,401,3.457,403,3.457,404,3.158,413,2.374,418,3.331,419,3.8,445,3.8,605,2.052,668,2.44,671,3.331,737,1.66,1027,4.514,1028,3.306,1029,3.306,1030,3.306,1031,3.306,1032,3.306,1033,4.514,1034,4.514]],["title/interceptors/TokenInterceptorService.html",[346,2.004,1035,2.821]],["body/interceptors/TokenInterceptorService.html",[3,0.269,4,0.229,9,0.229,11,0.488,13,2.16,15,0.816,23,0.352,24,0.97,26,0.693,27,0.029,34,1.072,36,0.403,37,0.269,38,0.346,39,0.198,40,0.567,47,0.69,85,0.016,86,0.021,87,0.016,120,1.049,127,0.755,134,2.776,184,0.881,186,1.335,190,0.69,191,0.69,192,1.312,193,1.312,197,3.355,198,3.707,205,3.039,206,1.021,207,0.69,208,2.61,209,0.911,304,2.022,315,2.355,346,3.906,381,3.329,470,1.748,653,4.524,686,2.776,710,2.917,723,3.355,1036,3.954,1037,4.991,1038,3.329,1039,5.163,1040,5.928,1041,5.928,1042,5.082,1043,3.954,1044,3.954,1045,5.082,1046,5.928,1047,5.928,1048,5.928,1049,3.954,1050,6.132,1051,3.954,1052,3.954,1053,3.329,1054,5.082,1055,3.954,1056,3.954,1057,3.954,1058,3.954,1059,3.954]],["title/components/TransactionDialogComponent.html",[0,0.084,77,0.498]],["body/components/TransactionDialogComponent.html",[0,0.113,1,0.497,2,0.915,3,0.177,4,0.151,5,0.672,6,0.672,7,0.672,8,0.672,9,0.151,11,0.321,15,0.538,16,0.672,17,1.057,18,0.885,19,0.618,21,0.618,23,0.232,24,0.728,26,0.722,27,0.029,28,1.221,29,0.963,30,0.963,34,1.089,36,0.375,37,0.177,38,0.338,39,0.149,40,0.665,41,0.497,42,0.984,43,0.507,44,0.672,45,1.281,46,0.672,47,0.81,48,0.672,49,0.497,50,0.672,51,1.164,52,0.459,53,0.672,54,0.459,55,0.672,56,0.497,57,0.672,58,0.497,59,0.672,60,0.422,61,0.672,62,0.459,63,0.672,64,0.459,65,0.672,66,0.459,67,0.849,68,0.672,69,0.459,70,0.672,71,0.459,72,0.672,73,0.497,74,0.672,75,0.618,76,0.625,77,0.933,78,1.225,79,0.387,80,0.672,81,0.422,82,0.58,83,0.672,84,0.672,85,0.011,86,0.016,87,0.011,120,0.787,127,0.728,137,1.423,184,0.58,190,0.518,191,0.518,192,0.672,193,0.672,207,0.612,209,0.618,210,0.538,218,1.558,219,2.445,220,2.517,222,2.448,224,0.948,225,2.977,226,2.517,227,2.771,228,0.948,229,1.922,230,3.487,232,2.09,234,2.517,235,0.795,239,1.719,240,1.037,241,1.719,255,1.037,258,2.264,271,1.922,278,1.221,283,2.3,304,1.795,360,1.635,367,1.037,394,1.037,402,1.207,403,1.558,404,1.423,405,3.859,406,2.935,412,1.082,413,2.196,420,1.708,422,0.896,428,1.817,429,3.015,440,1.423,470,1.312,481,0.672,542,2.517,549,2.813,550,2.813,605,1.899,612,1.719,614,1.207,615,2.129,616,1.117,620,2.327,621,1.934,622,1.635,623,1.934,625,2.266,626,1.635,628,1.117,630,1.117,631,1.117,649,2.697,656,1.558,668,1.922,669,2.193,670,3.21,671,2.813,672,2.193,699,2.193,737,1.914,791,1.719,792,1.922,1060,3.813,1061,2.605,1062,2.605,1063,2.605,1064,2.605,1065,2.605,1066,2.605,1067,2.605,1068,3.813,1069,5.283,1070,2.605,1071,2.605,1072,4.964,1073,2.605,1074,3.813,1075,2.605,1076,3.813,1077,2.605,1078,2.605,1079,2.605,1080,2.605,1081,2.605,1082,2.605,1083,2.605]],["title/components/TransactionsComponent.html",[0,0.084,79,0.498]],["body/components/TransactionsComponent.html",[0,0.102,1,0.421,2,0.808,3,0.15,4,0.128,5,0.569,6,0.569,7,0.569,8,0.569,9,0.128,16,0.569,17,1.032,18,0.864,19,0.546,21,0.546,23,0.196,24,0.643,26,0.74,27,0.029,28,1.661,29,0.816,30,0.816,34,1.063,36,0.353,37,0.15,38,0.335,39,0.086,40,0.691,41,0.421,42,0.869,43,0.48,44,0.569,45,1.18,46,0.569,47,0.705,48,0.569,49,0.421,50,0.569,51,1.054,52,0.389,53,0.569,54,0.389,55,0.569,56,0.421,57,0.569,58,0.421,59,0.569,60,0.358,61,0.569,62,0.389,63,0.569,64,0.389,65,0.569,66,0.389,67,0.491,68,0.569,69,0.389,70,0.569,71,0.389,72,0.569,73,0.421,74,0.569,75,0.358,76,0.529,77,0.501,78,1.172,79,0.912,80,0.569,81,0.358,82,0.491,83,0.569,84,0.569,85,0.009,86,0.019,87,0.009,120,0.695,127,0.873,162,1.245,172,2.497,178,0.75,184,0.491,185,0.946,186,1.016,190,0.457,191,0.457,192,1.18,193,1.18,194,1.133,206,0.569,207,0.457,209,0.943,210,0.455,211,0.878,215,0.878,219,2.387,224,0.78,228,0.873,232,1.022,235,0.914,240,0.878,255,0.878,261,1.456,264,1.444,278,1.463,283,2.404,288,1.456,290,1.456,291,1.205,310,1.84,324,2.225,325,1.84,335,1.319,363,0.946,367,0.878,394,0.878,402,1.022,406,1.108,412,1.245,413,2.065,416,2.223,420,1.785,422,0.759,426,2.944,428,1.914,453,1.444,454,1.34,466,2.065,470,1.158,481,0.569,491,1.158,505,1.245,506,1.245,518,0.946,522,1.319,551,2.223,552,2.578,556,3.017,605,1.914,606,1.205,608,1.456,609,4.569,610,4.569,611,4.48,612,3.017,613,2.485,614,2.118,615,1.96,616,0.946,617,2.471,618,2.485,619,3.014,620,2.354,621,1.752,622,1.444,623,1.752,624,2.485,625,2.111,626,1.444,627,1.628,628,0.946,629,1.108,630,1.444,631,0.946,632,2.014,633,2.485,634,1.691,635,1.108,636,1.108,637,1.108,638,1.108,639,1.108,640,2.733,641,1.84,642,2.485,643,1.628,644,1.628,645,2.485,646,1.628,647,1.628,731,2.485,737,1.108,739,2.485,740,1.628,741,1.205,742,1.628,743,3.014,810,2.835,904,1.858,1084,3.368,1085,2.206,1086,2.206,1087,2.206,1088,2.206,1089,2.206,1090,2.206,1091,3.368,1092,3.368,1093,3.368,1094,2.206]],["title/components/UsersComponent.html",[0,0.084,81,0.543]],["body/components/UsersComponent.html",[0,0.113,1,0.499,2,0.917,3,0.178,4,0.152,5,0.674,6,0.674,7,0.674,8,0.674,9,0.152,11,0.322,15,0.539,16,0.674,17,1.057,18,0.885,19,0.62,21,0.62,23,0.233,24,0.73,26,0.775,27,0.029,28,1.769,29,0.966,30,0.966,33,2.303,34,1.055,36,0.338,37,0.178,38,0.338,39,0.149,40,0.686,41,0.499,42,0.986,43,0.531,44,0.674,45,1.283,46,0.674,47,0.824,48,0.674,49,0.499,50,0.674,51,1.166,52,0.46,53,0.674,54,0.46,55,0.674,56,0.499,57,0.674,58,0.499,59,0.674,60,0.424,61,0.674,62,0.46,63,0.674,64,0.46,65,0.674,66,0.46,67,0.582,68,0.674,69,0.46,70,0.674,71,0.46,72,0.674,73,0.499,74,0.674,75,0.424,76,0.627,77,0.388,78,0.499,79,0.388,80,0.674,81,1.018,82,1.271,83,0.674,84,0.674,85,0.011,86,0.02,87,0.011,120,0.789,127,0.73,162,0.966,178,0.851,184,0.582,185,1.12,186,1.092,190,0.519,191,0.519,192,0.986,193,0.986,194,1.253,206,0.674,207,0.613,209,0.62,210,0.539,224,0.949,228,0.949,235,0.796,247,2.982,255,1.04,264,1.12,278,1.223,288,1.724,290,1.724,291,1.427,324,2.37,335,1.562,360,1.639,363,1.12,367,1.04,394,1.04,412,1.084,420,1.819,422,0.899,428,1.901,453,1.639,454,1.52,466,1.52,470,1.314,481,0.674,491,0.899,505,0.966,506,0.966,518,1.12,552,2.711,605,1.71,614,2.811,615,2.132,616,1.12,620,2.447,621,1.938,622,1.639,623,1.938,625,2.269,626,1.639,628,1.12,629,1.311,630,1.639,631,1.12,634,1.918,635,1.311,636,1.311,637,1.311,638,1.311,639,1.311,655,1.927,656,1.562,657,4.077,658,3.333,659,3.333,660,3.333,661,3.333,662,3.668,663,3.217,664,3.804,665,3.217,666,2.199,667,3.217,731,2.819,737,1.311,739,2.819,740,1.927,741,1.427,742,1.927,743,2.819,1095,3.821,1096,2.612,1097,2.612,1098,2.612,1099,2.612,1100,3.821,1101,3.821,1102,3.821,1103,3.821,1104,3.821]],["title/coverage.html",[1105,3.835]],["body/coverage.html",[0,0.17,1,0.742,9,0.226,10,3.272,26,0.48,27,0.028,39,0.152,43,0.524,49,0.742,52,0.685,54,0.685,56,0.742,58,0.742,60,0.63,62,0.685,64,0.685,66,0.685,69,0.685,71,0.685,73,0.96,75,0.63,77,0.578,79,0.578,81,0.63,85,0.016,86,0.021,87,0.016,116,2.867,118,3.272,146,2.324,148,2.565,158,3.005,174,3.708,176,3.272,186,0.802,205,3.005,216,2.867,217,2.565,218,3.522,245,3.272,280,2.867,296,3.272,335,4.098,346,2.324,401,3.331,403,2.324,404,2.123,405,3.317,406,2.523,412,1.499,413,2,415,3.708,481,1.003,608,3.677,620,1.547,648,3.708,655,3.708,673,3.272,685,3.272,744,3.272,799,2.867,906,3.272,921,3.272,946,3.272,990,4.231,1035,3.272,1037,3.272,1038,3.272,1105,3.272,1106,3.886,1107,3.886,1108,3.886,1109,6.099,1110,5.026,1111,3.272,1112,3.886,1113,3.886,1114,3.886,1115,5.57,1116,3.886,1117,5.026,1118,5.57,1119,5.57,1120,3.886,1121,3.886,1122,3.886,1123,3.886,1124,3.886,1125,3.886,1126,3.886,1127,5.57,1128,5.57,1129,3.886]],["title/dependencies.html",[91,2.199,1130,2.807]],["body/dependencies.html",[12,2.878,27,0.028,37,0.327,85,0.02,86,0.024,87,0.02,91,2.629,108,4.833,109,3.789,142,4.052,145,2.416,298,3.177,350,3.551,370,2.629,985,4.052,1039,4.052,1053,4.052,1131,4.813,1132,6.71,1133,4.813,1134,5.74,1135,4.813,1136,4.813,1137,4.813,1138,4.813,1139,4.813,1140,4.813,1141,4.813,1142,4.813,1143,5.74,1144,4.813,1145,4.813,1146,4.813,1147,4.813,1148,4.813,1149,4.813,1150,4.813]],["title/index.html",[23,0.25,482,2.363,1151,2.807]],["body/index.html",[0,0.15,4,0.265,12,3.588,18,0.621,27,0.023,47,0.621,85,0.019,86,0.023,87,0.019,104,2.118,130,3.372,133,3.848,301,4.685,418,3.372,481,1.18,488,3.372,535,3.848,597,3.848,1152,4.571,1153,4.571,1154,5.999,1155,4.571,1156,4.571,1157,4.571,1158,5.565,1159,6.399,1160,6.588,1161,4.571,1162,4.571,1163,4.571,1164,4.571,1165,4.571,1166,4.571,1167,4.571,1168,5.999,1169,5.999,1170,4.571,1171,6.399,1172,4.571,1173,4.571,1174,4.571,1175,4.571,1176,4.571,1177,4.571,1178,4.571,1179,5.565,1180,5.565,1181,6.243,1182,4.571,1183,5.565,1184,5.565,1185,4.571,1186,6.243,1187,4.571,1188,4.571,1189,5.999,1190,4.571,1191,4.571]],["title/modules.html",[90,2.287]],["body/modules.html",[27,0.025,85,0.021,86,0.025,87,0.021,89,3.431,90,2.61,100,3.109,101,3.109,109,4.181,345,3.109,1192,6.334,1193,6.334,1194,6.512,1195,5.198,1196,5.198]],["title/overview.html",[1197,3.835]],["body/overview.html",[1,1.217,2,0.943,27,0.028,39,0.153,41,0.751,49,1.069,52,0.987,54,0.987,56,1.217,58,1.217,60,0.908,62,0.987,64,0.987,66,0.987,69,0.987,71,0.987,73,1.217,75,0.908,77,0.833,79,0.833,81,0.908,85,0.016,86,0.021,87,0.016,88,1.821,89,4.307,90,1.974,91,2.148,92,2.595,93,2.595,94,2.595,95,2.351,96,3.31,97,3.31,98,3.31,99,3.31,100,3.349,101,4.151,102,3.342,103,2.595,104,1.821,143,2.595,175,2.901,262,2.351,341,3.31,342,3.31,343,3.31,344,3.31,345,3.984,346,3.349,414,1.974,654,4.263,794,3.31,975,3.31,976,3.31,977,3.31,1197,3.31,1198,3.931,1199,3.931,1200,3.931,1201,3.931]],["title/routes.html",[143,3.007]],["body/routes.html",[27,0.025,85,0.022,86,0.025,87,0.022,143,3.561]],["title/miscellaneous/typealiases.html",[1202,2.363,1203,4.025]],["body/miscellaneous/typealiases.html",[23,0.458,26,0.801,27,0.024,85,0.021,86,0.024,87,0.021,158,3.079,222,3.008,401,3.079,415,4.407,799,3.799,1111,4.336,1202,4.336,1204,5.149,1205,5.149,1206,5.149,1207,5.973,1208,5.149,1209,6.31]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":295,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{}}}],["0.0",{"_index":566,"title":{},"body":{"interfaces/DialogData.html":{}}}],["0.10.2",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["0762a4",{"_index":277,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0px",{"_index":1026,"title":{},"body":{"components/SidebarComponent.html":{}}}],["1",{"_index":262,"title":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"overview.html":{}}}],["1.1.11",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":794,"title":{},"body":{"components/LoginComponent.html":{},"overview.html":{}}}],["10.0.0",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["10.1.7",{"_index":1156,"title":{},"body":{"index.html":{}}}],["10.2.3",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":335,"title":{},"body":{"components/DefaultComponent.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1073,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["13",{"_index":576,"title":{},"body":{"interfaces/DialogData.html":{}}}],["14px",{"_index":742,"title":{},"body":{"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["150px",{"_index":272,"title":{},"body":{"components/DashboardComponent.html":{}}}],["17",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["19/19",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":654,"title":{"interfaces/Element-2.html":{}},"body":{"overview.html":{}}}],["2.0.0",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["2.8.2",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":717,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["200px",{"_index":971,"title":{},"body":{"components/SettingsComponent.html":{}}}],["2020",{"_index":684,"title":{},"body":{"components/FooterComponent.html":{}}}],["20px",{"_index":340,"title":{},"body":{"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/SidebarComponent.html":{}}}],["2em",{"_index":902,"title":{},"body":{"components/ManagementComponent.html":{}}}],["3",{"_index":289,"title":{"interfaces/Element-3.html":{}},"body":{"components/DashboardComponent.html":{}}}],["3/3",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":604,"title":{},"body":{"interfaces/DialogData.html":{}}}],["30px",{"_index":292,"title":{},"body":{"components/DashboardComponent.html":{}}}],["34/34",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":337,"title":{},"body":{"components/DefaultComponent.html":{}}}],["4",{"_index":1198,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":792,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["5",{"_index":944,"title":{},"body":{"components/RegisterComponent.html":{}}}],["5.0.2",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":743,"title":{},"body":{"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["555",{"_index":1081,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["5em",{"_index":266,"title":{},"body":{"components/DashboardComponent.html":{}}}],["6",{"_index":1201,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":905,"title":{},"body":{"components/ManagementComponent.html":{}}}],["7/7",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["700px",{"_index":647,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["75",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["8.2.2",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":280,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManagementComponent.html":{},"coverage.html":{}}}],["85",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":1078,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["90",{"_index":279,"title":{},"body":{"components/DashboardComponent.html":{}}}],["9000",{"_index":943,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_auth",{"_index":194,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["_default",{"_index":694,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["_filter",{"_index":804,"title":{},"body":{"components/ManagementComponent.html":{}}}],["_filter(value",{"_index":517,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["_router",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"guards/ManagerGuard.html":{}}}],["_sidebar",{"_index":751,"title":{},"body":{"components/LoginComponent.html":{}}}],["_snackbar",{"_index":695,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["access",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ManagerGuard.html":{}}}],["accessors",{"_index":813,"title":{},"body":{"components/ManagementComponent.html":{}}}],["accounts",{"_index":909,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["activatedroutesnapshot",{"_index":916,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["active",{"_index":435,"title":{},"body":{"interfaces/DialogData.html":{}}}],["activetransaction",{"_index":436,"title":{},"body":{"interfaces/DialogData.html":{}}}],["actual_component",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["add",{"_index":723,"title":{},"body":{"components/HeaderComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["added",{"_index":536,"title":{},"body":{"interfaces/DialogData.html":{}}}],["addmanage",{"_index":1016,"title":{},"body":{"components/SidebarComponent.html":{}}}],["addproduct",{"_index":472,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["addproductstotransaction",{"_index":583,"title":{},"body":{"interfaces/DialogData.html":{}}}],["addproductstotransaction(allproductids",{"_index":590,"title":{},"body":{"interfaces/DialogData.html":{}}}],["adds",{"_index":470,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["afterviewinit",{"_index":949,"title":{},"body":{"components/SettingsComponent.html":{}}}],["age",{"_index":657,"title":{},"body":{"interfaces/Element-2.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["aliases",{"_index":1204,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":268,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{}}}],["allow",{"_index":907,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["allows",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["allproductids",{"_index":584,"title":{},"body":{"interfaces/DialogData.html":{}}}],["amount",{"_index":417,"title":{},"body":{"interfaces/DialogData.html":{}}}],["amountpaid(value",{"_index":599,"title":{},"body":{"interfaces/DialogData.html":{}}}],["amoutpaid",{"_index":447,"title":{},"body":{"interfaces/DialogData.html":{}}}],["angular",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/HeaderComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":350,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":381,"title":{},"body":{"modules/DefaultModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["angular/compiler",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":985,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":370,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":398,"title":{},"body":{"modules/DefaultModule.html":{}}}],["angular/material/button",{"_index":374,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":383,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/checkbox",{"_index":376,"title":{},"body":{"modules/DefaultModule.html":{}}}],["angular/material/chips",{"_index":378,"title":{},"body":{"modules/DefaultModule.html":{}}}],["angular/material/dialog",{"_index":240,"title":{},"body":{"components/CourseDialogComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/ManagementComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{}}}],["angular/material/divider",{"_index":356,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":362,"title":{},"body":{"modules/DefaultModule.html":{}}}],["angular/material/grid",{"_index":359,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":396,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":372,"title":{},"body":{"modules/DefaultModule.html":{}}}],["angular/material/list",{"_index":989,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":987,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":394,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/select",{"_index":365,"title":{},"body":{"modules/DefaultModule.html":{}}}],["angular/material/sidenav",{"_index":354,"title":{},"body":{"modules/DefaultModule.html":{}}}],["angular/material/snack",{"_index":386,"title":{},"body":{"modules/DefaultModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["angular/material/table",{"_index":367,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/toolbar",{"_index":983,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/DefaultModule.html":{},"components/LoginComponent.html":{},"guards/ManagerGuard.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["app.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.po.ts",{"_index":119,"title":{},"body":{"classes/AppPage.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applyfilter",{"_index":731,"title":{},"body":{"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["applyfilter(event",{"_index":634,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["appmodule",{"_index":89,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname:focus",{"_index":730,"title":{},"body":{"components/HeaderComponent.html":{}}}],["apppage",{"_index":116,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":100,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":565,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["artifacts",{"_index":1172,"title":{},"body":{"index.html":{}}}],["attach_moneytransactions",{"_index":1015,"title":{},"body":{"components/SidebarComponent.html":{}}}],["auth",{"_index":653,"title":{},"body":{"interfaces/Element.html":{},"components/InventoryComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["auth.service",{"_index":919,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["auth/auth.guard",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{}}}],["auth/auth.service",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["auth/manager.guard",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/token",{"_index":391,"title":{},"body":{"modules/DefaultModule.html":{}}}],["auth0/angular",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["authguard",{"_index":146,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/DefaultModule.html":{},"coverage.html":{}}}],["authorization",{"_index":1057,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authservice",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["auto",{"_index":522,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{}}}],["autocomplete",{"_index":805,"title":{},"body":{"components/ManagementComponent.html":{}}}],["autocomplete(i",{"_index":819,"title":{},"body":{"components/ManagementComponent.html":{}}}],["autocomplete(value",{"_index":524,"title":{},"body":{"interfaces/DialogData.html":{}}}],["autocompleteid(value",{"_index":538,"title":{},"body":{"interfaces/DialogData.html":{}}}],["autocompletename(value",{"_index":553,"title":{},"body":{"interfaces/DialogData.html":{}}}],["autofill",{"_index":806,"title":{},"body":{"components/ManagementComponent.html":{}}}],["autofill(i",{"_index":821,"title":{},"body":{"components/ManagementComponent.html":{}}}],["autofills",{"_index":823,"title":{},"body":{"components/ManagementComponent.html":{}}}],["autofocus",{"_index":606,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{}}}],["automatic",{"_index":970,"title":{},"body":{"components/SettingsComponent.html":{}}}],["automatically",{"_index":535,"title":{},"body":{"interfaces/DialogData.html":{},"index.html":{}}}],["available",{"_index":1196,"title":{},"body":{"modules.html":{}}}],["back",{"_index":510,"title":{},"body":{"interfaces/DialogData.html":{}}}],["backend",{"_index":487,"title":{},"body":{"interfaces/DialogData.html":{}}}],["background",{"_index":258,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["bar",{"_index":387,"title":{},"body":{"modules/DefaultModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["barcode",{"_index":533,"title":{},"body":{"interfaces/DialogData.html":{}}}],["base",{"_index":131,"title":{},"body":{"classes/AppPage.html":{}}}],["based",{"_index":453,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["before",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["beta.32",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["blank",{"_index":471,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["block",{"_index":904,"title":{},"body":{"components/ManagementComponent.html":{},"components/TransactionsComponent.html":{}}}],["blue",{"_index":719,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{}}}],["bootstrap",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["bottom",{"_index":265,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidebarComponent.html":{}}}],["break",{"_index":861,"title":{},"body":{"components/ManagementComponent.html":{}}}],["browse",{"_index":1194,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":135,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1171,"title":{},"body":{"index.html":{}}}],["button",{"_index":641,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{}}}],["buttons",{"_index":901,"title":{},"body":{"components/ManagementComponent.html":{}}}],["calculateitemquantity",{"_index":577,"title":{},"body":{"interfaces/DialogData.html":{}}}],["calculateprice(i",{"_index":557,"title":{},"body":{"interfaces/DialogData.html":{}}}],["calculates",{"_index":555,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["calculatesp",{"_index":807,"title":{},"body":{"components/ManagementComponent.html":{}}}],["calculatesp(i",{"_index":825,"title":{},"body":{"components/ManagementComponent.html":{}}}],["calculatetotalprice",{"_index":562,"title":{},"body":{"interfaces/DialogData.html":{}}}],["canactivate",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/ManagerGuard.html":{}}}],["cancel",{"_index":897,"title":{},"body":{"components/ManagementComponent.html":{}}}],["cancels",{"_index":507,"title":{},"body":{"interfaces/DialogData.html":{}}}],["card",{"_index":790,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{}}}],["center",{"_index":269,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["certain",{"_index":910,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["change",{"_index":418,"title":{},"body":{"interfaces/DialogData.html":{},"components/SuccessDialogComponent.html":{},"index.html":{}}}],["check",{"_index":488,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["checks",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/DialogData.html":{},"guards/ManagerGuard.html":{}}}],["child",{"_index":299,"title":{},"body":{"components/DefaultComponent.html":{}}}],["children",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["class",{"_index":39,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":117,"title":{},"body":{"classes/AppPage.html":{}}}],["clear",{"_index":935,"title":{},"body":{"components/RegisterComponent.html":{}}}],["clearallproducts",{"_index":514,"title":{},"body":{"interfaces/DialogData.html":{}}}],["clears",{"_index":513,"title":{},"body":{"interfaces/DialogData.html":{}}}],["cleartransaction",{"_index":511,"title":{},"body":{"interfaces/DialogData.html":{}}}],["cli",{"_index":1154,"title":{},"body":{"index.html":{}}}],["click",{"_index":703,"title":{},"body":{"components/HeaderComponent.html":{}}}],["clicked",{"_index":760,"title":{},"body":{"components/LoginComponent.html":{}}}],["close",{"_index":227,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/Element-3.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["closed",{"_index":323,"title":{},"body":{"components/DefaultComponent.html":{},"components/SuccessDialogComponent.html":{}}}],["closes",{"_index":234,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/DefaultComponent.html":{},"interfaces/Element-3.html":{},"components/TransactionDialogComponent.html":{}}}],["cluster_appmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_defaultmodule",{"_index":341,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_declarations",{"_index":344,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_imports",{"_index":343,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_defaultmodule_providers",{"_index":342,"title":{},"body":{"modules/DefaultModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":975,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":976,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":977,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":1166,"title":{},"body":{"index.html":{}}}],["color",{"_index":259,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["column",{"_index":334,"title":{},"body":{"components/DefaultComponent.html":{}}}],["columns",{"_index":622,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["commonmodule",{"_index":349,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["completed",{"_index":1027,"title":{},"body":{"components/SuccessDialogComponent.html":{}}}],["completes",{"_index":523,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["compodoc/compodoc",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["componentfactoryname",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":980,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/header/header.component",{"_index":979,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/sidebar/sidebar.component",{"_index":981,"title":{},"body":{"modules/SharedModule.html":{}}}],["conduct",{"_index":431,"title":{},"body":{"interfaces/DialogData.html":{}}}],["console.log(error",{"_index":506,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["console.log(productentry",{"_index":891,"title":{},"body":{"components/ManagementComponent.html":{}}}],["console.log(productsupdated",{"_index":869,"title":{},"body":{"components/ManagementComponent.html":{}}}],["console.log(res",{"_index":593,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{}}}],["console.log(sellingprice",{"_index":888,"title":{},"body":{"components/ManagementComponent.html":{}}}],["console.log(this.currentmarkupvalue",{"_index":965,"title":{},"body":{"components/SettingsComponent.html":{}}}],["const",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["constructor",{"_index":184,"title":{},"body":{"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["constructor(_auth",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["constructor(auth",{"_index":1043,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["constructor(authservice",{"_index":693,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(dialogref",{"_index":229,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["constructor(formbuilder",{"_index":814,"title":{},"body":{"components/ManagementComponent.html":{}}}],["constructor(private",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["constructor(public",{"_index":710,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidebarComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["contain",{"_index":515,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["container",{"_index":338,"title":{},"body":{"components/DefaultComponent.html":{}}}],["contains",{"_index":196,"title":{},"body":{"guards/AuthGuard.html":{},"components/ManagementComponent.html":{}}}],["content",{"_index":137,"title":{},"body":{"classes/AppPage.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["copy",{"_index":681,"title":{},"body":{"components/FooterComponent.html":{}}}],["costprice",{"_index":849,"title":{},"body":{"components/ManagementComponent.html":{}}}],["count",{"_index":489,"title":{},"body":{"interfaces/DialogData.html":{}}}],["course",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["coursedialogcomponent",{"_index":49,"title":{"components/CourseDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cover",{"_index":974,"title":{},"body":{"components/SettingsComponent.html":{},"components/SidebarComponent.html":{}}}],["coverage",{"_index":1105,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":724,"title":{},"body":{"components/HeaderComponent.html":{}}}],["createdproducts",{"_index":830,"title":{},"body":{"components/ManagementComponent.html":{}}}],["createproduct",{"_index":808,"title":{},"body":{"components/ManagementComponent.html":{}}}],["createproduct(createdproducts",{"_index":828,"title":{},"body":{"components/ManagementComponent.html":{}}}],["createproduct(createdproducts):void",{"_index":852,"title":{},"body":{"components/ManagementComponent.html":{}}}],["creates",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["createtransaction",{"_index":582,"title":{},"body":{"interfaces/DialogData.html":{}}}],["creating",{"_index":839,"title":{},"body":{"components/ManagementComponent.html":{}}}],["credits",{"_index":1070,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["current",{"_index":326,"title":{},"body":{"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{},"components/SettingsComponent.html":{}}}],["currently",{"_index":312,"title":{},"body":{"components/DefaultComponent.html":{}}}],["currentmarkupvalue",{"_index":952,"title":{},"body":{"components/SettingsComponent.html":{}}}],["custom",{"_index":699,"title":{},"body":{"components/HeaderComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["customer",{"_index":445,"title":{},"body":{"interfaces/DialogData.html":{},"components/SuccessDialogComponent.html":{}}}],["dad9d9",{"_index":285,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard",{"_index":246,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"guards/ManagerGuard.html":{}}}],["dashboard'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["dashboard.component.css",{"_index":249,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":250,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcard",{"_index":276,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcard2",{"_index":284,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":52,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboarddashboard",{"_index":1012,"title":{},"body":{"components/SidebarComponent.html":{}}}],["data",{"_index":605,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/RegisterComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["data.change",{"_index":1034,"title":{},"body":{"components/SuccessDialogComponent.html":{}}}],["data.datetime",{"_index":1068,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["data.empid",{"_index":1067,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["data.empid}}date",{"_index":1083,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["data.transactionid",{"_index":1066,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["data.transactionid}}employee",{"_index":1082,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["datasource",{"_index":621,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["date",{"_index":612,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{}}}],["datetime",{"_index":609,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["declarations",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decorators",{"_index":737,"title":{},"body":{"components/InventoryComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["default'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["default.component",{"_index":351,"title":{},"body":{"modules/DefaultModule.html":{}}}],["default.component.css",{"_index":302,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default.component.html",{"_index":303,"title":{},"body":{"components/DefaultComponent.html":{}}}],["defaultcomponent",{"_index":54,"title":{"components/DefaultComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultmodule",{"_index":101,"title":{"modules/DefaultModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DefaultModule.html":{},"modules.html":{},"overview.html":{}}}],["defined",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["deleteproduct",{"_index":809,"title":{},"body":{"components/ManagementComponent.html":{}}}],["deleteproduct(i",{"_index":475,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["deletes",{"_index":474,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["dependencies",{"_index":91,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/UsersComponent.html":{}}}],["detail",{"_index":670,"title":{},"body":{"interfaces/Element-3.html":{},"components/TransactionDialogComponent.html":{}}}],["details",{"_index":617,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionsComponent.html":{}}}],["dev",{"_index":1162,"title":{},"body":{"index.html":{}}}],["development",{"_index":1157,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":219,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/ManagementComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{}}}],["dialog'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["dialog.component",{"_index":402,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/ManagementComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{}}}],["dialog.component.css",{"_index":225,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["dialog.component.html",{"_index":226,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["dialog.component.ts",{"_index":218,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:16",{"_index":231,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":1028,"title":{},"body":{"components/SuccessDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1031,"title":{},"body":{"components/SuccessDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":236,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":1030,"title":{},"body":{"components/SuccessDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":233,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1029,"title":{},"body":{"components/SuccessDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":1060,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["dialog.component.ts:64",{"_index":1063,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["dialog.component.ts:72",{"_index":1065,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["dialog.component.ts:79",{"_index":1064,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["dialog.component.ts:86",{"_index":1062,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["dialog.component.ts:96",{"_index":1061,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["dialog/course",{"_index":217,"title":{},"body":{"components/CourseDialogComponent.html":{},"modules/DefaultModule.html":{},"components/ManagementComponent.html":{},"coverage.html":{}}}],["dialog/success",{"_index":404,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"coverage.html":{}}}],["dialog/transaction",{"_index":406,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["dialogconfig",{"_index":892,"title":{},"body":{"components/ManagementComponent.html":{}}}],["dialogconfig.autofocus",{"_index":894,"title":{},"body":{"components/ManagementComponent.html":{}}}],["dialogconfig.disableclose",{"_index":893,"title":{},"body":{"components/ManagementComponent.html":{}}}],["dialogdata",{"_index":413,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":232,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":607,"title":{},"body":{"interfaces/DialogData.html":{}}}],["dialogref.disableclose",{"_index":1032,"title":{},"body":{"components/SuccessDialogComponent.html":{}}}],["direction",{"_index":333,"title":{},"body":{"components/DefaultComponent.html":{}}}],["directive",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1170,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1175,"title":{},"body":{"index.html":{}}}],["display",{"_index":261,"title":{},"body":{"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionsComponent.html":{}}}],["displayedcolumns",{"_index":623,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["dist",{"_index":1174,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"type\").innerhtml",{"_index":1010,"title":{},"body":{"components/SidebarComponent.html":{}}}],["document.getelementbyid(\"username\").innerhtml",{"_index":1009,"title":{},"body":{"components/SidebarComponent.html":{}}}],["documentation",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["drawer",{"_index":336,"title":{},"body":{"components/DefaultComponent.html":{}}}],["duration",{"_index":716,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dynamic",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1187,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":118,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:16",{"_index":129,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:26",{"_index":123,"title":{},"body":{"classes/AppPage.html":{}}}],["e6e6e9",{"_index":263,"title":{},"body":{"components/DashboardComponent.html":{}}}],["element",{"_index":43,"title":{"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["element(by.css('app",{"_index":136,"title":{},"body":{"classes/AppPage.html":{}}}],["element.age",{"_index":1103,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.datetime",{"_index":1093,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.empfirstname",{"_index":1101,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.empid",{"_index":1092,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.emplastname",{"_index":1102,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.emptype",{"_index":1104,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.id",{"_index":1100,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.name",{"_index":549,"title":{},"body":{"interfaces/DialogData.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["element.price",{"_index":550,"title":{},"body":{"interfaces/DialogData.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["element.productid",{"_index":542,"title":{},"body":{"interfaces/DialogData.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["element.stock",{"_index":543,"title":{},"body":{"interfaces/DialogData.html":{},"components/InventoryComponent.html":{}}}],["element.transactionid",{"_index":1091,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["elementref",{"_index":421,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{}}}],["emits",{"_index":701,"title":{},"body":{"components/HeaderComponent.html":{}}}],["empfirstname",{"_index":658,"title":{},"body":{"interfaces/Element-2.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["empid",{"_index":610,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["emplastname",{"_index":659,"title":{},"body":{"interfaces/Element-2.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["employee",{"_index":614,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["employeedataform",{"_index":925,"title":{},"body":{"components/RegisterComponent.html":{}}}],["employees",{"_index":665,"title":{},"body":{"interfaces/Element-2.html":{},"components/UsersComponent.html":{}}}],["empty",{"_index":237,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SuccessDialogComponent.html":{}}}],["emptype",{"_index":660,"title":{},"body":{"interfaces/Element-2.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["end",{"_index":1186,"title":{},"body":{"index.html":{}}}],["enter",{"_index":572,"title":{},"body":{"interfaces/DialogData.html":{}}}],["entered",{"_index":842,"title":{},"body":{"components/ManagementComponent.html":{}}}],["enteredproduct",{"_index":568,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["enteredproduct.productid",{"_index":859,"title":{},"body":{"components/ManagementComponent.html":{}}}],["entry",{"_index":898,"title":{},"body":{"components/ManagementComponent.html":{},"components/RegisterComponent.html":{}}}],["entrycomponents",{"_index":348,"title":{},"body":{"modules/DefaultModule.html":{}}}],["equal",{"_index":598,"title":{},"body":{"interfaces/DialogData.html":{}}}],["error",{"_index":505,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["error:any",{"_index":589,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["event",{"_index":324,"title":{},"body":{"components/DefaultComponent.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["event.target",{"_index":635,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["eventemitter",{"_index":698,"title":{},"body":{"components/HeaderComponent.html":{}}}],["everything",{"_index":509,"title":{},"body":{"interfaces/DialogData.html":{}}}],["example",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/UsersComponent.html":{}}}],["execute",{"_index":1183,"title":{},"body":{"index.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["exports",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["f1f1f1",{"_index":1075,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["f4f4f6",{"_index":260,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManagementComponent.html":{}}}],["false",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{}}}],["field",{"_index":363,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["fields",{"_index":824,"title":{},"body":{"components/ManagementComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["files",{"_index":1165,"title":{},"body":{"index.html":{}}}],["filter",{"_index":667,"title":{},"body":{"interfaces/Element-2.html":{},"components/UsersComponent.html":{}}}],["filtered",{"_index":451,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["filteredoptions",{"_index":455,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["filters",{"_index":632,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{}}}],["filtervalue",{"_index":518,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":638,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["first",{"_index":247,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/Element-2.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["flag",{"_index":1177,"title":{},"body":{"index.html":{}}}],["flex",{"_index":281,"title":{},"body":{"components/DashboardComponent.html":{},"components/DefaultComponent.html":{}}}],["flexlayoutmodule",{"_index":984,"title":{},"body":{"modules/SharedModule.html":{}}}],["focus",{"_index":457,"title":{},"body":{"interfaces/DialogData.html":{}}}],["font",{"_index":290,"title":{},"body":{"components/DashboardComponent.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["footer",{"_index":676,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.css",{"_index":677,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":678,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":56,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["for(let",{"_index":496,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["form",{"_index":741,"title":{},"body":{"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["formarray",{"_index":423,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["formbuilder",{"_index":424,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["formcontrol",{"_index":763,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":425,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroupdirective",{"_index":938,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":384,"title":{},"body":{"modules/DefaultModule.html":{}}}],["found",{"_index":537,"title":{},"body":{"interfaces/DialogData.html":{}}}],["function",{"_index":238,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SuccessDialogComponent.html":{}}}],["functionality",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["further",{"_index":1188,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1168,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1153,"title":{},"body":{"index.html":{}}}],["getcurrentuser",{"_index":749,"title":{},"body":{"components/LoginComponent.html":{}}}],["getmarkupvalue",{"_index":957,"title":{},"body":{"components/SettingsComponent.html":{}}}],["getproductforms",{"_index":847,"title":{},"body":{"components/ManagementComponent.html":{}}}],["gets",{"_index":466,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["getting",{"_index":482,"title":{"index.html":{}},"body":{"interfaces/DialogData.html":{}}}],["gettitletext",{"_index":121,"title":{},"body":{"classes/AppPage.html":{}}}],["give",{"_index":419,"title":{},"body":{"interfaces/DialogData.html":{},"components/SuccessDialogComponent.html":{}}}],["global",{"_index":1019,"title":{},"body":{"components/SidebarComponent.html":{}}}],["go",{"_index":1190,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1195,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":256,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManagementComponent.html":{}}}],["guard",{"_index":174,"title":{"guards/AuthGuard.html":{},"guards/ManagerGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ManagerGuard.html":{},"overview.html":{}}}],["h1",{"_index":286,"title":{},"body":{"components/DashboardComponent.html":{}}}],["handle",{"_index":1076,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["header",{"_index":686,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["header'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["header.component.css",{"_index":687,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":688,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":58,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["heading",{"_index":125,"title":{},"body":{"classes/AppPage.html":{}}}],["height",{"_index":271,"title":{},"body":{"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["help",{"_index":1189,"title":{},"body":{"index.html":{}}}],["highcharts",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["homepage",{"_index":124,"title":{},"body":{"classes/AppPage.html":{}}}],["host",{"_index":332,"title":{},"body":{"components/DefaultComponent.html":{},"components/SidebarComponent.html":{}}}],["hover",{"_index":1079,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["html",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["htmlinputelement).value",{"_index":636,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["http",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["http://localhost:4200",{"_index":1163,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":380,"title":{},"body":{"modules/DefaultModule.html":{}}}],["httpclientmodule",{"_index":379,"title":{},"body":{"modules/DefaultModule.html":{}}}],["httphandler",{"_index":1048,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpinterceptor",{"_index":1054,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httprequest",{"_index":1046,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httprequest,httphandler,httpevent,httpinterceptor",{"_index":1052,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["i=0",{"_index":586,"title":{},"body":{"interfaces/DialogData.html":{}}}],["icon",{"_index":1021,"title":{},"body":{"components/SidebarComponent.html":{}}}],["id",{"_index":428,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["identifier",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["if(!inproductlist",{"_index":862,"title":{},"body":{"components/ManagementComponent.html":{}}}],["if(!markuppercentage",{"_index":882,"title":{},"body":{"components/ManagementComponent.html":{}}}],["if(element.name",{"_index":873,"title":{},"body":{"components/ManagementComponent.html":{}}}],["if(element.value.id",{"_index":545,"title":{},"body":{"interfaces/DialogData.html":{}}}],["if(element.value.name",{"_index":554,"title":{},"body":{"interfaces/DialogData.html":{}}}],["if(item.productid",{"_index":858,"title":{},"body":{"components/ManagementComponent.html":{}}}],["if(itemfound",{"_index":548,"title":{},"body":{"interfaces/DialogData.html":{}}}],["if(localstorage.getitem(\"emptype",{"_index":1003,"title":{},"body":{"components/SidebarComponent.html":{}}}],["if(product.value.id",{"_index":559,"title":{},"body":{"interfaces/DialogData.html":{}}}],["if(productscreated.length",{"_index":866,"title":{},"body":{"components/ManagementComponent.html":{}}}],["if(productsupdated.length",{"_index":868,"title":{},"body":{"components/ManagementComponent.html":{}}}],["if(this._auth.loggedin",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"guards/ManagerGuard.html":{}}}],["if(value",{"_index":541,"title":{},"body":{"interfaces/DialogData.html":{}}}],["image",{"_index":972,"title":{},"body":{"components/SettingsComponent.html":{},"components/SidebarComponent.html":{}}}],["img",{"_index":270,"title":{},"body":{"components/DashboardComponent.html":{}}}],["implements",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["important",{"_index":796,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["imports",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["inboxinventory",{"_index":1014,"title":{},"body":{"components/SidebarComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["information",{"_index":656,"title":{},"body":{"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/LoginComponent.html":{},"components/TransactionDialogComponent.html":{},"components/UsersComponent.html":{}}}],["initialiselist",{"_index":529,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["initialize",{"_index":528,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["initialized",{"_index":996,"title":{},"body":{"components/SidebarComponent.html":{}}}],["initializes",{"_index":462,"title":{},"body":{"interfaces/DialogData.html":{}}}],["inject",{"_index":668,"title":{},"body":{"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":671,"title":{},"body":{"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["injectable",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ManagerGuard.html":{},"components/SidebarComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["injectables",{"_index":1200,"title":{},"body":{"overview.html":{}}}],["inline",{"_index":903,"title":{},"body":{"components/ManagementComponent.html":{}}}],["inproductlist",{"_index":857,"title":{},"body":{"components/ManagementComponent.html":{}}}],["input",{"_index":454,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["input.value",{"_index":739,"title":{},"body":{"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["instance",{"_index":191,"title":{},"body":{"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["intercept",{"_index":1042,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(request",{"_index":1045,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor",{"_index":1035,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":392,"title":{},"body":{"modules/DefaultModule.html":{}}}],["interceptor.service.ts",{"_index":1038,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:16",{"_index":1044,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:23",{"_index":1051,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:33",{"_index":1049,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptors",{"_index":1036,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interface",{"_index":412,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{}},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":414,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"overview.html":{}}}],["inventory",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{}}}],["inventory'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["inventory.component.css",{"_index":652,"title":{},"body":{"interfaces/Element.html":{},"components/InventoryComponent.html":{}}}],["inventory.component.html",{"_index":651,"title":{},"body":{"interfaces/Element.html":{},"components/InventoryComponent.html":{}}}],["inventorycomponent",{"_index":60,"title":{"components/InventoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Element.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["item",{"_index":440,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Element.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["itemfound",{"_index":539,"title":{},"body":{"interfaces/DialogData.html":{}}}],["itemquantity",{"_index":448,"title":{},"body":{"interfaces/DialogData.html":{}}}],["items",{"_index":283,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/ManagementComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{}}}],["items.foreach(element",{"_index":580,"title":{},"body":{"interfaces/DialogData.html":{}}}],["itemsform",{"_index":434,"title":{},"body":{"interfaces/DialogData.html":{}}}],["justify",{"_index":282,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["jwt",{"_index":1039,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["karma",{"_index":1185,"title":{},"body":{"index.html":{}}}],["keyevent",{"_index":573,"title":{},"body":{"interfaces/DialogData.html":{}}}],["keyevent.keycode",{"_index":575,"title":{},"body":{"interfaces/DialogData.html":{}}}],["last",{"_index":661,"title":{},"body":{"interfaces/Element-2.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["layout",{"_index":298,"title":{},"body":{"components/DefaultComponent.html":{},"components/HeaderComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["layouts/default/default.component",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["layouts/default/default.module",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":288,"title":{},"body":{"components/DashboardComponent.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["legend",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["li",{"_index":727,"title":{},"body":{"components/HeaderComponent.html":{}}}],["line",{"_index":818,"title":{},"body":{"components/ManagementComponent.html":{}}}],["list",{"_index":360,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/HeaderComponent.html":{},"components/ManagementComponent.html":{},"modules/SharedModule.html":{},"components/TransactionDialogComponent.html":{},"components/UsersComponent.html":{}}}],["literal",{"_index":1209,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["localstorage",{"_index":756,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["localstorage.getitem(\"empfirstname",{"_index":1007,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localstorage.getitem(\"emplastname",{"_index":1008,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localstorage.getitem(\"emptype",{"_index":1005,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localstorage.getitem('emptype",{"_index":920,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["localstorage.setitem('empfirstname",{"_index":785,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('emplastname",{"_index":787,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('emptype",{"_index":788,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('token",{"_index":775,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"components/LoginComponent.html":{},"guards/ManagerGuard.html":{}}}],["logging",{"_index":755,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["login.component.css",{"_index":745,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":746,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":62,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginfail",{"_index":797,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuserdata",{"_index":747,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":689,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["makes",{"_index":771,"title":{},"body":{"components/LoginComponent.html":{}}}],["manage",{"_index":800,"title":{},"body":{"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{}}}],["management",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/ManagementComponent.html":{}}}],["management'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["management.component.css",{"_index":801,"title":{},"body":{"components/ManagementComponent.html":{}}}],["management.component.html",{"_index":802,"title":{},"body":{"components/ManagementComponent.html":{}}}],["managementcomponent",{"_index":64,"title":{"components/ManagementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":908,"title":{},"body":{"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{}}}],["managerguard",{"_index":148,"title":{"guards/ManagerGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/ManagerGuard.html":{},"coverage.html":{}}}],["managers",{"_index":922,"title":{},"body":{"components/RegisterComponent.html":{}}}],["margin",{"_index":264,"title":{},"body":{"components/DashboardComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["markup",{"_index":948,"title":{},"body":{"components/SettingsComponent.html":{}}}],["markuppercentage",{"_index":880,"title":{},"body":{"components/ManagementComponent.html":{}}}],["markupprice",{"_index":883,"title":{},"body":{"components/ManagementComponent.html":{}}}],["markupvalue",{"_index":966,"title":{},"body":{"components/SettingsComponent.html":{}}}],["markupvalue}).subscribe",{"_index":968,"title":{},"body":{"components/SettingsComponent.html":{}}}],["mat",{"_index":255,"title":{},"body":{"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["mat_dialog_data",{"_index":239,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["matautocompletemodule",{"_index":397,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matbuttonmodule",{"_index":373,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":382,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["matcheckboxmodule",{"_index":375,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matching",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["matchipsmodule",{"_index":377,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matdialog",{"_index":426,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/ManagementComponent.html":{},"components/TransactionsComponent.html":{}}}],["matdialogconfig",{"_index":427,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["matdialogmodule",{"_index":400,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matdialogref",{"_index":230,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["matdividermodule",{"_index":355,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":361,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matgridlistmodule",{"_index":358,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["maticonmodule",{"_index":395,"title":{},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":371,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matlistmodule",{"_index":988,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":986,"title":{},"body":{"modules/SharedModule.html":{}}}],["matpaginator",{"_index":615,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["matpaginatormodule",{"_index":393,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matselectmodule",{"_index":364,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matsidenavmodule",{"_index":353,"title":{},"body":{"modules/DefaultModule.html":{}}}],["matsnackbar",{"_index":696,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["matsnackbarmodule",{"_index":385,"title":{},"body":{"modules/DefaultModule.html":{}}}],["mattabledatasource",{"_index":616,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["mattabledatasource(res",{"_index":629,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["mattabledatasource(this.data.items",{"_index":672,"title":{},"body":{"interfaces/Element-3.html":{},"components/TransactionDialogComponent.html":{}}}],["mattablemodule",{"_index":366,"title":{},"body":{"modules/DefaultModule.html":{}}}],["mattoolbarmodule",{"_index":982,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":791,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["memberof",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["menu",{"_index":722,"title":{},"body":{"components/HeaderComponent.html":{}}}],["message",{"_index":769,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":120,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["middle",{"_index":1023,"title":{},"body":{"components/SidebarComponent.html":{}}}],["miscellaneous",{"_index":1202,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modification",{"_index":624,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["module",{"_index":88,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":90,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/dashboard/dashboard.component",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/inventory/inventory.component",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/login/login.component",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/management/management.component",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/point",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/register/register.component",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/settings/settings.component",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/transactions/transactions.component",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/users/users.component",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["more",{"_index":597,"title":{},"body":{"interfaces/DialogData.html":{},"index.html":{}}}],["much",{"_index":600,"title":{},"body":{"interfaces/DialogData.html":{}}}],["multi",{"_index":411,"title":{},"body":{"modules/DefaultModule.html":{}}}],["myform",{"_index":803,"title":{},"body":{"components/ManagementComponent.html":{}}}],["name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["names",{"_index":438,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["navigate",{"_index":130,"title":{},"body":{"classes/AppPage.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["navigates",{"_index":761,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigateto",{"_index":122,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{}}}],["new",{"_index":481,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["newtransaction",{"_index":486,"title":{},"body":{"interfaces/DialogData.html":{}}}],["next",{"_index":1047,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["next.handle(request",{"_index":1059,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["ng",{"_index":1160,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":953,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ngform",{"_index":931,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ngmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":228,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["none",{"_index":729,"title":{},"body":{"components/HeaderComponent.html":{}}}],["number",{"_index":420,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["number(enteredproduct.price",{"_index":569,"title":{},"body":{"interfaces/DialogData.html":{}}}],["number(markupprice",{"_index":886,"title":{},"body":{"components/ManagementComponent.html":{}}}],["number(productvalues.costprice",{"_index":887,"title":{},"body":{"components/ManagementComponent.html":{}}}],["number(total.tofixed(2",{"_index":570,"title":{},"body":{"interfaces/DialogData.html":{}}}],["numbers",{"_index":441,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["observable",{"_index":1050,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["old",{"_index":841,"title":{},"body":{"components/ManagementComponent.html":{}}}],["onbuttonclick",{"_index":690,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onbuttonclick(event",{"_index":705,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onbuttonclick(event):void",{"_index":711,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onclick",{"_index":692,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onenterpress(keyevent",{"_index":574,"title":{},"body":{"interfaces/DialogData.html":{}}}],["oninit",{"_index":224,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["onitnit",{"_index":253,"title":{},"body":{"components/DashboardComponent.html":{}}}],["onsubmit",{"_index":750,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["open",{"_index":322,"title":{},"body":{"components/DefaultComponent.html":{}}}],["opendialog",{"_index":810,"title":{},"body":{"components/ManagementComponent.html":{},"components/TransactionsComponent.html":{}}}],["opendialog(change",{"_index":602,"title":{},"body":{"interfaces/DialogData.html":{}}}],["opendialog(data",{"_index":645,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["opens",{"_index":310,"title":{},"body":{"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/ManagementComponent.html":{},"components/TransactionsComponent.html":{}}}],["option",{"_index":896,"title":{},"body":{"components/ManagementComponent.html":{}}}],["option.tolowercase().includes(filtervalue",{"_index":521,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["optional",{"_index":193,"title":{},"body":{"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DefaultComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["options",{"_index":452,"title":{},"body":{"interfaces/DialogData.html":{}}}],["out",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/DefaultModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":294,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent.html":{}}}],["output",{"_index":709,"title":{},"body":{"components/HeaderComponent.html":{}}}],["outputs",{"_index":691,"title":{},"body":{"components/HeaderComponent.html":{}}}],["overview",{"_index":1197,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1130,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":339,"title":{},"body":{"components/DefaultComponent.html":{},"components/FooterComponent.html":{}}}],["page",{"_index":773,"title":{},"body":{"components/LoginComponent.html":{}}}],["pages",{"_index":1011,"title":{},"body":{"components/SidebarComponent.html":{}}}],["paginator",{"_index":625,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["paid",{"_index":446,"title":{},"body":{"interfaces/DialogData.html":{}}}],["panelclass",{"_index":718,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["param",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["parameters",{"_index":192,"title":{},"body":{"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DefaultComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["password",{"_index":764,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payment",{"_index":459,"title":{},"body":{"interfaces/DialogData.html":{}}}],["people",{"_index":1020,"title":{},"body":{"components/SidebarComponent.html":{}}}],["person_outline",{"_index":725,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pharmacy",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["pharmacypossystem",{"_index":1152,"title":{},"body":{"index.html":{}}}],["please",{"_index":789,"title":{},"body":{"components/LoginComponent.html":{}}}],["point",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["point_of_salepoint",{"_index":1013,"title":{},"body":{"components/SidebarComponent.html":{}}}],["pointofsalecomponent",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pos",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["presses",{"_index":571,"title":{},"body":{"interfaces/DialogData.html":{},"components/RegisterComponent.html":{}}}],["price",{"_index":429,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Element.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["private",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/TransactionsComponent.html":{}}}],["prod",{"_index":1176,"title":{},"body":{"index.html":{}}}],["product",{"_index":222,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionDialogComponent.html":{},"miscellaneous/typealiases.html":{}}}],["product.quantity",{"_index":581,"title":{},"body":{"interfaces/DialogData.html":{}}}],["product.value.quantity",{"_index":560,"title":{},"body":{"interfaces/DialogData.html":{}}}],["productentry",{"_index":525,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["productforms",{"_index":468,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["productid",{"_index":649,"title":{},"body":{"interfaces/Element.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["production",{"_index":1178,"title":{},"body":{"index.html":{}}}],["productitemnumbers",{"_index":442,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["productlist",{"_index":437,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["productnames",{"_index":439,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["products",{"_index":242,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["productscreated",{"_index":855,"title":{},"body":{"components/ManagementComponent.html":{}}}],["productscreated.push(enteredproduct",{"_index":863,"title":{},"body":{"components/ManagementComponent.html":{}}}],["productsentered",{"_index":563,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["productsentered.foreach(element",{"_index":567,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["productstructure",{"_index":1207,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["productsupdated",{"_index":856,"title":{},"body":{"components/ManagementComponent.html":{}}}],["productsupdated.push(enteredproduct",{"_index":860,"title":{},"body":{"components/ManagementComponent.html":{}}}],["productvalues",{"_index":871,"title":{},"body":{"components/ManagementComponent.html":{}}}],["productvalues.costprice",{"_index":884,"title":{},"body":{"components/ManagementComponent.html":{}}}],["productvalues.name",{"_index":874,"title":{},"body":{"components/ManagementComponent.html":{}}}],["productvalues.productid",{"_index":875,"title":{},"body":{"components/ManagementComponent.html":{}}}],["programmatically",{"_index":318,"title":{},"body":{"components/DefaultComponent.html":{}}}],["project",{"_index":301,"title":{},"body":{"components/DefaultComponent.html":{},"index.html":{}}}],["promise",{"_index":128,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["property",{"_index":700,"title":{},"body":{"components/HeaderComponent.html":{}}}],["protractor",{"_index":133,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":409,"title":{},"body":{"modules/DefaultModule.html":{}}}],["providedin",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"guards/ManagerGuard.html":{},"components/SidebarComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["provides",{"_index":297,"title":{},"body":{"components/DefaultComponent.html":{}}}],["public",{"_index":304,"title":{},"body":{"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element-3.html":{},"components/HeaderComponent.html":{},"components/ManagementComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{}}}],["put",{"_index":456,"title":{},"body":{"interfaces/DialogData.html":{}}}],["qty",{"_index":579,"title":{},"body":{"interfaces/DialogData.html":{}}}],["quantity",{"_index":430,"title":{},"body":{"interfaces/DialogData.html":{}}}],["reactiveformsmodule",{"_index":369,"title":{},"body":{"modules/DefaultModule.html":{}}}],["readme",{"_index":1191,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":467,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["receive",{"_index":601,"title":{},"body":{"interfaces/DialogData.html":{}}}],["red",{"_index":798,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirects",{"_index":915,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["reference",{"_index":126,"title":{},"body":{"classes/AppPage.html":{}}}],["register",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["register.component.css",{"_index":923,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":924,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":69,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":662,"title":{},"body":{"interfaces/Element-2.html":{},"components/RegisterComponent.html":{},"components/UsersComponent.html":{}}}],["registerfail",{"_index":945,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":929,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":1164,"title":{},"body":{"index.html":{}}}],["request",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["request.clone",{"_index":1055,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["requests",{"_index":1041,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["res",{"_index":493,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{}}}],["res.access_token",{"_index":776,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.empfirstname",{"_index":786,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.emplastname",{"_index":783,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.emptype",{"_index":784,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.transactionid",{"_index":587,"title":{},"body":{"interfaces/DialogData.html":{}}}],["res:any",{"_index":491,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["reserved",{"_index":683,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["respective",{"_index":997,"title":{},"body":{"components/SidebarComponent.html":{}}}],["response",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{}}}],["result",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result.id",{"_index":942,"title":{},"body":{"components/RegisterComponent.html":{}}}],["results",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieved",{"_index":757,"title":{},"body":{"components/LoginComponent.html":{}}}],["return",{"_index":134,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/DialogData.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"interceptors/TokenInterceptorService.html":{}}}],["returns",{"_index":127,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["right",{"_index":1024,"title":{},"body":{"components/SidebarComponent.html":{}}}],["rights",{"_index":682,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"guards/ManagerGuard.html":{},"components/SidebarComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["root'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["router",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"guards/ManagerGuard.html":{}}}],["routermodule",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forroot(routes",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":917,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["routes",{"_index":143,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":556,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["row(transactionid",{"_index":642,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["run",{"_index":1159,"title":{},"body":{"index.html":{}}}],["running",{"_index":1179,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1053,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["sale",{"_index":254,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["sale'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["sale.component",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{},"components/SuccessDialogComponent.html":{}}}],["sale.component.css",{"_index":433,"title":{},"body":{"interfaces/DialogData.html":{}}}],["sale.component.html",{"_index":432,"title":{},"body":{"interfaces/DialogData.html":{}}}],["sale.component.ts",{"_index":415,"title":{},"body":{"interfaces/DialogData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sale/point",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sale/success",{"_index":403,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"coverage.html":{}}}],["sales",{"_index":827,"title":{},"body":{"components/ManagementComponent.html":{},"components/RegisterComponent.html":{}}}],["scaffolding",{"_index":1167,"title":{},"body":{"index.html":{}}}],["scale(1.04",{"_index":275,"title":{},"body":{"components/DashboardComponent.html":{}}}],["scanner",{"_index":534,"title":{},"body":{"interfaces/DialogData.html":{}}}],["scans",{"_index":531,"title":{},"body":{"interfaces/DialogData.html":{}}}],["scrollbar",{"_index":1069,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["search",{"_index":552,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["sections",{"_index":911,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["see",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/DialogData.html":{},"guards/ManagerGuard.html":{}}}],["sees",{"_index":248,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["selects",{"_index":551,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["sellingprice",{"_index":885,"title":{},"body":{"components/ManagementComponent.html":{}}}],["send",{"_index":416,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["serve",{"_index":1161,"title":{},"body":{"index.html":{}}}],["server",{"_index":1158,"title":{},"body":{"index.html":{}}}],["service",{"_index":195,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{}}}],["set",{"_index":316,"title":{},"body":{"components/DefaultComponent.html":{},"components/SettingsComponent.html":{}}}],["setheaders",{"_index":1056,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["setmargin",{"_index":954,"title":{},"body":{"components/SettingsComponent.html":{}}}],["setmarkupvalue",{"_index":959,"title":{},"body":{"components/SettingsComponent.html":{}}}],["sets",{"_index":508,"title":{},"body":{"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{}}}],["setsidebaropen",{"_index":306,"title":{},"body":{"components/DefaultComponent.html":{}}}],["setsidebaropen(status",{"_index":313,"title":{},"body":{"components/DefaultComponent.html":{}}}],["settimeout",{"_index":503,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{}}}],["setting",{"_index":483,"title":{},"body":{"interfaces/DialogData.html":{}}}],["settings",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{}}}],["settings'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["settings.component.css",{"_index":950,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":951,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":71,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setuserdetails",{"_index":993,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setuserdetails(username",{"_index":998,"title":{},"body":{"components/SidebarComponent.html":{}}}],["shared",{"_index":674,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["shared/components/sidebar/sidebar.component",{"_index":770,"title":{},"body":{"components/LoginComponent.html":{}}}],["sharedmodule",{"_index":345,"title":{"modules/SharedModule.html":{}},"body":{"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":220,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element-3.html":{},"components/TransactionDialogComponent.html":{}}}],["showerrormessage",{"_index":748,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["shows",{"_index":762,"title":{},"body":{"components/LoginComponent.html":{}}}],["sidebar",{"_index":311,"title":{},"body":{"components/DefaultComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["sidebar.component.css",{"_index":991,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":992,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":73,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebaropen",{"_index":305,"title":{},"body":{"components/DefaultComponent.html":{}}}],["site",{"_index":912,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["size",{"_index":291,"title":{},"body":{"components/DashboardComponent.html":{},"components/InventoryComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["snackbar",{"_index":720,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["sock",{"_index":650,"title":{},"body":{"interfaces/Element.html":{},"components/InventoryComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"index.html":{}}}],["span')).gettext",{"_index":138,"title":{},"body":{"classes/AppPage.html":{}}}],["src/.../auth.service.ts",{"_index":1208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../management.component.ts",{"_index":1205,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../point",{"_index":1206,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:15",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:33",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.service",{"_index":962,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/auth/auth.service.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/auth/manager.guard.ts",{"_index":906,"title":{},"body":{"guards/ManagerGuard.html":{},"coverage.html":{}}}],["src/app/auth/manager.guard.ts:15",{"_index":913,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["src/app/auth/manager.guard.ts:31",{"_index":914,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["src/app/auth/token",{"_index":1037,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["src/app/layouts/default/default.component.ts",{"_index":296,"title":{},"body":{"components/DefaultComponent.html":{},"coverage.html":{}}}],["src/app/layouts/default/default.component.ts:24",{"_index":308,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:38",{"_index":309,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:52",{"_index":320,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:62",{"_index":314,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.module.ts",{"_index":347,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/dashboard/dashboard.component",{"_index":388,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/dashboard/dashboard.component.ts",{"_index":245,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/dashboard.component.ts:15",{"_index":251,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/dashboard/dashboard.component.ts:28",{"_index":252,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/inventory/inventory.component",{"_index":357,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/inventory/inventory.component.ts",{"_index":648,"title":{},"body":{"interfaces/Element.html":{},"components/InventoryComponent.html":{},"coverage.html":{}}}],["src/app/modules/inventory/inventory.component.ts:121",{"_index":733,"title":{},"body":{"components/InventoryComponent.html":{}}}],["src/app/modules/inventory/inventory.component.ts:61",{"_index":735,"title":{},"body":{"components/InventoryComponent.html":{}}}],["src/app/modules/inventory/inventory.component.ts:69",{"_index":732,"title":{},"body":{"components/InventoryComponent.html":{}}}],["src/app/modules/inventory/inventory.component.ts:83",{"_index":736,"title":{},"body":{"components/InventoryComponent.html":{}}}],["src/app/modules/inventory/inventory.component.ts:91",{"_index":738,"title":{},"body":{"components/InventoryComponent.html":{}}}],["src/app/modules/inventory/inventory.component.ts:98",{"_index":734,"title":{},"body":{"components/InventoryComponent.html":{}}}],["src/app/modules/login/login.component",{"_index":389,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/login/login.component.ts",{"_index":744,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/modules/login/login.component.ts:28",{"_index":767,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:35",{"_index":765,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:38",{"_index":752,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:58",{"_index":758,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:66",{"_index":759,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/login/login.component.ts:92",{"_index":753,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/management/course",{"_index":216,"title":{},"body":{"components/CourseDialogComponent.html":{},"modules/DefaultModule.html":{},"coverage.html":{}}}],["src/app/modules/management/management.component",{"_index":368,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/management/management.component.ts",{"_index":799,"title":{},"body":{"components/ManagementComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/management/management.component.ts:106",{"_index":848,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:115",{"_index":817,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:133",{"_index":831,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:146",{"_index":816,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:158",{"_index":829,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:175",{"_index":836,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:191",{"_index":838,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:233",{"_index":822,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:252",{"_index":826,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:268",{"_index":820,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:279",{"_index":832,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:288",{"_index":834,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:35",{"_index":843,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:41",{"_index":845,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:48",{"_index":846,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:55",{"_index":844,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:62",{"_index":815,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/management/management.component.ts:78",{"_index":833,"title":{},"body":{"components/ManagementComponent.html":{}}}],["src/app/modules/point",{"_index":401,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"components/SuccessDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/register/register.component",{"_index":390,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/register/register.component.ts",{"_index":921,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/modules/register/register.component.ts:28",{"_index":934,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/register/register.component.ts:35",{"_index":936,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/register/register.component.ts:42",{"_index":930,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/register/register.component.ts:48",{"_index":926,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/register/register.component.ts:63",{"_index":927,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/register/register.component.ts:71",{"_index":928,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/settings/settings.component",{"_index":399,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/settings/settings.component.ts",{"_index":946,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/modules/settings/settings.component.ts:25",{"_index":961,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:32",{"_index":955,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:46",{"_index":956,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:56",{"_index":958,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/transactions/transaction",{"_index":405,"title":{},"body":{"modules/DefaultModule.html":{},"interfaces/Element-3.html":{},"components/TransactionDialogComponent.html":{},"coverage.html":{}}}],["src/app/modules/transactions/transactions.component",{"_index":407,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/transactions/transactions.component.ts",{"_index":608,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["src/app/modules/transactions/transactions.component.ts:102",{"_index":1089,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/transactions/transactions.component.ts:109",{"_index":1090,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/transactions/transactions.component.ts:116",{"_index":1086,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/transactions/transactions.component.ts:134",{"_index":1085,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/transactions/transactions.component.ts:151",{"_index":1088,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/transactions/transactions.component.ts:173",{"_index":1087,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/transactions/transactions.component.ts:87",{"_index":1084,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/users/users.component",{"_index":408,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/modules/users/users.component.ts",{"_index":655,"title":{},"body":{"interfaces/Element-2.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/modules/users/users.component.ts:114",{"_index":1096,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/modules/users/users.component.ts:68",{"_index":1095,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/modules/users/users.component.ts:82",{"_index":1098,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/modules/users/users.component.ts:89",{"_index":1099,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/modules/users/users.component.ts:96",{"_index":1097,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/shared/components/footer/footer.component.ts",{"_index":673,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/footer/footer.component.ts:15",{"_index":679,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/components/footer/footer.component.ts:28",{"_index":680,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/components/header/header.component.ts",{"_index":685,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/header/header.component.ts:26",{"_index":697,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:35",{"_index":708,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:42",{"_index":704,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:51",{"_index":706,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/header/header.component.ts:60",{"_index":702,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts",{"_index":990,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:25",{"_index":1002,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:31",{"_index":994,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:38",{"_index":1000,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:45",{"_index":995,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/components/sidebar/sidebar.component.ts:59",{"_index":999,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/shared.module",{"_index":352,"title":{},"body":{"modules/DefaultModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":978,"title":{},"body":{"modules/SharedModule.html":{}}}],["started",{"_index":1151,"title":{"index.html":{}},"body":{}}],["state",{"_index":327,"title":{},"body":{"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{}}}],["statements",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":933,"title":{},"body":{"components/RegisterComponent.html":{}}}],["status",{"_index":317,"title":{},"body":{"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"components/RegisterComponent.html":{}}}],["stock",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/SidebarComponent.html":{}}}],["store",{"_index":766,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagementComponent.html":{}}}],["stored",{"_index":1173,"title":{},"body":{"index.html":{}}}],["stores",{"_index":325,"title":{},"body":{"components/DefaultComponent.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/TransactionsComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{},"components/SidebarComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["structure",{"_index":740,"title":{},"body":{"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["style",{"_index":728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["substring",{"_index":516,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["subtitle",{"_index":1025,"title":{},"body":{"components/SidebarComponent.html":{}}}],["succesful",{"_index":1033,"title":{},"body":{"components/SuccessDialogComponent.html":{}}}],["succesfully",{"_index":243,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["success",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["successdialogcomponent",{"_index":75,"title":{"components/SuccessDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["successful",{"_index":221,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["successfully",{"_index":715,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["support",{"_index":1192,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":772,"title":{},"body":{"components/LoginComponent.html":{}}}],["svg",{"_index":1193,"title":{},"body":{"modules.html":{}}}],["system",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Element-2.html":{},"components/HeaderComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/UsersComponent.html":{}}}],["table",{"_index":620,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tablebutton",{"_index":1094,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["test",{"_index":1182,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1181,"title":{},"body":{"index.html":{}}}],["text",{"_index":267,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this._auth.addproductstotransaction(allproductids",{"_index":591,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this._auth.createproduct(createdproducts).subscribe",{"_index":853,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this._auth.getcurrentuser().subscribe",{"_index":781,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._auth.getemployees().subscribe",{"_index":666,"title":{},"body":{"interfaces/Element-2.html":{},"components/UsersComponent.html":{}}}],["this._auth.getmarkupvalue",{"_index":964,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this._auth.getmarkupvalue()/100",{"_index":881,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this._auth.getproducts().subscribe",{"_index":490,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{},"components/ManagementComponent.html":{}}}],["this._auth.gettransactiondetail(transactionid).subscribe",{"_index":643,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["this._auth.gettransactions().subscribe",{"_index":627,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["this._auth.loginuser(this.loginuserdata.value).subscribe",{"_index":774,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._auth.logoutuser",{"_index":329,"title":{},"body":{"components/DefaultComponent.html":{},"components/LoginComponent.html":{}}}],["this._auth.registeruser(this.employeedataform.value).subscribe",{"_index":939,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._auth.setmarkupvalue(markupvalue",{"_index":969,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this._auth.updatemarkup({\"markupval",{"_index":967,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this._auth.updateproduct(updatedproducts).subscribe",{"_index":854,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this._default.setsidebaropen(false",{"_index":721,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this._default.setsidebaropen(true",{"_index":779,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._filter(productentry",{"_index":527,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this._router.navigate",{"_index":778,"title":{},"body":{"components/LoginComponent.html":{},"guards/ManagerGuard.html":{}}}],["this._router.navigate(['/login",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._sidebar.setuserdetails(res.empfirstname",{"_index":782,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._snackbar.open(\"logged",{"_index":714,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["this._snackbar.open(\"registered",{"_index":941,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.activetransaction",{"_index":499,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.addproductstotransaction(allproductids",{"_index":588,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.amoutpaid",{"_index":594,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.auth.gettoken",{"_index":1058,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.authservice.logoutuser",{"_index":713,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.calculateitemquantity",{"_index":478,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.calculateprice(index",{"_index":547,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.calculatetotalprice",{"_index":477,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.createproduct(productscreated",{"_index":867,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.currentmarkupvalue",{"_index":963,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.datasource",{"_index":628,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["this.datasource.filter",{"_index":637,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["this.datasource.paginator",{"_index":630,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["this.datasource.paginator.firstpage",{"_index":639,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["this.dialog.open(coursedialogcomponent",{"_index":895,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.dialog.open(successdialogcomponent",{"_index":603,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.dialog.open(transactiondialogcomponent",{"_index":646,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["this.dialogref.close",{"_index":241,"title":{},"body":{"components/CourseDialogComponent.html":{},"interfaces/Element-3.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{}}}],["this.filteredoptions",{"_index":526,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.form.resetform",{"_index":940,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formbuilder.array",{"_index":465,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.formbuilder.group",{"_index":464,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.getcurrentuser",{"_index":777,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.input.nativeelement.focus",{"_index":504,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{}}}],["this.input.nativeelement.value",{"_index":512,"title":{},"body":{"interfaces/DialogData.html":{},"components/SettingsComponent.html":{}}}],["this.itemquantity",{"_index":501,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.itemsform",{"_index":463,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.itemsform.get('products",{"_index":469,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.itemsform.get('products').value",{"_index":578,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.myform",{"_index":850,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.myform.get('products",{"_index":851,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.name.nativeelement.value",{"_index":502,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.newtransaction",{"_index":595,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.ngoninit",{"_index":865,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.onclick.emit",{"_index":712,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.opendialog",{"_index":864,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.opendialog(change.tofixed(2",{"_index":596,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.opendialog(res",{"_index":644,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["this.paginator",{"_index":631,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["this.payment.nativeelement.value",{"_index":479,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.productforms.at(i",{"_index":558,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.productforms.at(i).get('name').setvalue(`${element.name",{"_index":877,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.productforms.at(i).get('price').setvalue(`${element.price",{"_index":878,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.productforms.at(i).get('price').setvalue(price.tofixed(2",{"_index":561,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.productforms.at(i).get('price').setvalue(sellingprice",{"_index":889,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.productforms.at(i).get('productid').setvalue(`${element.productid",{"_index":876,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.productforms.at(i).get('stock').setvalue(`${element.stock",{"_index":879,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.productforms.at(i).value",{"_index":872,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.productforms.at(i).value.name",{"_index":890,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.productforms.at(index).get('quantity').setvalue(element.value.quantity",{"_index":546,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.productforms.controls.foreach((element",{"_index":544,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.productforms.push(product",{"_index":473,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productforms.removeat(i",{"_index":476,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productforms.value",{"_index":564,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productitemnumbers",{"_index":495,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productitemnumbers.push(product.productid",{"_index":498,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productlist",{"_index":492,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productlist.foreach(element",{"_index":540,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productnames",{"_index":494,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productnames.filter(option",{"_index":520,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.productnames.push(product.name",{"_index":497,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["this.setsidebaropen(true",{"_index":328,"title":{},"body":{"components/DefaultComponent.html":{}}}],["this.showerrormessage",{"_index":780,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.sidebaropen",{"_index":331,"title":{},"body":{"components/DefaultComponent.html":{}}}],["this.totalprice",{"_index":500,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.transactionvalid",{"_index":480,"title":{},"body":{"interfaces/DialogData.html":{}}}],["this.type",{"_index":1004,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.updateproduct(productsupdated",{"_index":870,"title":{},"body":{"components/ManagementComponent.html":{}}}],["this.username",{"_index":1006,"title":{},"body":{"components/SidebarComponent.html":{}}}],["thumb",{"_index":1077,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["thumb:hover",{"_index":1080,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["tile",{"_index":257,"title":{},"body":{"components/DashboardComponent.html":{},"components/ManagementComponent.html":{}}}],["tile:focus",{"_index":293,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tile:hover",{"_index":273,"title":{},"body":{"components/DashboardComponent.html":{}}}],["time",{"_index":613,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["toggles",{"_index":321,"title":{},"body":{"components/DefaultComponent.html":{}}}],["togglesidebar",{"_index":307,"title":{},"body":{"components/DefaultComponent.html":{}}}],["togglesidebar(event",{"_index":319,"title":{},"body":{"components/DefaultComponent.html":{}}}],["togglesidebar(event):void",{"_index":330,"title":{},"body":{"components/DefaultComponent.html":{}}}],["token",{"_index":1040,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["tokeninterceptorservice",{"_index":346,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"modules/DefaultModule.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":1017,"title":{},"body":{"components/SidebarComponent.html":{}}}],["top",{"_index":793,"title":{},"body":{"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{}}}],["total",{"_index":443,"title":{},"body":{"interfaces/DialogData.html":{}}}],["totalprice",{"_index":444,"title":{},"body":{"interfaces/DialogData.html":{}}}],["track",{"_index":1074,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["transaction",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["transactiondialogcomponent",{"_index":77,"title":{"components/TransactionDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["transactionid",{"_index":611,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["transactions",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["transactions'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["transactions.component",{"_index":669,"title":{},"body":{"interfaces/Element-3.html":{},"components/TransactionDialogComponent.html":{}}}],["transactions.component.css",{"_index":619,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["transactions.component.html",{"_index":618,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":79,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["transactionvalid",{"_index":450,"title":{},"body":{"interfaces/DialogData.html":{}}}],["transform",{"_index":274,"title":{},"body":{"components/DashboardComponent.html":{}}}],["transid",{"_index":585,"title":{},"body":{"interfaces/DialogData.html":{}}}],["transid).subscribe",{"_index":592,"title":{},"body":{"interfaces/DialogData.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["triggers",{"_index":707,"title":{},"body":{"components/HeaderComponent.html":{}}}],["true",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SuccessDialogComponent.html":{}}}],["tslib",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":1018,"title":{},"body":{"components/SidebarComponent.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CourseDialogComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"interceptors/TokenInterceptorService.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1203,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":530,"title":{},"body":{"interfaces/DialogData.html":{}}}],["ul",{"_index":726,"title":{},"body":{"components/HeaderComponent.html":{}}}],["unit",{"_index":1180,"title":{},"body":{"index.html":{}}}],["update",{"_index":899,"title":{},"body":{"components/ManagementComponent.html":{}}}],["updated",{"_index":244,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["updatedproducts",{"_index":837,"title":{},"body":{"components/ManagementComponent.html":{}}}],["updateproduct",{"_index":811,"title":{},"body":{"components/ManagementComponent.html":{}}}],["updateproduct(updatedproducts",{"_index":835,"title":{},"body":{"components/ManagementComponent.html":{}}}],["updates",{"_index":223,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/ManagementComponent.html":{}}}],["updatestock",{"_index":812,"title":{},"body":{"components/ManagementComponent.html":{}}}],["updating",{"_index":840,"title":{},"body":{"components/ManagementComponent.html":{}}}],["url",{"_index":132,"title":{},"body":{"classes/AppPage.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":973,"title":{},"body":{"components/SettingsComponent.html":{},"components/SidebarComponent.html":{}}}],["urltree",{"_index":918,"title":{},"body":{"guards/ManagerGuard.html":{}}}],["use",{"_index":1169,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":410,"title":{},"body":{"modules/DefaultModule.html":{}}}],["used",{"_index":315,"title":{},"body":{"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["user",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"guards/ManagerGuard.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["user's",{"_index":633,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/TransactionsComponent.html":{}}}],["username",{"_index":754,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["users",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/Element-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["users.component.css",{"_index":664,"title":{},"body":{"interfaces/Element-2.html":{},"components/UsersComponent.html":{}}}],["users.component.html",{"_index":663,"title":{},"body":{"interfaces/Element-2.html":{},"components/UsersComponent.html":{}}}],["userscomponent",{"_index":81,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"modules/DefaultModule.html":{},"interfaces/Element-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usertype",{"_index":1001,"title":{},"body":{"components/SidebarComponent.html":{}}}],["using",{"_index":532,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["utility",{"_index":900,"title":{},"body":{"components/ManagementComponent.html":{}}}],["valid",{"_index":449,"title":{},"body":{"interfaces/DialogData.html":{}}}],["validators",{"_index":937,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["value.tostring().tolowercase",{"_index":519,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["var",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":768,"title":{},"body":{"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["variables",{"_index":485,"title":{},"body":{"interfaces/DialogData.html":{},"components/SidebarComponent.html":{}}}],["various",{"_index":484,"title":{},"body":{"interfaces/DialogData.html":{},"components/ManagementComponent.html":{}}}],["version",{"_index":1155,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1022,"title":{},"body":{"components/SidebarComponent.html":{}}}],["via",{"_index":1184,"title":{},"body":{"index.html":{}}}],["view",{"_index":640,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"components/InventoryComponent.html":{},"components/TransactionsComponent.html":{}}}],["viewchild",{"_index":422,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["viewchild('focus",{"_index":458,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Element.html":{},"components/InventoryComponent.html":{}}}],["viewchild('markupvalue",{"_index":960,"title":{},"body":{"components/SettingsComponent.html":{}}}],["viewchild('myfgd",{"_index":932,"title":{},"body":{"components/RegisterComponent.html":{}}}],["viewchild('name",{"_index":461,"title":{},"body":{"interfaces/DialogData.html":{}}}],["viewchild('payment",{"_index":460,"title":{},"body":{"interfaces/DialogData.html":{}}}],["viewchild(matpaginator",{"_index":626,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/InventoryComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["void",{"_index":235,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element.html":{},"interfaces/Element-1.html":{},"interfaces/Element-2.html":{},"interfaces/Element-3.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SuccessDialogComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["w3schools",{"_index":1071,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["webkit",{"_index":1072,"title":{},"body":{"components/TransactionDialogComponent.html":{}}}],["webpage",{"_index":675,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/SidebarComponent.html":{}}}],["white",{"_index":287,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["wide",{"_index":947,"title":{},"body":{"components/SettingsComponent.html":{}}}],["width",{"_index":278,"title":{},"body":{"components/DashboardComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/Element-1.html":{},"components/InventoryComponent.html":{},"components/LoginComponent.html":{},"components/ManagementComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/TransactionDialogComponent.html":{},"components/TransactionsComponent.html":{},"components/UsersComponent.html":{}}}],["width:100",{"_index":795,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["within",{"_index":300,"title":{},"body":{"components/DefaultComponent.html":{},"components/HeaderComponent.html":{}}}],["zone.js",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/DefaultModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Angular root body component\n\n    \n\n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pharmacy-pos-system'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        Title\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n *Angular root body component\n *\n * @export\n * @class AppComponent\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   *Title\n   *\n   * @memberof AppComponent\n   */\n  title = 'pharmacy-pos-system';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDefaultModule\n\nDefaultModule\n\nAppModule -->\n\nDefaultModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            DefaultModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DefaultModule } from './layouts/default/default.module';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    DefaultModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n            \n                Description\n            \n            \n                app.po.ts\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:26\n                \n            \n\n\n            \n                \n                    Get the homepage heading element reference\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:16\n                \n            \n\n\n            \n                \n                    Navigate to base url\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        {Promise}\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\n/**\n *app.po.ts\n *\n * @export\n * @class AppPage\n */\nexport class AppPage {\n  /**\n   *Navigate to base url\n   *\n   * @return {*}  {Promise}\n   * @memberof AppPage\n   */\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  /**\n   *Get the homepage heading element reference\n   *\n   * @return {*}  {Promise}\n   * @memberof AppPage\n   */\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { componentFactoryName } from '@angular/compiler';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { ManagerGuard } from './auth/manager.guard';\nimport { DefaultComponent } from './layouts/default/default.component';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\nimport { InventoryComponent } from './modules/inventory/inventory.component';\nimport { LoginComponent } from './modules/login/login.component';\nimport { ManagementComponent } from './modules/management/management.component';\nimport { RegisterComponent } from './modules/register/register.component';\nimport { SettingsComponent } from './modules/settings/settings.component';\nimport { PointOfSaleComponent } from './modules/point-of-sale/point-of-sale.component';\nimport { TransactionsComponent } from './modules/transactions/transactions.component';\nimport { UsersComponent } from './modules/users/users.component';\n\nconst routes: Routes = [{\n  path: '', \n  component: DefaultComponent, \n  children: [\n    {\n      path: '',\n      component: DashboardComponent,\n      canActivate: [AuthGuard]\n    }, \n    {\n      path: 'inventory', \n      component: InventoryComponent,\n      canActivate: [AuthGuard]\n    }, \n    {\n      path: 'login', \n      component: LoginComponent\n    }, \n    {\n      path: 'register', \n      component: RegisterComponent,\n      canActivate: [ManagerGuard]\n    },\n    {\n      path: 'stock-management',\n      component: ManagementComponent,\n      canActivate: [AuthGuard]\n    },\n    {\n      path: 'settings', \n      component: SettingsComponent,\n      canActivate: [ManagerGuard]\n    },\n    {\n      path: 'pos', \n      component: PointOfSaleComponent,\n      canActivate: [AuthGuard]\n    },\n    {\n      path: 'transactions', \n      component: TransactionsComponent,\n      canActivate: [AuthGuard]\n    },\n    {\n      path: 'users', \n      component: UsersComponent,\n      canActivate: [ManagerGuard]\n    }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    AuthGuard checks if a user is logged into the system before it allows them to access any functionality\n\n                \n\n\n\n                \n                Example\n                \n                \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                This service contains the HTTP request response methods\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for navigation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:33\n                \n            \n\n\n            \n                \n                    canActivate checks to see if a user is logged into the system. If they are not then it logs them out\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\n/**\n *AuthGuard checks if a user is logged into the system before it allows them to access any functionality\n *\n * @export\n * @class AuthGuard\n * @implements {CanActivate}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  /**\n   * Creates an instance of AuthGuard.\n   * @param {AuthService} _auth This service contains the HTTP request response methods\n   * @param {Router} _router Service for navigation\n   * @memberof AuthGuard\n   */\n  constructor(private _auth: AuthService, private _router: Router) { }\n\n\n  /**\n   *canActivate checks to see if a user is logged into the system. If they are not then it logs them out\n   *\n   * @return {boolean}\n   * @memberof AuthGuard\n   */\n  canActivate(): boolean {\n    if(this._auth.loggedIn()){\n      return true\n    } else {\n      this._router.navigate(['/login'])\n      return false\n    }\n  }\n  \n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseDialogComponent.html":{"url":"components/CourseDialogComponent.html","title":"component - CourseDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/management/course-dialog/course-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Dialog for Management component to show successful product updates\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-dialog\n            \n\n            \n                styleUrls\n                ./course-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/management/course-dialog/course-dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of CourseDialogComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/course-dialog/course-dialog.component.ts:38\n                \n            \n\n\n            \n                \n                    Closes the dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/course-dialog/course-dialog.component.ts:30\n                \n            \n\n\n            \n                \n                    Empty ngOnInit function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n/**\n *Dialog for Management component to show successful product updates\n *\n * @export\n * @class CourseDialogComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-course-dialog',\n  templateUrl: './course-dialog.component.html',\n  styleUrls: ['./course-dialog.component.css']\n})\nexport class CourseDialogComponent implements OnInit {\n\n  /**\n   * Creates an instance of CourseDialogComponent.\n   * @param {MatDialogRef} dialogRef\n   * @memberof CourseDialogComponent\n   */\n  constructor(private dialogRef: MatDialogRef) { }\n\n  /**\n   *Empty ngOnInit function\n   *\n   * @memberof CourseDialogComponent\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   *Closes the dialog\n   *\n   * @memberof CourseDialogComponent\n   */\n  close() {\n    this.dialogRef.close();\n  } \n\n}\n\n    \n\n    \n        Products Succesfully Updated\n\n\n    Close\n\n    \n\n    \n                \n                    ./course-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Products Succesfully Updated    Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        The Dashboard Component that the user first sees when they login \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/dashboard.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of DashboardComponent.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/dashboard.component.ts:28\n                \n            \n\n\n            \n                \n                    Empty OnItnit Function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *The Dashboard Component that the user first sees when they login \n *\n * @export\n * @class DashboardComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  /**\n   * Creates an instance of DashboardComponent.\n   * @memberof DashboardComponent\n   */\n  constructor() { }\n\n  /**\n   *Empty OnItnit Function\n   *\n   * @memberof DashboardComponent\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n        \n        Point of Sale\n        \n    \n\n    \n      \n        \n          \n        \n        Inventory\n        \n    \n    \n    \n      \n        \n          \n        \n        Transactions\n        \n    \n\n    \n      \n        \n          \n        \n        Users\n        \n    \n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                mat-grid-tile {\n    background-color: F4F4F6;\n}\n\n.mat-display-1 {\n    background-color: #E6E6E9;\n    margin-bottom: .5em;\n    text-align: center;\n}\n\nimg {\n    height: 150px;\n}\n\n.tile:hover {\n    transform: scale(1.04);\n}\n\n.dashboardCard{\n    background-color: #0762A4; \n    width: 90%; \n    height: 80%;\n    \n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.dashboardCard2{\n    background-color: #DAD9D9; \n    width: 90%; \n    height: 80%;\n    \n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.dashboardCard h1 {\n    color: white;\n    margin-left: 3%;\n    font-size: 30px;\n}\n\n.dashboardCard2 h1 {\n    color: #0762A4;\n    margin-left: 3%;\n    font-size: 30px;\n}\n\n.tile:focus {\n    outline: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Point of Sale                                                        Inventory                                                            Transactions                                                        Users            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultComponent.html":{"url":"components/DefaultComponent.html","title":"component - DefaultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default/default.component.ts\n\n\n    \n        Description\n    \n    \n        This Angular component provides the layout for all child components within the angular project\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default\n            \n\n            \n                styleUrls\n                ./default.component.css\n            \n\n\n\n            \n                templateUrl\n                ./default.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sideBarOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setSideBarOpen\n                            \n                            \n                                    Public\n                                toggleSideBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/default/default.component.ts:24\n                            \n                        \n\n                \n                    \n                            Creates an instance of DefaultComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/default/default.component.ts:38\n                \n            \n\n\n            \n                \n                    Opens the sidebar if a user is currently logged in and closes the sidebar if it is not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSideBarOpen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSideBarOpen(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/default/default.component.ts:62\n                \n            \n\n\n            \n                \n                    Used to set the status of the sidebar programmatically \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSideBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSideBar(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/default/default.component.ts:52\n                \n            \n\n\n            \n                \n                    Toggles the sidebar open or closed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sideBarOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layouts/default/default.component.ts:24\n                            \n                        \n\n                \n                    \n                        Stores the current state of the sidebar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\n\n/**\n *This Angular component provides the layout for all child components within the angular project\n *\n * @export\n * @class DefaultComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.css']\n})\nexport class DefaultComponent implements OnInit {\n\n  /**\n   *Stores the current state of the sidebar\n   *\n   * @type {boolean}\n   * @memberof DefaultComponent\n   */\n  public sideBarOpen: boolean = false; \n\n  /**\n   * Creates an instance of DefaultComponent.\n   * @param {AuthService} _auth\n   * @memberof DefaultComponent\n   */\n  constructor(private _auth: AuthService) { }\n\n  /**\n   *Opens the sidebar if a user is currently logged in and closes the sidebar if it is not\n   *\n   * @memberof DefaultComponent\n   */\n  ngOnInit(): void {\n    if(this._auth.loggedIn() === true){\n      this.setSideBarOpen(true);\n    }else{\n      this._auth.logoutUser();\n    }\n  }\n\n  /**\n   *Toggles the sidebar open or closed\n   *\n   * @param {*} event\n   * @memberof DefaultComponent\n   */\n  public toggleSideBar(event):void{\n    this.sideBarOpen = !this.sideBarOpen; \n  }\n\n  /**\n   *Used to set the status of the sidebar programmatically \n   *\n   * @param {boolean} status\n   * @memberof DefaultComponent\n   */\n  public setSideBarOpen(status: boolean){\n    this.sideBarOpen = status;\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        \n    \n    \n        \n    \n\n\n -->\n    \n\n    \n                \n                    ./default.component.css\n                \n                :host{\n    display: flex; \n    flex-direction: column;\n    height: 100%;\n}\n\nmat-drawer {\n    width: 350px;\n}\n\nmat-drawer-container {\n    height: 100%; \n}\n\nmat-drawer-content {\n    padding: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DefaultModule.html":{"url":"modules/DefaultModule.html","title":"module - DefaultModule","body":"\n                   \n\n\n\n\n    Modules\n    DefaultModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_providers\n\n\n\ncluster_DefaultModule_imports\n\n\n\ncluster_DefaultModule_declarations\n\n\n\n\nCourseDialogComponent\n\nCourseDialogComponent\n\n\n\nDefaultModule\n\nDefaultModule\n\nDefaultModule -->\n\nCourseDialogComponent->DefaultModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDefaultModule -->\n\nDashboardComponent->DefaultModule\n\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nInventoryComponent\n\nInventoryComponent\n\nDefaultModule -->\n\nInventoryComponent->DefaultModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nDefaultModule -->\n\nLoginComponent->DefaultModule\n\n\n\n\n\nManagementComponent\n\nManagementComponent\n\nDefaultModule -->\n\nManagementComponent->DefaultModule\n\n\n\n\n\nPointOfSaleComponent\n\nPointOfSaleComponent\n\nDefaultModule -->\n\nPointOfSaleComponent->DefaultModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nDefaultModule -->\n\nRegisterComponent->DefaultModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nDefaultModule -->\n\nSettingsComponent->DefaultModule\n\n\n\n\n\nSuccessDialogComponent\n\nSuccessDialogComponent\n\nDefaultModule -->\n\nSuccessDialogComponent->DefaultModule\n\n\n\n\n\nTransactionDialogComponent\n\nTransactionDialogComponent\n\nDefaultModule -->\n\nTransactionDialogComponent->DefaultModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nDefaultModule -->\n\nTransactionsComponent->DefaultModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nDefaultModule -->\n\nUsersComponent->DefaultModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDefaultModule -->\n\nSharedModule->DefaultModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nDefaultModule -->\n\nTokenInterceptorService->DefaultModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/default/default.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CourseDialogComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DefaultComponent\n                        \n                        \n                            InventoryComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ManagementComponent\n                        \n                        \n                            PointOfSaleComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            SuccessDialogComponent\n                        \n                        \n                            TransactionDialogComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CourseDialogComponent\n                        \n                        \n                            SuccessDialogComponent\n                        \n                        \n                            TransactionDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TokenInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultComponent } from './default.component';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatSidenavModule } from '@angular/material/sidenav'; \nimport { MatDividerModule } from '@angular/material/divider';\nimport { InventoryComponent } from 'src/app/modules/inventory/inventory.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { ManagementComponent } from 'src/app/modules/management/management.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { DashboardComponent } from 'src/app/modules/dashboard/dashboard.component';\nimport { LoginComponent } from 'src/app/modules/login/login.component';\nimport { RegisterComponent } from 'src/app/modules/register/register.component';\nimport { AuthGuard } from '../../auth/auth.guard';\nimport { TokenInterceptorService } from '../../auth/token-interceptor.service';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { SettingsComponent } from 'src/app/modules/settings/settings.component';\nimport { MatDialogModule } from '@angular/material/dialog'; \nimport { PointOfSaleComponent } from 'src/app/modules/point-of-sale/point-of-sale.component';\nimport { CourseDialogComponent } from 'src/app/modules/management/course-dialog/course-dialog.component';\nimport { SuccessDialogComponent } from 'src/app/modules/point-of-sale/success-dialog/success-dialog.component';\nimport { TransactionDialogComponent } from 'src/app/modules/transactions/transaction-dialog/transaction-dialog.component';\nimport { TransactionsComponent } from 'src/app/modules/transactions/transactions.component';\nimport { UsersComponent } from 'src/app/modules/users/users.component';\n\n\n@NgModule({\n  declarations: [\n    DefaultComponent, \n    InventoryComponent, \n    ManagementComponent,\n    RegisterComponent,\n    LoginComponent,\n    DashboardComponent, \n    SettingsComponent,\n    PointOfSaleComponent,\n    CourseDialogComponent,\n    SuccessDialogComponent,\n    TransactionsComponent,\n    TransactionDialogComponent,\n    UsersComponent\n    \n  ],\n  imports: [\n    CommonModule, \n    RouterModule, \n    SharedModule,\n    MatSidenavModule,\n    MatDividerModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatSelectModule, \n    MatTableModule, \n    ReactiveFormsModule, \n    MatInputModule, \n    MatSelectModule, \n    MatButtonModule, \n    MatCheckboxModule, \n    MatChipsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatGridListModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatIconModule, \n    MatAutocompleteModule, \n    MatDialogModule\n  ],\n  providers: [AuthGuard, \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n  entryComponents: [CourseDialogComponent, SuccessDialogComponent, TransactionDialogComponent], \n})\nexport class DefaultModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/point-of-sale/point-of-sale.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface to send the amount of change to give the user to the dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        change\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                    \n                                \n                                \n                                    \n                                        change:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The amount of change to give the user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AuthService } from '../../auth/auth.service';\nimport { SuccessDialogComponent } from './success-dialog/success-dialog.component'\n\nexport type product = {\n  \"id\": string,\n  \"name\": string, \n  \"price\": number, \n  \"quantity\": number\n}\n\n/**\n *Interface to send the amount of change to give the user to the dialog\n *\n * @export\n * @interface DialogData\n */\nexport interface DialogData {\n  /**\n   *The amount of change to give the user\n   *\n   * @type {number}\n   * @memberof DialogData\n   */\n  change: number;\n}\n\n/**\n *PointOfSaleComponent to conduct transactions\n *\n * @export\n * @class PointOfSaleComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-point-of-sale',\n  templateUrl: './point-of-sale.component.html',\n  styleUrls: ['./point-of-sale.component.css']\n})\nexport class PointOfSaleComponent implements OnInit {\n  /**\n   *FormGroup for the items in the transaction\n   *\n   * @type {FormGroup}\n   * @memberof PointOfSaleComponent\n   */\n  public itemsForm: FormGroup; \n  /**\n   *Status on if there is a transaction active or not\n   *\n   * @memberof PointOfSaleComponent\n   */\n  public activeTransaction = false;\n  /**\n   *List of all products in the inventory\n   *\n   * @memberof PointOfSaleComponent\n   */\n  public productList; \n  /**\n   *Product names of all products in the inventory\n   *\n   * @type {string[]}\n   * @memberof PointOfSaleComponent\n   */\n  public productNames: string[]; \n  /**\n   *Product item numbers of all products in the inventory\n   *\n   * @type {string[]}\n   * @memberof PointOfSaleComponent\n   */\n  public productItemNumbers: string[];\n  /**\n   *Total price of all items in a transaction\n   *\n   * @memberof PointOfSaleComponent\n   */\n  totalPrice = 0;\n  /**\n   *Amount the customer has paid\n   *\n   * @memberof PointOfSaleComponent\n   */\n  amoutPaid = 0;\n  /**\n   *Number of items in the transaction\n   *\n   * @memberof PointOfSaleComponent\n   */\n  itemQuantity = 0;\n  /**\n   *Status on if the transaction is valid or not\n   *\n   * @memberof PointOfSaleComponent\n   */\n  transactionValid = false;\n  /**\n   *List of filtered options based on the user input\n   *\n   * @type {string[]}\n   * @memberof PointOfSaleComponent\n   */\n  filteredOptions: string[];\n\n  /**\n   *Used to put focus on the id input field\n   *\n   * @type {ElementRef}\n   * @memberof PointOfSaleComponent\n   */\n  @ViewChild('focus') input: ElementRef;\n\n  /**\n   *Payment input\n   *\n   * @type {ElementRef}\n   * @memberof PointOfSaleComponent\n   */\n  @ViewChild('payment') payment: ElementRef;\n\n  /**\n   *Item name input\n   *\n   * @type {ElementRef}\n   * @memberof PointOfSaleComponent\n   */\n  @ViewChild('name') name: ElementRef;\n\n  /**\n   * Creates an instance of PointOfSaleComponent.\n   * @param {FormBuilder} formBuilder\n   * @param {AuthService} _auth\n   * @param {MatDialog} dialog\n   * @memberof PointOfSaleComponent\n   */\n  constructor(private formBuilder: FormBuilder, private _auth: AuthService, private dialog: MatDialog) { }\n\n  /**\n   *Initializes the transaction list of items\n   *\n   * @memberof PointOfSaleComponent\n   */\n  ngOnInit(): void {\n    this.itemsForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n\n  }\n\n  /**\n   *Gets all items from the itemsForm\n   *\n   * @readonly\n   * @memberof PointOfSaleComponent\n   */\n  get productForms(){\n    return this.itemsForm.get('products') as FormArray; \n  }\n\n  /**\n   *Adds a blank item field to the itemsForm\n   *\n   * @memberof PointOfSaleComponent\n   */\n  addProduct(){\n    const product = this.formBuilder.group({\n      id: [],\n      name: [], \n      price: [], \n      quantity: []\n    })\n    this.productForms.push(product); \n  }\n\n  /**\n   *Deletes a product from the itemsForm\n   *\n   * @param {*} i\n   * @memberof PointOfSaleComponent\n   */\n  deleteProduct(i){\n    this.productForms.removeAt(i); \n    this.calculateTotalPrice();\n    this.calculateItemQuantity();\n    this.payment.nativeElement.value = \"\";\n    this.transactionValid = false;\n  }\n\n  /**\n   *Initializes a new transaction by getting all the items from the inventory and setting the various variables to their state for a new transaction \n   *\n   * @memberof PointOfSaleComponent\n   */\n  newTransaction(){\n    this.itemsForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n\n    //getting items from backend to check stock count\n    this._auth.getProducts().subscribe(\n      (res:any) => {\n        this.productList = res;\n        this.productNames = []; \n        this.productItemNumbers = []; \n        for(let product of this.productList){\n          this.productNames.push(product.name); \n          this.productItemNumbers.push(product.productId); \n        }\n        \n        this.activeTransaction = true;\n        this.totalPrice = 0;\n        this.itemQuantity = 0;\n        this.transactionValid = false;\n        this.payment.nativeElement.value = \"\";\n        this.name.nativeElement.value = \"\";\n        setTimeout(()=>{\n          this.input.nativeElement.focus();\n        },0);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Cancels the current transaction and sets everything back to its default state \n   *\n   * @memberof PointOfSaleComponent\n   */\n  clearTransaction(){\n    this.activeTransaction = false;\n    this.input.nativeElement.value = \"\";\n    this.payment.nativeElement.value = \"\";\n    this.name.nativeElement.value = \"\";\n\n    this.itemsForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n\n    this.totalPrice = 0;\n    this.itemQuantity = 0;\n    this.transactionValid = false;\n  }\n\n  /**\n   *Clears all products from the itemsForm\n   *\n   * @memberof PointOfSaleComponent\n   */\n  clearAllProducts(){\n    this.itemsForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n    this.totalPrice = 0;\n    this.itemQuantity = 0;\n    this.transactionValid = false;\n    this.payment.nativeElement.value = \"\";\n  }\n\n  /**\n   *Gets the user input and returns a filtered list of all the items that contain the substring\n   *\n   * @private\n   * @param {string} value\n   * @return {*}  {string[]}\n   * @memberof PointOfSaleComponent\n   */\n  private _filter(value: string): string[] {\n    if (!value || value==='') return this.productNames;\n    const filterValue = value.toString().toLowerCase();\n    return this.productNames.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  /**\n   *Auto completes filtered list \n   *\n   * @param {*} value\n   * @memberof PointOfSaleComponent\n   */\n  autoComplete(value){\n    let productEntry = value; \n    this.filteredOptions = this._filter(productEntry); \n  }\n\n  /**\n   *Initialize the filtered list\n   *\n   * @memberof PointOfSaleComponent\n   */\n  initialiseList(){\n    this.filteredOptions = this.productNames;  \n  }\n\n  /**\n   *When the user types a product id or scans a product using the barcode scanner it is automatically added to the itemsForm if it is found in the current inventory\n   *\n   * @param {*} value\n   * @memberof PointOfSaleComponent\n   */\n  autoCompleteID(value){\n    let itemFound = false;\n    this.productList.forEach(element => {\n      if(value === element.productId && element.stock > 0){\n\n        this.productForms.controls.forEach((element, index) => {\n          if(element.value.id == value){\n            this.productForms.at(index).get('quantity').setValue(element.value.quantity + 1);\n            this.calculatePrice(index);\n            itemFound = true;\n          }\n        });\n\n        if(itemFound == false){\n          const product = this.formBuilder.group({\n            id: [element.productId],\n            name: [element.name], \n            price: [element.price], \n            quantity: [1]\n          })\n\n          this.productForms.push(product);\n        }\n        \n        this.input.nativeElement.value = \"\";\n        this.calculateTotalPrice();\n        this.calculateItemQuantity();\n      }\n    });\n  }\n\n  /**\n   *When the user selects an item name from the search list it is automatically added to the itemsForm if it is found in the current inventory\n   *\n   * @param {*} value\n   * @memberof PointOfSaleComponent\n   */\n  autoCompleteName(value){\n    let itemFound = false;\n    this.productList.forEach(element => {\n      if(value === element.name && element.stock > 0){\n\n        this.productForms.controls.forEach((element, index) => {\n          if(element.value.name == value){\n            this.productForms.at(index).get('quantity').setValue(element.value.quantity + 1);\n            this.calculatePrice(index);\n            itemFound = true;\n          }\n        });\n\n        if(itemFound == false){\n          const product = this.formBuilder.group({\n            id: [element.productId],\n            name: [element.name], \n            price: [element.price], \n            quantity: [1]\n          })\n\n          this.productForms.push(product);\n        }\n        \n        this.name.nativeElement.value = \"\";\n        this.calculateTotalPrice();\n\n        this.calculateItemQuantity();\n      }\n    });\n  }\n\n  /**\n   *Calculates the total price of a row in the itemsForm\n   *\n   * @param {*} i\n   * @memberof PointOfSaleComponent\n   */\n  calculatePrice(i){\n    let product = this.productForms.at(i); \n    \n    this.productList.forEach(element => {\n      if(product.value.id === element.productId){\n        const price = element.price * product.value.quantity\n\n        this.productForms.at(i).get('price').setValue(price.toFixed(2));\n\n        this.calculateTotalPrice();\n        this.calculateItemQuantity();\n        this.payment.nativeElement.value = \"\";\n        this.transactionValid = false;\n      }\n    });\n  }\n\n  /**\n   *Calculates the total price of all items in the itemsForm\n   *\n   * @memberof PointOfSaleComponent\n   */\n  calculateTotalPrice(){\n    let productsEntered = this.productForms.value as Array;\n    let total: number = 0.0;\n\n    productsEntered.forEach(element => {\n      let enteredProduct = element as product; \n      total += Number(enteredProduct.price);\n    });\n\n    this.totalPrice = Number(total.toFixed(2));\n  }\n\n  /**\n   *Sets focus back on the ID input field when the user presses enter in the quantity field\n   *\n   * @param {*} keyEvent\n   * @memberof PointOfSaleComponent\n   */\n  onEnterPress(keyEvent) {\n    if (keyEvent.keyCode === 13)\n      this.input.nativeElement.focus();\n  }\n\n  /**\n   *Calculates the total amount of items in the itemsForm\n   *\n   * @memberof PointOfSaleComponent\n   */\n  calculateItemQuantity(){\n    let items = this.itemsForm.get('products').value as Array;\n    let qty = 0;\n\n    items.forEach(element => {\n      let product = element as product; \n\n      qty += product.quantity;\n    });\n\n    this.itemQuantity = qty;\n  }\n\n  /**\n   *Creates a new transaction using the AuthService createTransaction function and adds all items from the itemsForm to it using the addProductsToTransaction function\n   *\n   * @memberof PointOfSaleComponent\n   */\n  createTransaction(){\n    let allProductIDs = [];\n    let transID;\n\n    let items = this.itemsForm.get('products').value as Array;\n\n    items.forEach(element => {\n      let product = element as product; \n\n      for(let i=0; i {\n        transID = res.transactionId;\n        this.addProductsToTransaction(allProductIDs, transID);\n      }, \n      (error:any) => {\n        console.log(error);\n      }\n    )\n  }\n\n  /**\n   *Adds an item to a transaction using the AuthService addProductsToTransaction function\n   *\n   * @param {*} allProductIDs\n   * @param {*} transID\n   * @memberof PointOfSaleComponent\n   */\n  addProductsToTransaction(allProductIDs, transID){\n    this._auth.addProductsToTransaction(allProductIDs, transID).subscribe(\n      (res:any) => {\n        console.log(res);\n        let change = this.amoutPaid - this.totalPrice;\n        this.newTransaction();\n        this.openDialog(change.toFixed(2));\n      }, \n      (error:any) => {\n        console.log(error);\n      }\n    )\n  }\n\n  /**\n   *Checks to see if the amount paid by the user is more than or equal to the total price\n   *\n   * @param {*} value\n   * @memberof PointOfSaleComponent\n   */\n  amountPaid(value){\n    if(value >= this.totalPrice){\n      this.transactionValid = true;\n      this.amoutPaid = value;\n    }else{\n      this.transactionValid = false;\n    }\n  }\n\n  /**\n   *Opens the success dialog to show how much change the user should receive \n   *\n   * @param {*} change\n   * @memberof PointOfSaleComponent\n   */\n  openDialog(change): void {\n    const dialogRef = this.dialog.open(SuccessDialogComponent, {\n      width: '300px',\n      data: {\"change\": change},\n      autoFocus: false \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.input.nativeElement.focus();\n    });\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/transactions/transactions.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface to send the transaction items to the dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateTime\n                                \n                                \n                                        empId\n                                \n                                \n                                        items\n                                \n                                \n                                        transactionId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                    \n                                \n                                \n                                    \n                                        dateTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date & Time\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empId\n                                    \n                                \n                                \n                                    \n                                        empId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactionId\n                                    \n                                \n                                \n                                    \n                                        transactionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transaction ID\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\nimport { TransactionDialogComponent } from './transaction-dialog/transaction-dialog.component'\n\n\n/**\n *Interface to send transaction details to the dialog\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Transaction ID\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  transactionId: string;\n  /**\n   *Employee ID\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  empId: number;\n  /**\n   *Date & Time\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  dateTime: string;\n}\n\n/**\n *Interface to send the transaction items to the dialog\n *\n * @export\n * @interface DialogData\n */\nexport interface DialogData {\n  /**\n   *Items\n   *\n   * @type {*}\n   * @memberof DialogData\n   */\n  items: any;\n  /**\n   *Transaction ID\n   *\n   * @type {number}\n   * @memberof DialogData\n   */\n  transactionId: number;\n  /**\n   *Employee ID\n   *\n   * @type {number}\n   * @memberof DialogData\n   */\n  empId: number;\n  /**\n   *Date & Time\n   *\n   * @type {string}\n   * @memberof DialogData\n   */\n  dateTime: string;\n}\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\nexport class TransactionsComponent implements OnInit {\n  /**\n   *Stores transaction items for table\n   *\n   * @memberof TransactionsComponent\n   */\n  dataSource;\n  \n  /**\n   * Creates an instance of TransactionsComponent.\n   * @param {AuthService} _auth\n   * @param {MatDialog} dialog\n   * @memberof TransactionsComponent\n   */\n  constructor(private _auth: AuthService, private dialog: MatDialog) { }\n\n  /**\n   *Table columns\n   *\n   * @memberof TransactionsComponent\n   */\n  displayedColumns = ['transactionId', 'empId', 'dateTime', 'modification'];\n  /**\n   *Table paginator\n   *\n   * @type {MatPaginator}\n   * @memberof TransactionsComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Gets all transactions and adds them to the table\n   *\n   * @memberof TransactionsComponent\n   */\n  ngOnInit(): void {\n    this._auth.getTransactions().subscribe(\n      (res:any) => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Filters the table based on the user's search input\n   *\n   * @param {Event} event\n   * @memberof TransactionsComponent\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  /**\n   *Gets the data from the row that the user selects the View button and gets the transaction details\n   *\n   * @param {*} transactionId\n   * @param {*} empId\n   * @param {*} dateTime\n   * @memberof TransactionsComponent\n   */\n  row(transactionId, empId, dateTime){\n\n    this._auth.getTransactionDetail(transactionId).subscribe(\n      (res:any) => {\n        this.openDialog(res, transactionId, empId, dateTime);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  \n  /**\n   *Opens the transaction details dialog \n   *\n   * @param {*} data\n   * @param {*} transactionId\n   * @param {*} empID\n   * @param {*} dateTime\n   * @memberof TransactionsComponent\n   */\n  openDialog(data, transactionId, empID, dateTime): void {\n    const dialogRef = this.dialog.open(TransactionDialogComponent, {\n      width: '700px',\n      data: {\n        \"items\" : data,\n        \"transactionId\" : transactionId,\n        \"empId\" : empID,\n        \"dateTime\" : dateTime\n      },\n      autoFocus: false\n    });\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Element.html":{"url":"interfaces/Element.html","title":"interface - Element","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Element\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/inventory/inventory.component.ts\n        \n\n            \n                Description\n            \n            \n                Item Details\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        price\n                                \n                                \n                                        productId\n                                \n                                \n                                        stock\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Item Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product Price\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock\n                                    \n                                \n                                \n                                    \n                                        stock:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product Sock\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\n\n/**\n *Item Details\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Item Name\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  name: string;\n  /**\n   *Product ID\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  productId: number;\n  /**\n   *Product Price\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  price: number;\n  /**\n   *Product Sock\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  stock: number;\n}\n\n/**\n *Inventory Component to view the current inventory\n *\n * @export\n * @class InventoryComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent implements OnInit {\n  /**\n   *Table data\n   *\n   * @memberof InventoryComponent\n   */\n  dataSource;\n\n  /**\n   *Used to autofocus on the search input field \n   *\n   * @type {ElementRef}\n   * @memberof InventoryComponent\n   */\n  @ViewChild('focus') input: ElementRef;\n\n  /**\n   * Creates an instance of InventoryComponent.\n   * @param {AuthService} _auth\n   * @memberof InventoryComponent\n   */\n  constructor(private _auth: AuthService) { }\n\n  /**\n   *Table Columns\n   *\n   * @memberof InventoryComponent\n   */\n  displayedColumns = ['productId', 'name', 'price', 'stock'];\n\n  /**\n   *Table Paginator\n   *\n   * @type {MatPaginator}\n   * @memberof InventoryComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Gets the inventory from the HTTP request in the auth service and adds it to the table\n   *\n   * @memberof InventoryComponent\n   */\n  ngOnInit(): void {\n    this._auth.getProducts().subscribe(\n      (res:any) => {\n        console.log(res)\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n\n        setTimeout(()=>{\n          this.input.nativeElement.focus();\n        },0);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Filters the table based on the input from the user\n   *\n   * @param {Event} event\n   * @memberof InventoryComponent\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n\n\n\n\n  \n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Element-1.html":{"url":"interfaces/Element-1.html","title":"interface - Element-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Element\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/transactions/transactions.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface to send transaction details to the dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateTime\n                                \n                                \n                                        empId\n                                \n                                \n                                        transactionId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                    \n                                \n                                \n                                    \n                                        dateTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date & Time\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empId\n                                    \n                                \n                                \n                                    \n                                        empId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactionId\n                                    \n                                \n                                \n                                    \n                                        transactionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transaction ID\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\nimport { TransactionDialogComponent } from './transaction-dialog/transaction-dialog.component'\n\n\n/**\n *Interface to send transaction details to the dialog\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Transaction ID\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  transactionId: string;\n  /**\n   *Employee ID\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  empId: number;\n  /**\n   *Date & Time\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  dateTime: string;\n}\n\n/**\n *Interface to send the transaction items to the dialog\n *\n * @export\n * @interface DialogData\n */\nexport interface DialogData {\n  /**\n   *Items\n   *\n   * @type {*}\n   * @memberof DialogData\n   */\n  items: any;\n  /**\n   *Transaction ID\n   *\n   * @type {number}\n   * @memberof DialogData\n   */\n  transactionId: number;\n  /**\n   *Employee ID\n   *\n   * @type {number}\n   * @memberof DialogData\n   */\n  empId: number;\n  /**\n   *Date & Time\n   *\n   * @type {string}\n   * @memberof DialogData\n   */\n  dateTime: string;\n}\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\nexport class TransactionsComponent implements OnInit {\n  /**\n   *Stores transaction items for table\n   *\n   * @memberof TransactionsComponent\n   */\n  dataSource;\n  \n  /**\n   * Creates an instance of TransactionsComponent.\n   * @param {AuthService} _auth\n   * @param {MatDialog} dialog\n   * @memberof TransactionsComponent\n   */\n  constructor(private _auth: AuthService, private dialog: MatDialog) { }\n\n  /**\n   *Table columns\n   *\n   * @memberof TransactionsComponent\n   */\n  displayedColumns = ['transactionId', 'empId', 'dateTime', 'modification'];\n  /**\n   *Table paginator\n   *\n   * @type {MatPaginator}\n   * @memberof TransactionsComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Gets all transactions and adds them to the table\n   *\n   * @memberof TransactionsComponent\n   */\n  ngOnInit(): void {\n    this._auth.getTransactions().subscribe(\n      (res:any) => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Filters the table based on the user's search input\n   *\n   * @param {Event} event\n   * @memberof TransactionsComponent\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  /**\n   *Gets the data from the row that the user selects the View button and gets the transaction details\n   *\n   * @param {*} transactionId\n   * @param {*} empId\n   * @param {*} dateTime\n   * @memberof TransactionsComponent\n   */\n  row(transactionId, empId, dateTime){\n\n    this._auth.getTransactionDetail(transactionId).subscribe(\n      (res:any) => {\n        this.openDialog(res, transactionId, empId, dateTime);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  \n  /**\n   *Opens the transaction details dialog \n   *\n   * @param {*} data\n   * @param {*} transactionId\n   * @param {*} empID\n   * @param {*} dateTime\n   * @memberof TransactionsComponent\n   */\n  openDialog(data, transactionId, empID, dateTime): void {\n    const dialogRef = this.dialog.open(TransactionDialogComponent, {\n      width: '700px',\n      data: {\n        \"items\" : data,\n        \"transactionId\" : transactionId,\n        \"empId\" : empID,\n        \"dateTime\" : dateTime\n      },\n      autoFocus: false\n    });\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Element-2.html":{"url":"interfaces/Element-2.html","title":"interface - Element-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Element\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/users/users.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for employee information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        empFirstName\n                                \n                                \n                                        empLastName\n                                \n                                \n                                        empType\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee Age\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empFirstName\n                                    \n                                \n                                \n                                    \n                                        empFirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee First Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empLastName\n                                    \n                                \n                                \n                                    \n                                        empLastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee Last Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        empType\n                                    \n                                \n                                \n                                    \n                                        empType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee Type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Employee ID Number\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\n\n/**\n *Interface for employee information\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Employee ID Number\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  id: number;\n  /**\n   *Employee First Name\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  empFirstName : string;\n  /**\n   *Employee Last Name\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  empLastName : string;\n  /**\n   *Employee Age\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  age: number;\n  /**\n   *Employee Type\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  empType: string;\n}\n\n/**\n *List of users registered on the system\n *\n * @export\n * @class UsersComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  /**\n   *Users data for table\n   *\n   * @memberof UsersComponent\n   */\n  dataSource;\n\n  /**\n   * Creates an instance of UsersComponent.\n   * @param {AuthService} _auth\n   * @memberof UsersComponent\n   */\n  constructor(private _auth: AuthService) { }\n\n  /**\n   *Table Columns \n   *\n   * @memberof UsersComponent\n   */\n  displayedColumns = ['id', 'empFirstName', 'empLastName', 'age', 'empType'];\n  /**\n   *Table paginator\n   *\n   * @type {MatPaginator}\n   * @memberof UsersComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Gets all employees registered to the system and adds them to the table\n   *\n   * @memberof UsersComponent\n   */\n  ngOnInit(): void {\n    this._auth.getEmployees().subscribe(\n      (res:any) => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Filter the table based on the user search input\n   *\n   * @param {Event} event\n   * @memberof UsersComponent\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Element-3.html":{"url":"interfaces/Element-3.html","title":"interface - Element-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Element\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts\n        \n\n            \n                Description\n            \n            \n                Item information interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        price\n                                \n                                \n                                        productId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product Name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product Price\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Product ID\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../transactions.component';\nimport { SuccessDialogComponent } from '../../point-of-sale/success-dialog/success-dialog.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n/**\n *Item information interface\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Product ID\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  productId: number;\n  /**\n   *Product Name\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  name: string;\n  /**\n   *Product Price\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  price: number;\n}\n\n/**\n *Dialog to show transaction detail\n *\n * @export\n * @class TransactionDialogComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-transaction-dialog',\n  templateUrl: './transaction-dialog.component.html',\n  styleUrls: ['./transaction-dialog.component.css']\n})\nexport class TransactionDialogComponent implements OnInit {\n  /**\n   *Transaction items for table  \n   *\n   * @memberof TransactionDialogComponent\n   */\n  dataSource;\n\n  /**\n   * Creates an instance of TransactionDialogComponent.\n   * @param {MatDialogRef} dialogRef\n   * @param {DialogData} data\n   * @memberof TransactionDialogComponent\n   */\n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  /**\n   *Table paginator\n   *\n   * @type {MatPaginator}\n   * @memberof TransactionDialogComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Table columns \n   *\n   * @memberof TransactionDialogComponent\n   */\n  displayedColumns = ['productId', 'name', 'price'];\n\n  /**\n   *Adds the list of transaction items to the table \n   *\n   * @memberof TransactionDialogComponent\n   */\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.data.items);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   *Closes the dialog\n   *\n   * @memberof TransactionDialogComponent\n   */\n  close() {\n    this.dialogRef.close();\n  } \n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        Shared webpage footer\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/footer/footer.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of FooterComponent.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/footer/footer.component.ts:28\n                \n            \n\n\n            \n                \n                    Empty ngOnInit function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *Shared webpage footer\n *\n * @export\n * @class FooterComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  /**\n   * Creates an instance of FooterComponent.\n   * @memberof FooterComponent\n   */\n  constructor() { }\n\n  /**\n   *Empty ngOnInit function\n   *\n   * @memberof FooterComponent\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    &copy; All rights reserved 2020\n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                footer {\n    padding: 20px; \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © All rights reserved 2020'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Shared webpage header\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onButtonClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, _default: DefaultComponent, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/header/header.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of HeaderComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _default\n                                                  \n                                                        \n                                                                        DefaultComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:26\n                            \n                        \n                \n                    \n                        Custom Angular property that emits a custom event within the app-header selector  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/header/header.component.ts:60\n                \n            \n\n\n            \n                \n                    Used to logout the user when they click the logout button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/header/header.component.ts:42\n                \n            \n\n\n            \n                \n                    Empty ngOnInit function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onButtonClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n                    Triggers a custom onClick event to the default layout component \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/header/header.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../../../auth/auth.service'\nimport { DefaultComponent } from '../../../layouts/default/default.component';\n\n/**\n *Shared webpage header\n *\n * @export\n * @class HeaderComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  /**\n   *Custom Angular property that emits a custom event within the app-header selector  \n   *\n   * @type {EventEmitter}\n   * @memberof HeaderComponent\n   */\n  @Output() public onClick: EventEmitter = new EventEmitter(); \n\n  /**\n   * Creates an instance of HeaderComponent.\n   * @param {AuthService} authService\n   * @param {DefaultComponent} _default\n   * @param {MatSnackBar} _snackBar\n   * @memberof HeaderComponent\n   */\n  constructor(public authService: AuthService, private _default: DefaultComponent, private _snackBar: MatSnackBar) { }\n\n  /**\n   *Empty ngOnInit function\n   *\n   * @memberof HeaderComponent\n   */\n  ngOnInit(): void { \n  }\n\n  /**\n   *Triggers a custom onClick event to the default layout component \n   *\n   * @param {*} event\n   * @memberof HeaderComponent\n   */\n  public onButtonClick(event):void{\n    this.onClick.emit()\n  }\n\n  /**\n   *Used to logout the user when they click the logout button\n   *\n   * @memberof HeaderComponent\n   */\n  logout(){\n    this.authService.logoutUser();\n\n    this._snackBar.open(\"Logged Out Successfully\", \"Close\", {\n      duration: 2000,\n      panelClass: ['blue-snackbar']\n    });\n\n    \n    this._default.setSideBarOpen(false);\n\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            menu\n        \n        Point of Sale System\n\n        \n            \n                \n                    \n                        settings\n                    \n                    \n                        \n                            add\n                            Create User\n                        \n                    \n                \n                \n                    \n                        person_outline\n                    \n                    \n                        \n                            login\n                            Login\n                        \n\n                        \n                            login\n                            Logout\n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                ul li{\n    list-style: none;\n}\n\n#appname:focus {\n    outline: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        menu                Point of Sale System                                                                                settings                                                                                            add                            Create User                                                                                                                        person_outline                                                                                            login                            Login                                                                            login                            Logout                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InventoryComponent.html":{"url":"components/InventoryComponent.html","title":"component - InventoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InventoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/inventory/inventory.component.ts\n\n\n    \n        Description\n    \n    \n        Inventory Component to view the current inventory\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inventory\n            \n\n            \n                styleUrls\n                ./inventory.component.css\n            \n\n\n\n            \n                templateUrl\n                ./inventory.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                input\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/inventory/inventory.component.ts:69\n                            \n                        \n\n                \n                    \n                            Creates an instance of InventoryComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/inventory/inventory.component.ts:121\n                \n            \n\n\n            \n                \n                    Filters the table based on the input from the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/inventory/inventory.component.ts:98\n                \n            \n\n\n            \n                \n                    Gets the inventory from the HTTP request in the auth service and adds it to the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/inventory/inventory.component.ts:61\n                            \n                        \n\n                \n                    \n                        Table data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['productId', 'name', 'price', 'stock']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/inventory/inventory.component.ts:83\n                            \n                        \n\n                \n                    \n                        Table Columns\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('focus')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/inventory/inventory.component.ts:69\n                            \n                        \n\n                \n                    \n                        Used to autofocus on the search input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/inventory/inventory.component.ts:91\n                            \n                        \n\n                \n                    \n                        Table Paginator\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\n\n/**\n *Item Details\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Item Name\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  name: string;\n  /**\n   *Product ID\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  productId: number;\n  /**\n   *Product Price\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  price: number;\n  /**\n   *Product Sock\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  stock: number;\n}\n\n/**\n *Inventory Component to view the current inventory\n *\n * @export\n * @class InventoryComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent implements OnInit {\n  /**\n   *Table data\n   *\n   * @memberof InventoryComponent\n   */\n  dataSource;\n\n  /**\n   *Used to autofocus on the search input field \n   *\n   * @type {ElementRef}\n   * @memberof InventoryComponent\n   */\n  @ViewChild('focus') input: ElementRef;\n\n  /**\n   * Creates an instance of InventoryComponent.\n   * @param {AuthService} _auth\n   * @memberof InventoryComponent\n   */\n  constructor(private _auth: AuthService) { }\n\n  /**\n   *Table Columns\n   *\n   * @memberof InventoryComponent\n   */\n  displayedColumns = ['productId', 'name', 'price', 'stock'];\n\n  /**\n   *Table Paginator\n   *\n   * @type {MatPaginator}\n   * @memberof InventoryComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Gets the inventory from the HTTP request in the auth service and adds it to the table\n   *\n   * @memberof InventoryComponent\n   */\n  ngOnInit(): void {\n    this._auth.getProducts().subscribe(\n      (res:any) => {\n        console.log(res)\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n\n        setTimeout(()=>{\n          this.input.nativeElement.focus();\n        },0);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Filters the table based on the input from the user\n   *\n   * @param {Event} event\n   * @memberof InventoryComponent\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n\n\n\n\n  \n\n\n    \n\n    \n        \n  Search\n  \n  search\n\n\n\n  \n    \n      \n      \n         Product ID \n         {{element.productId}} \n      \n  \n      \n      \n         Name \n         {{element.name}} \n      \n  \n      \n      \n         Price \n         {{element.price}} \n      \n  \n      \n      \n         Stock \n         {{element.stock}} \n      \n  \n      \n      \n\n      \n      \n        No data matching the search \"{{input.value}}\"\n      \n    \n\n    \n  \n  \n    \n\n    \n                \n                    ./inventory.component.css\n                \n                /* Structure */\ntable {\n    width: 100%;\n}\n  \n.mat-form-field {\n    font-size: 14px;\n    width: 50%;\n    margin-left: 50%;\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Search    search                           Product ID          {{element.productId}}                              Name          {{element.name}}                              Price          {{element.price}}                              Stock          {{element.stock}}                                         No data matching the search \"{{input.value}}\"                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InventoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Login component to login the user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginUserData\n                            \n                            \n                                showErrorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, _router: Router, _snackBar: MatSnackBar, _default: DefaultComponent, _sidebar: SidebarComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/login/login.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of LoginComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _default\n                                                  \n                                                        \n                                                                        DefaultComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _sidebar\n                                                  \n                                                        \n                                                                        SidebarComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/login/login.component.ts:92\n                \n            \n\n\n            \n                \n                    Sets the sidebar username and user type based on the user that is logging in and stores that information in localstorage to be retrieved\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/login/login.component.ts:58\n                \n            \n\n\n            \n                \n                    Empty ngOnInit function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/login/login.component.ts:66\n                \n            \n\n\n            \n                \n                    Logs in the user when the login button is clicked, navigates to the dashboard and shows a snackbar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUserData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        FormGroup to store the login user details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                        Variable to store the state of the login error message\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DefaultComponent } from '../../layouts/default/default.component';\nimport { SidebarComponent } from '../../shared/components/sidebar/sidebar.component';\n\n/**\n *Login component to login the user\n *\n * @export\n * @class LoginComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   *Variable to store the state of the login error message\n   *\n   * @memberof LoginComponent\n   */\n  showErrorMessage = false;\n\n  /**\n   *FormGroup to store the login user details\n   *\n   * @memberof LoginComponent\n   */\n  loginUserData = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n  })\n\n  /**\n   * Creates an instance of LoginComponent.\n   * @param {AuthService} _auth\n   * @param {Router} _router\n   * @param {MatSnackBar} _snackBar\n   * @param {DefaultComponent} _default\n   * @param {SidebarComponent} _sidebar\n   * @memberof LoginComponent\n   */\n  constructor(private _auth: AuthService, private _router: Router, private _snackBar: MatSnackBar, private _default: DefaultComponent, private _sidebar: SidebarComponent) { \n    this._auth.logoutUser() //makes sure the user is logged out if they navigate to the login page\n  }\n\n  /**\n   *Empty ngOnInit function\n   *\n   * @memberof LoginComponent\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   *Logs in the user when the login button is clicked, navigates to the dashboard and shows a snackbar\n   *\n   * @memberof LoginComponent\n   */\n  onSubmit(){\n    this._auth.loginUser(this.loginUserData.value).subscribe(\n      (res:any) => {\n        localStorage.setItem('token', res.access_token)\n        this.getCurrentUser();\n        \n        this._router.navigate(['/'])\n\n        this._default.setSideBarOpen(true);\n\n        this._snackBar.open(\"Logged In Successfully\", \"Close\", {\n          duration: 2000,\n          panelClass: ['blue-snackbar']\n        });\n      },\n      error => {\n        this.showErrorMessage = true;\n      }\n    )\n  }\n\n  /**\n   *Sets the sidebar username and user type based on the user that is logging in and stores that information in localstorage to be retrieved\n   *\n   * @memberof LoginComponent\n   */\n  getCurrentUser(){\n    this._auth.getCurrentUser().subscribe(\n      (res:any) => {\n        this._sidebar.setUserDetails(res.empFirstName + \" \" + res.empLastName, res.empType);\n        \n        localStorage.setItem('empFirstName', res.empFirstName)\n        localStorage.setItem('empLastName', res.empLastName)\n        localStorage.setItem('empType', res.empType)\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n  \n    Login\n  \n\n  \n    Error. Please Check Username or Password\n    \n    \n      \n        Employee ID\n        \n      \n      \n      \n        Password\n        \n      \n      \n      Login\n    \n  \n \n    \n\n    \n                \n                    ./login.component.css\n                \n                .login-card {\n    max-width: 400px;\n    margin: auto;\n    margin-top: 10%;\n}\n\n.mat-form-field{\n    width:100% !important;\n}\n\n.mat-card {\n    text-align: center;\n}\n\n.mat-card-header {\n    justify-content: center;\n}\n\n#loginFail {\n    background-color: red;\n    color: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login        Error. Please Check Username or Password                      Employee ID                                  Password                          Login       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagementComponent.html":{"url":"components/ManagementComponent.html","title":"component - ManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/management/management.component.ts\n\n\n    \n        Description\n    \n    \n        Management component to manage inventory\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-management\n            \n\n            \n                styleUrls\n                ./management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredOptions\n                            \n                            \n                                    Public\n                                myForm\n                            \n                            \n                                    Public\n                                productItemNumbers\n                            \n                            \n                                    Public\n                                productList\n                            \n                            \n                                    Public\n                                productNames\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                addProduct\n                            \n                            \n                                autoComplete\n                            \n                            \n                                    Public\n                                autofill\n                            \n                            \n                                    Public\n                                calculateSP\n                            \n                            \n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                initialiseList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                updateProduct\n                            \n                            \n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    productForms\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, _auth: AuthService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/management/management.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of ManagementComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:146\n                \n            \n\n\n            \n                \n                    Gets the user input and returns a filtered list of all the items that contain the substring\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        {string[]}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addProduct\n                        \n                        \n                    \n                \n            \n            \n                \naddProduct()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:115\n                \n            \n\n\n            \n                \n                    Adds a new blank line to the product form  for the user to input the details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoComplete\n                        \n                        \n                    \n                \n            \n            \n                \nautoComplete(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:268\n                \n            \n\n\n            \n                \n                    Auto completes filtered list \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            autofill\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    autofill(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:233\n                \n            \n\n\n            \n                \n                    Autofills fields of the product form\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            calculateSP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateSP(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:252\n                \n            \n\n\n            \n                \n                    Calculates sales price\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createProduct\n                        \n                        \n                    \n                \n            \n            \n                \ncreateProduct(createdProducts)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:158\n                \n            \n\n\n            \n                \n                    Creates a new product using the AuthService createProduct function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createdProducts\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProduct\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProduct(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:133\n                \n            \n\n\n            \n                \n                    Deletes a product from the product from\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialiseList\n                        \n                        \n                    \n                \n            \n            \n                \ninitialiseList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:279\n                \n            \n\n\n            \n                \n                    Initialize the filtered list\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:78\n                \n            \n\n\n            \n                \n                    Gets all the products and stores the various items in productNames, productItemNumbers and productList\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:288\n                \n            \n\n\n            \n                \n                    Opens the success dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProduct\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProduct(updatedProducts)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:175\n                \n            \n\n\n            \n                \n                    Updates a product using the AuthService updateProduct function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updatedProducts\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateStock\n                        \n                        \n                    \n                \n            \n            \n                \nupdateStock()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/management/management.component.ts:191\n                \n            \n\n\n            \n                \n                    Updates the stock by creating new products and updating old products\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/management/management.component.ts:62\n                            \n                        \n\n                \n                    \n                        Stores the names of the products that contains the substring entered by the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            myForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/management/management.component.ts:35\n                            \n                        \n\n                \n                    \n                        FormGroup for the products entered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productItemNumbers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/management/management.component.ts:55\n                            \n                        \n\n                \n                    \n                        String array to store the item numbers of the products in the inventory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productList\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/management/management.component.ts:41\n                            \n                        \n\n                \n                    \n                        List of all products in the inventory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/management/management.component.ts:48\n                            \n                        \n\n                \n                    \n                        String array to store the names of all the products in the inventory\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        productForms\n                    \n                \n\n                \n                    \n                        getproductForms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/management/management.component.ts:106\n                                \n                            \n                    \n                        \n                                Gets the items entered by the user in the product form \n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray} from '@angular/forms'; \nimport { AuthService } from '../../auth/auth.service';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { CourseDialogComponent } from './course-dialog/course-dialog.component';\n\nexport type product = {\n  \"productId\": string, \n  \"name\": string, \n  \"costPrice\": number, \n  \"price\": number, \n  \"stock\": number\n}\n\n/**\n *Management component to manage inventory\n *\n * @export\n * @class ManagementComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.component.html',\n  styleUrls: ['./management.component.css']\n})\nexport class ManagementComponent implements OnInit {\n\n  /**\n   *FormGroup for the products entered\n   *\n   * @type {FormGroup}\n   * @memberof ManagementComponent\n   */\n  public myForm: FormGroup; \n  /**\n   *List of all products in the inventory\n   *\n   * @memberof ManagementComponent\n   */\n  public productList; \n  /**\n   *String array to store the names of all the products in the inventory\n   *\n   * @type {string[]}\n   * @memberof ManagementComponent\n   */\n  public productNames: string[]; \n  /**\n   *String array to store the item numbers of the products in the inventory\n   *\n   * @type {string[]}\n   * @memberof ManagementComponent\n   */\n  public productItemNumbers: string[]; \n  /**\n   *Stores the names of the products that contains the substring entered by the user\n   *\n   * @type {string[]}\n   * @memberof ManagementComponent\n   */\n  filteredOptions: string[];\n\n  /**\n   * Creates an instance of ManagementComponent.\n   * @param {FormBuilder} formBuilder\n   * @param {AuthService} _auth\n   * @param {MatDialog} dialog\n   * @memberof ManagementComponent\n   */\n  constructor(private formBuilder: FormBuilder, private _auth: AuthService, private dialog: MatDialog) { }\n\n  /**\n   *Gets all the products and stores the various items in productNames, productItemNumbers and productList\n   *\n   * @memberof ManagementComponent\n   */\n  ngOnInit(): void {\n\n    this.myForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n\n    this._auth.getProducts().subscribe(\n      (res:any) => {\n        this.productList = res;\n        this.productNames = []; \n        this.productItemNumbers = []; \n        for(let product of this.productList){\n          this.productNames.push(product.name); \n          this.productItemNumbers.push(product.productId); \n        } \n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Gets the items entered by the user in the product form \n   *\n   * @readonly\n   * @memberof ManagementComponent\n   */\n  get productForms(){\n    return this.myForm.get('products') as FormArray; \n  }\n\n  /**\n   *Adds a new blank line to the product form  for the user to input the details\n   *\n   * @memberof ManagementComponent\n   */\n  addProduct(){\n\n    const product = this.formBuilder.group({\n      productId: [], \n      name: [], \n      costPrice: [], \n      price: [], \n      stock: []\n    })\n    this.productForms.push(product); \n  }\n\n  /**\n   *Deletes a product from the product from\n   *\n   * @param {*} i\n   * @memberof ManagementComponent\n   */\n  deleteProduct(i){\n    this.productForms.removeAt(i); \n  }\n\n\n  /**\n   *Gets the user input and returns a filtered list of all the items that contain the substring\n   *\n   * @private\n   * @param {string} value\n   * @return {*}  {string[]}\n   * @memberof ManagementComponent\n   */\n  private _filter(value: string): string[] {\n    if (!value || value==='') return this.productNames;\n    const filterValue = value.toString().toLowerCase();\n    return this.productNames.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  /**\n   *Creates a new product using the AuthService createProduct function\n   *\n   * @param {*} createdProducts\n   * @memberof ManagementComponent\n   */\n  createProduct(createdProducts):void{\n    this._auth.createProduct(createdProducts).subscribe(\n      (res:any) => {\n        console.log(res); \n      }, \n      (error:any) => {\n        console.log(error);\n      }\n    )\n  }\n\n  /**\n   *Updates a product using the AuthService updateProduct function\n   *\n   * @param {*} updatedProducts\n   * @memberof ManagementComponent\n   */\n  updateProduct(updatedProducts){\n    this._auth.updateProduct(updatedProducts).subscribe(\n      (res:any) => {\n        console.log(res); \n      }, \n      (error:any) => {\n        console.log(error);\n      }\n    )\n  }\n\n  /**\n   *Updates the stock by creating new products and updating old products\n   *\n   * @memberof ManagementComponent\n   */\n  updateStock(){\n    let productsEntered = this.productForms.value as Array;\n    let productsCreated = []; \n    let productsUpdated = []; \n\n    productsEntered.forEach(element => {\n      let inProductList: boolean = false; \n      let enteredProduct = element as product; \n\n      for(let item of this.productList){\n        if(item.productId === enteredProduct.productId){\n          productsUpdated.push(enteredProduct); \n          inProductList = true; \n          break; \n        }\n      }\n\n      if(!inProductList){\n        productsCreated.push(enteredProduct); \n      }\n\n      this.openDialog(); \n      this.ngOnInit();\n\n    }); \n\n    \n    if(productsCreated.length !== 0){\n      this.createProduct(productsCreated); \n    }\n    if(productsUpdated.length !== 0){\n      console.log(productsUpdated); \n      this.updateProduct(productsUpdated);  \n    }\n  }\n\n  /**\n   *Autofills fields of the product form\n   *\n   * @param {*} i\n   * @memberof ManagementComponent\n   */\n  public autofill(i){\n    let productValues = this.productForms.at(i).value; \n    this.productList.forEach(element => {\n      if(element.name === productValues.name || element.productId == productValues.productId){\n        this.productForms.at(i).get('productId').setValue(`${element.productId}`);\n        this.productForms.at(i).get('name').setValue(`${element.name}`);\n        this.productForms.at(i).get('price').setValue(`${element.price}`); \n        this.productForms.at(i).get('stock').setValue(`${element.stock}`); \n      }\n    });\n  }\n\n  /**\n   *Calculates sales price\n   *\n   * @param {*} i\n   * @return {*} \n   * @memberof ManagementComponent\n   */\n  public calculateSP(i){\n    let productValues = this.productForms.at(i).value;  \n    let markupPercentage: number = (this._auth.getMarkupValue()/100) as number; \n    if(!markupPercentage) return; \n    let markupPrice: number = markupPercentage * productValues.costPrice; \n    let sellingPrice: number =  Number(markupPrice) + Number(productValues.costPrice);\n    console.log(sellingPrice); \n    this.productForms.at(i).get('price').setValue(sellingPrice);\n  }\n\n  /**\n   *Auto completes filtered list \n   *\n   * @param {*} i\n   * @memberof ManagementComponent\n   */\n  autoComplete(i){\n    let productEntry = this.productForms.at(i).value.name; \n    console.log(productEntry); \n    this.filteredOptions = this._filter(productEntry); \n  }\n\n  /**\n   *Initialize the filtered list\n   *\n   * @memberof ManagementComponent\n   */\n  initialiseList(){\n    this.filteredOptions = this.productNames;  \n  }\n\n  /**\n   *Opens the success dialog\n   *\n   * @memberof ManagementComponent\n   */\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    this.dialog.open(CourseDialogComponent, dialogConfig);\n}\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            \n                               \n                      \n\n                    \n                        \n                            \n                            \n                                  \n                                \n                                {{option}}\n                                \n                            \n                            \n                        \n                    \n\n                    \n                        \n                            \n                        \n                    \n\n                    \n                        \n                            \n                        \n                    \n\n                    \n                        \n                            \n                        \n                    \n\n                    \n                        Cancel Product Entry\n                    \n                \n            \n        \n    \n\n\n    \n        \n            Add Product\n        \n        \n            Update Stock\n        \n    \n    \n    \n\n    \n\n    \n                \n                    ./management.component.css\n                \n                mat-grid-tile {\n    background: #F4F4F6;\n}\n\n.utility-buttons{\n    margin-top: 2em;\n}\n\nmat-form-field{\n    display: inline-block;\n    width: 60%;\n}\n\nmat-form-field{\n    display: inline-block;\n    width: 60%;\n}\n\n.product-name-input{\n    display: inline-block;\n    width: 80%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                                                       {{option}}ancel Product Entry                                                                                    Add Product                            Update Stock                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ManagerGuard.html":{"url":"guards/ManagerGuard.html","title":"guard - ManagerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ManagerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/manager.guard.ts\n            \n\n                \n                Description\n                \n                \n                    ManagerGuard is used to allow only manager accounts to access certain sections of the site\n\n                \n\n\n\n                \n                Example\n                \n                \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/manager.guard.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of ManagerGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/manager.guard.ts:31\n                \n            \n\n\n            \n                \n                    canActivate checks to see if the user that is logged into the system is manage . If they are not a manage then it redirects them to the the dashboard\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        {boolean}\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n/**\n *ManagerGuard is used to allow only manager accounts to access certain sections of the site\n *\n * @export\n * @class ManagerGuard\n * @implements {CanActivate}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerGuard implements CanActivate {\n\n  /**\n   * Creates an instance of ManagerGuard.\n   * @param {AuthService} _auth\n   * @param {Router} _router\n   * @memberof ManagerGuard\n   */\n  constructor(private _auth: AuthService, private _router: Router) { }\n\n  /**\n   *canActivate checks to see if the user that is logged into the system is manage . If they are not a manage then it redirects them to the the dashboard\n   *\n   * @return {*}  {boolean}\n   * @memberof ManagerGuard\n   */\n  canActivate(): boolean {\n    if(this._auth.loggedIn() && localStorage.getItem('empType') === 'Manager'){\n      return true\n    } else {\n      this._router.navigate([''])\n      return false\n    }\n  }\n  \n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        Allows managers to register new users to the system\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                employeeDataForm\n                            \n                            \n                                form\n                            \n                            \n                                showErrorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/register/register.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of RegisterComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/register/register.component.ts:63\n                \n            \n\n\n            \n                \n                    Empty ngOnInit function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/register/register.component.ts:71\n                \n            \n\n\n            \n                \n                    When the manager presses the register button a new user is registered to the system using the registerUser function from AuthService \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            employeeDataForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    empFirstName: new FormControl(''),\n    empLastName: new FormControl(''),\n    age: new FormControl(''),\n    empType: new FormControl(''),\n    password: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/register/register.component.ts:42\n                            \n                        \n\n                \n                    \n                        EmployeeDataForm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('myFGD', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/register/register.component.ts:28\n                            \n                        \n\n                \n                    \n                        Used to clear the form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/register/register.component.ts:35\n                            \n                        \n\n                \n                    \n                        Status of login error message\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroupDirective } from '@angular/forms';\n\n/**\n *Allows managers to register new users to the system\n *\n * @export\n * @class RegisterComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  /**\n   *Used to clear the form \n   *\n   * @type {NgForm}\n   * @memberof RegisterComponent\n   */\n  @ViewChild('myFGD', {static: true}) form: NgForm;\n\n  /**\n   *Status of login error message\n   *\n   * @memberof RegisterComponent\n   */\n  showErrorMessage = false;\n\n  /**\n   *EmployeeDataForm\n   *\n   * @memberof RegisterComponent\n   */\n  employeeDataForm = new FormGroup({\n    empFirstName: new FormControl(''),\n    empLastName: new FormControl(''),\n    age: new FormControl(''),\n    empType: new FormControl(''),\n    password: new FormControl('')\n  })\n  \n  /**\n   * Creates an instance of RegisterComponent.\n   * @param {AuthService} _auth\n   * @param {MatSnackBar} _snackBar\n   * @memberof RegisterComponent\n   */\n  constructor(private _auth: AuthService, private _snackBar: MatSnackBar) { }\n\n  /**\n   *Empty ngOnInit function\n   *\n   * @memberof RegisterComponent\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   *When the manager presses the register button a new user is registered to the system using the registerUser function from AuthService \n   *\n   * @memberof RegisterComponent\n   */\n  onSubmit(){\n    this._auth.registerUser(this.employeeDataForm.value).subscribe(\n      (res:any) => {\n        const result = res;\n\n        this.form.resetForm();\n\n        this._snackBar.open(\"Registered Employee ID \"+ result.id +\" Successfully\", \"Close\", {\n          duration: 9000,\n          panelClass: ['blue-snackbar']\n        });\n        \n      },\n      error => {\n        console.log(error);\n\n        this.showErrorMessage = true;\n      }\n    )\n  }\n    \n}\n\n    \n\n    \n        \n    \n      Add Employee\n    \n  \n    \n      Error\n      \n      \n        \n            First Name\n          \n        \n        \n        \n            Last Name\n            \n        \n        \n        \n            Age\n            \n        \n        \n        \n            Employee Type\n            \n                Manager\n                Data Entry\n                Sales\n            \n        \n        \n        \n            Password\n            \n        \n        \n        Register\n      \n    \n   \n    \n\n    \n                \n                    ./register.component.css\n                \n                .register-card {\n    max-width: 400px;\n    margin: auto;\n    margin-top: 5%;\n}\n\n.mat-form-field{\n    width:100% !important;\n}\n\n.mat-card {\n    text-align: center;\n}\n\n.mat-card-header {\n    justify-content: center;\n}\n\n#registerFail {\n    background-color: red;\n    color: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Add Employee                Error                                First Name                                              Last Name                                                Age                                                Employee Type                            Manager                Data Entry                Sales                                                Password                                    Register             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/settings.component.ts\n\n\n    \n        Description\n    \n    \n        Sets the system wide markup\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentMarkupValue\n                            \n                            \n                                input\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                setMargin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/settings.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of SettingsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:46\n                \n            \n\n\n            \n                \n                    Gets the current markup using the getMarkupValue from AuthService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMargin\n                        \n                        \n                    \n                \n            \n            \n                \nsetMargin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:56\n                \n            \n\n\n            \n                \n                    Sets the markup using the user input and the setMarkupValue function from AuthService\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentMarkupValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/settings.component.ts:32\n                            \n                        \n\n                \n                    \n                        Current system markup\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('markupValue')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/settings.component.ts:25\n                            \n                        \n\n                \n                    \n                        User input for markup\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, ViewChild} from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n\n\n/**\n *Sets the system wide markup\n *\n * @export\n * @class SettingsComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements AfterViewInit {\n\n  /**\n   *User input for markup\n   *\n   * @memberof SettingsComponent\n   */\n  @ViewChild('markupValue') input; \n  /**\n   *Current system markup\n   *\n   * @type {number}\n   * @memberof SettingsComponent\n   */\n  public currentMarkupValue: number; \n\n  /**\n   * Creates an instance of SettingsComponent.\n   * @param {AuthService} _auth\n   * @memberof SettingsComponent\n   */\n  constructor(private _auth: AuthService) {}\n\n  /**\n   *Gets the current markup using the getMarkupValue from AuthService\n   *\n   * @memberof SettingsComponent\n   */\n  ngAfterViewInit(): void {\n    this.currentMarkupValue = this._auth.getMarkupValue();\n    console.log(this.currentMarkupValue); \n  }\n\n  /**\n   *Sets the markup using the user input and the setMarkupValue function from AuthService\n   *\n   * @memberof SettingsComponent\n   */\n  setMargin(){\n    let markupValue: number = this.input.nativeElement.value as number; \n    this._auth.updateMarkup({\"markupVal\": markupValue}).subscribe(\n      (res:any)=>{\n        this._auth.setMarkupValue(markupValue); \n      }\n    ) \n  }\n\n}\n\n    \n\n    \n        \n    \n        Set Automatic Markup Margin\n    \n    \n    \n        \n            \n              Input %\n              \n            \n            \n        \n    \n    \n      Set\n    \n  \n    \n\n    \n                \n                    ./settings.component.css\n                \n                \n.example-card {\n    max-width: 200px;\n  }\n  \n  .example-header-image {\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n    background-size: cover;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Set Automatic Markup Margin                                              Input %                                                            Set      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSharedModule -->\n\nSidebarComponent->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSharedModule->SidebarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,  \n    FooterComponent, \n    SidebarComponent\n  ],\n  imports: [\n    CommonModule, \n    MatDividerModule,\n    MatToolbarModule, \n    MatIconModule,\n    MatButtonModule, \n    FlexLayoutModule,\n    MatMenuModule,\n    MatListModule,\n    RouterModule,\n    MatGridListModule,\n    MatCardModule\n  ], \n  exports: [\n    HeaderComponent, \n    FooterComponent, \n    SidebarComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/sidebar/sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Shared webpage sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                type\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setUserDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/sidebar/sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of SidebarComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:45\n                \n            \n\n\n            \n                \n                    Sets the username and user type from localstorage when the sidebar is initialized to their respective variables \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUserDetails\n                        \n                        \n                    \n                \n            \n            \n                \nsetUserDetails(username, type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:59\n                \n            \n\n\n            \n                \n                    Sets the username and user type \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Type\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        UserType variable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Username\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/sidebar/sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                        Username variable\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit } from '@angular/core';\nimport { AuthService } from '../../../auth/auth.service'\n\n/**\n *Shared webpage sidebar\n *\n * @export\n * @class SidebarComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarComponent implements OnInit {\n  /**\n   *Username variable\n   *\n   * @memberof SidebarComponent\n   */\n  username = \"Username\"\n  /**\n   *UserType variable\n   *\n   * @memberof SidebarComponent\n   */\n  type = \"Type\"\n\n  /**\n   * Creates an instance of SidebarComponent.\n   * @param {AuthService} authService\n   * @memberof SidebarComponent\n   */\n  constructor(public authService: AuthService) { }\n\n  /**\n   *Sets the username and user type from localstorage when the sidebar is initialized to their respective variables \n   *\n   * @memberof SidebarComponent\n   */\n  ngOnInit(): void {\n    if(localStorage.getItem(\"empType\")){\n      this.type = localStorage.getItem(\"empType\");\n      this.username = localStorage.getItem(\"empFirstName\") + \" \" + localStorage.getItem(\"empLastName\");\n    }\n  }\n\n  /**\n   *Sets the username and user type \n   *\n   * @param {*} username\n   * @param {*} type\n   * @memberof SidebarComponent\n   */\n  setUserDetails(username, type){\n    document.getElementById(\"username\").innerHTML = username;\n    document.getElementById(\"type\").innerHTML = type;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            {{ username }}\n            {{ type }}\n        \n    \n\n    \n\n    Pages\n\n    \n        dashboardDashboard\n    \n    \n        point_of_salePoint Of Sale\n    \n    \n        inboxInventory\n    \n    \n        attach_moneyTransactions\n    \n    \n        addManage Stock\n    \n\n\n    \n    \n    \n         Manager Tools\n\n        \n            tune\n            Global Settings\n        \n\n        \n            people\n            Users\n        \n    \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                :host .mat-icon  {\n    vertical-align: middle;\n    margin-right: 20px; \n}\n\n.example-header-image {\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n    background-size: cover;\n}\n\nmat-card-subtitle{\n    margin-bottom: 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{ username }}            {{ type }}                    Pages            dashboardDashboard                point_of_salePoint Of Sale                inboxInventory                attach_moneyTransactions                addManage Stock                         Manager Tools                    tune            Global Settings                            people            Users            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SuccessDialogComponent.html":{"url":"components/SuccessDialogComponent.html","title":"component - SuccessDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SuccessDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/point-of-sale/success-dialog/success-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Success dialog for a completed transaction\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-success-dialog\n            \n\n            \n                styleUrls\n                ./success-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./success-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/point-of-sale/success-dialog/success-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of SuccessDialogComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/point-of-sale/success-dialog/success-dialog.component.ts:43\n                \n            \n\n\n            \n                \n                    Closed the dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/point-of-sale/success-dialog/success-dialog.component.ts:35\n                \n            \n\n\n            \n                \n                    Empty ngOnInit function \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/point-of-sale/success-dialog/success-dialog.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../point-of-sale.component';\n\n/**\n *Success dialog for a completed transaction\n *\n * @export\n * @class SuccessDialogComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-success-dialog',\n  templateUrl: './success-dialog.component.html',\n  styleUrls: ['./success-dialog.component.css']\n})\nexport class SuccessDialogComponent implements OnInit {\n\n  /**\n   * Creates an instance of SuccessDialogComponent.\n   * \n   * @param {MatDialogRef} dialogRef\n   * @param {DialogData} data\n   * @memberof SuccessDialogComponent\n   */\n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: DialogData) { \n    dialogRef.disableClose = true;\n  }\n\n  /**\n   *Empty ngOnInit function \n   *\n   * @memberof SuccessDialogComponent\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   *Closed the dialog\n   *\n   * @memberof SuccessDialogComponent\n   */\n  close() {\n    this.dialogRef.close();\n  } \n\n}\n\n    \n\n    \n        Transaction Succesful!\n\n  Change To Give Customer: ${{data.change}}\n\n\n  Close\n\n    \n\n    \n                \n                    ./success-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Transaction Succesful!  Change To Give Customer: ${{data.change}}  Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SuccessDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptorService.html":{"url":"interceptors/TokenInterceptorService.html","title":"interceptor - TokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/token-interceptor.service.ts\n        \n\n            \n                Description\n            \n            \n                TokenInterceptorService is used to add the JWT Token to all requests in the AuthService\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/token-interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of TokenInterceptorService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/token-interceptor.service.ts:33\n                \n            \n\n\n            \n                \n                    Adds the JWT Token to the HTTP header in all requests\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        {Observable>}\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/token-interceptor.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest,HttpHandler,HttpEvent,HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Observable } from 'rxjs';\n\n/**\n *TokenInterceptorService is used to add the JWT Token to all requests in the AuthService\n *\n * @export\n * @class TokenInterceptorService\n * @implements {HttpInterceptor}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  /**\n   * Creates an instance of TokenInterceptorService.\n   * @param {AuthService} auth\n   * @memberof TokenInterceptorService\n   */\n  constructor(public auth: AuthService) { }\n\n  /**\n   *Adds the JWT Token to the HTTP header in all requests\n   *\n   * @param {HttpRequest} request\n   * @param {HttpHandler} next\n   * @return {*}  {Observable>}\n   * @memberof TokenInterceptorService\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    \n    request = request.clone({\n      setHeaders: {\n        Authorization: `JWT ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionDialogComponent.html":{"url":"components/TransactionDialogComponent.html","title":"component - TransactionDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransactionDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Dialog to show transaction detail\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-dialog\n            \n\n            \n                styleUrls\n                ./transaction-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./transaction-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts:56\n                            \n                        \n\n                \n                    \n                            Creates an instance of TransactionDialogComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts:96\n                \n            \n\n\n            \n                \n                    Closes the dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts:86\n                \n            \n\n\n            \n                \n                    Adds the list of transaction items to the table \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts:56\n                            \n                        \n\n                \n                    \n                        Transaction items for table  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['productId', 'name', 'price']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts:79\n                            \n                        \n\n                \n                    \n                        Table columns \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts:72\n                            \n                        \n\n                \n                    \n                        Table paginator\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../transactions.component';\nimport { SuccessDialogComponent } from '../../point-of-sale/success-dialog/success-dialog.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n/**\n *Item information interface\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Product ID\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  productId: number;\n  /**\n   *Product Name\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  name: string;\n  /**\n   *Product Price\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  price: number;\n}\n\n/**\n *Dialog to show transaction detail\n *\n * @export\n * @class TransactionDialogComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-transaction-dialog',\n  templateUrl: './transaction-dialog.component.html',\n  styleUrls: ['./transaction-dialog.component.css']\n})\nexport class TransactionDialogComponent implements OnInit {\n  /**\n   *Transaction items for table  \n   *\n   * @memberof TransactionDialogComponent\n   */\n  dataSource;\n\n  /**\n   * Creates an instance of TransactionDialogComponent.\n   * @param {MatDialogRef} dialogRef\n   * @param {DialogData} data\n   * @memberof TransactionDialogComponent\n   */\n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  /**\n   *Table paginator\n   *\n   * @type {MatPaginator}\n   * @memberof TransactionDialogComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Table columns \n   *\n   * @memberof TransactionDialogComponent\n   */\n  displayedColumns = ['productId', 'name', 'price'];\n\n  /**\n   *Adds the list of transaction items to the table \n   *\n   * @memberof TransactionDialogComponent\n   */\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.data.items);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   *Closes the dialog\n   *\n   * @memberof TransactionDialogComponent\n   */\n  close() {\n    this.dialogRef.close();\n  } \n\n}\n\n    \n\n    \n        Transaction: {{data.transactionId}}\nEmployee ID: {{data.empId}}\nDate: {{data.dateTime}}\n\n\n\n\n    \n    \n    \n         Product ID \n         {{element.productId}} \n    \n\n    \n    \n         Name\n         {{element.name}} \n    \n\n    \n    \n         Price \n         ${{element.price}} \n    \n\n    \n    \n\n    \n\n\n\n\n    Close\n\n    \n\n    \n                \n                    ./transaction-dialog.component.css\n                \n                .mat-dialog-content {\n    max-height: 400px;\n}\n\n/*Custom Scrollbar - Credits to W3Schools*/\n\n/* width */\n::-webkit-scrollbar {\n    width: 10px;\n}\n  \n/* Track */\n::-webkit-scrollbar-track {\n    background: #f1f1f1; \n}\n   \n/* Handle */\n::-webkit-scrollbar-thumb {\n    background: #888; \n}\n  \n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n    background: #555; \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Transaction: {{data.transactionId}}Employee ID: {{data.empId}}Date: {{data.dateTime}}                     Product ID          {{element.productId}}                      Name         {{element.name}}                      Price          ${{element.price}}                     Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/transactions/transactions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transactions\n            \n\n            \n                styleUrls\n                ./transactions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/transactions/transactions.component.ts:87\n                            \n                        \n\n                \n                    \n                            Creates an instance of TransactionsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/transactions/transactions.component.ts:134\n                \n            \n\n\n            \n                \n                    Filters the table based on the user's search input\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/transactions/transactions.component.ts:116\n                \n            \n\n\n            \n                \n                    Gets all transactions and adds them to the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(data, transactionId, empID, dateTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/transactions/transactions.component.ts:173\n                \n            \n\n\n            \n                \n                    Opens the transaction details dialog \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transactionId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    empID\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dateTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            row\n                        \n                        \n                    \n                \n            \n            \n                \nrow(transactionId, empId, dateTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/transactions/transactions.component.ts:151\n                \n            \n\n\n            \n                \n                    Gets the data from the row that the user selects the View button and gets the transaction details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transactionId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    empId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dateTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/transactions/transactions.component.ts:87\n                            \n                        \n\n                \n                    \n                        Stores transaction items for table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['transactionId', 'empId', 'dateTime', 'modification']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/transactions/transactions.component.ts:102\n                            \n                        \n\n                \n                    \n                        Table columns\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/transactions/transactions.component.ts:109\n                            \n                        \n\n                \n                    \n                        Table paginator\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\nimport { TransactionDialogComponent } from './transaction-dialog/transaction-dialog.component'\n\n\n/**\n *Interface to send transaction details to the dialog\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Transaction ID\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  transactionId: string;\n  /**\n   *Employee ID\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  empId: number;\n  /**\n   *Date & Time\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  dateTime: string;\n}\n\n/**\n *Interface to send the transaction items to the dialog\n *\n * @export\n * @interface DialogData\n */\nexport interface DialogData {\n  /**\n   *Items\n   *\n   * @type {*}\n   * @memberof DialogData\n   */\n  items: any;\n  /**\n   *Transaction ID\n   *\n   * @type {number}\n   * @memberof DialogData\n   */\n  transactionId: number;\n  /**\n   *Employee ID\n   *\n   * @type {number}\n   * @memberof DialogData\n   */\n  empId: number;\n  /**\n   *Date & Time\n   *\n   * @type {string}\n   * @memberof DialogData\n   */\n  dateTime: string;\n}\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\nexport class TransactionsComponent implements OnInit {\n  /**\n   *Stores transaction items for table\n   *\n   * @memberof TransactionsComponent\n   */\n  dataSource;\n  \n  /**\n   * Creates an instance of TransactionsComponent.\n   * @param {AuthService} _auth\n   * @param {MatDialog} dialog\n   * @memberof TransactionsComponent\n   */\n  constructor(private _auth: AuthService, private dialog: MatDialog) { }\n\n  /**\n   *Table columns\n   *\n   * @memberof TransactionsComponent\n   */\n  displayedColumns = ['transactionId', 'empId', 'dateTime', 'modification'];\n  /**\n   *Table paginator\n   *\n   * @type {MatPaginator}\n   * @memberof TransactionsComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Gets all transactions and adds them to the table\n   *\n   * @memberof TransactionsComponent\n   */\n  ngOnInit(): void {\n    this._auth.getTransactions().subscribe(\n      (res:any) => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Filters the table based on the user's search input\n   *\n   * @param {Event} event\n   * @memberof TransactionsComponent\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  /**\n   *Gets the data from the row that the user selects the View button and gets the transaction details\n   *\n   * @param {*} transactionId\n   * @param {*} empId\n   * @param {*} dateTime\n   * @memberof TransactionsComponent\n   */\n  row(transactionId, empId, dateTime){\n\n    this._auth.getTransactionDetail(transactionId).subscribe(\n      (res:any) => {\n        this.openDialog(res, transactionId, empId, dateTime);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  \n  /**\n   *Opens the transaction details dialog \n   *\n   * @param {*} data\n   * @param {*} transactionId\n   * @param {*} empID\n   * @param {*} dateTime\n   * @memberof TransactionsComponent\n   */\n  openDialog(data, transactionId, empID, dateTime): void {\n    const dialogRef = this.dialog.open(TransactionDialogComponent, {\n      width: '700px',\n      data: {\n        \"items\" : data,\n        \"transactionId\" : transactionId,\n        \"empId\" : empID,\n        \"dateTime\" : dateTime\n      },\n      autoFocus: false\n    });\n  }\n\n}\n\n    \n\n    \n        \n    Search\n    \n    search\n\n  \n\n\n    \n    \n    \n         Transaction ID \n         {{element.transactionId}} \n    \n\n    \n    \n         Employee ID \n         {{element.empId}} \n    \n\n    \n    \n         Date \n         {{element.dateTime}} \n    \n\n    \n        \n         \n            View\n        \n    \n\n    \n    \n\n    \n    \n        No data matching the search \"{{input.value}}\"\n    \n    \n\n    \n\n\n    \n\n    \n                \n                    ./transactions.component.css\n                \n                /* Structure */\ntable {\n    width: 100%;\n}\n  \n.mat-form-field {\n    font-size: 14px;\n    width: 50%;\n    margin-left: 50%;\n}\n\n.tableButton{\n    display: block; margin: auto; width: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Search        search                       Transaction ID          {{element.transactionId}}                      Employee ID          {{element.empId}}                      Date          {{element.dateTime}}                                      View                                    No data matching the search \"{{input.value}}\"            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/users/users.component.ts\n\n\n    \n        Description\n    \n    \n        List of users registered on the system\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/users/users.component.ts:68\n                            \n                        \n\n                \n                    \n                            Creates an instance of UsersComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/users.component.ts:114\n                \n            \n\n\n            \n                \n                    Filter the table based on the user search input\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/users/users.component.ts:96\n                \n            \n\n\n            \n                \n                    Gets all employees registered to the system and adds them to the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/users/users.component.ts:68\n                            \n                        \n\n                \n                    \n                        Users data for table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'empFirstName', 'empLastName', 'age', 'empType']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/users/users.component.ts:82\n                            \n                        \n\n                \n                    \n                        Table Columns \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/users/users.component.ts:89\n                            \n                        \n\n                \n                    \n                        Table paginator\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\n\n/**\n *Interface for employee information\n *\n * @export\n * @interface Element\n */\nexport interface Element {\n  /**\n   *Employee ID Number\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  id: number;\n  /**\n   *Employee First Name\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  empFirstName : string;\n  /**\n   *Employee Last Name\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  empLastName : string;\n  /**\n   *Employee Age\n   *\n   * @type {number}\n   * @memberof Element\n   */\n  age: number;\n  /**\n   *Employee Type\n   *\n   * @type {string}\n   * @memberof Element\n   */\n  empType: string;\n}\n\n/**\n *List of users registered on the system\n *\n * @export\n * @class UsersComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  /**\n   *Users data for table\n   *\n   * @memberof UsersComponent\n   */\n  dataSource;\n\n  /**\n   * Creates an instance of UsersComponent.\n   * @param {AuthService} _auth\n   * @memberof UsersComponent\n   */\n  constructor(private _auth: AuthService) { }\n\n  /**\n   *Table Columns \n   *\n   * @memberof UsersComponent\n   */\n  displayedColumns = ['id', 'empFirstName', 'empLastName', 'age', 'empType'];\n  /**\n   *Table paginator\n   *\n   * @type {MatPaginator}\n   * @memberof UsersComponent\n   */\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  /**\n   *Gets all employees registered to the system and adds them to the table\n   *\n   * @memberof UsersComponent\n   */\n  ngOnInit(): void {\n    this._auth.getEmployees().subscribe(\n      (res:any) => {\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  /**\n   *Filter the table based on the user search input\n   *\n   * @param {Event} event\n   * @memberof UsersComponent\n   */\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n    \n\n    \n        \n    Search\n    \n    search\n  \n  \n  \n    \n      \n        \n        \n           Employee ID \n           {{element.id}} \n        \n    \n        \n        \n           First Name \n           {{element.empFirstName}} \n        \n    \n        \n        \n           Last Name \n           {{element.empLastName}} \n        \n    \n        \n        \n           Age \n           {{element.age}} \n        \n\n        \n        \n             Employee Type \n             {{element.empType}} \n          \n    \n        \n        \n  \n        \n        \n          No data matching the search \"{{input.value}}\"\n        \n      \n  \n      \n    \n\n    \n\n    \n                \n                    ./users.component.css\n                \n                /* Structure */\ntable {\n    width: 100%;\n}\n  \n.mat-form-field {\n    font-size: 14px;\n    width: 50%;\n    margin-left: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Search        search                                           Employee ID            {{element.id}}                                        First Name            {{element.empFirstName}}                                        Last Name            {{element.empLastName}}                                        Age            {{element.age}}                                      Employee Type              {{element.empType}}                                                           No data matching the search \"{{input.value}}\"                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InventoryComponent', 'selector': 'app-inventory'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagementComponent', 'selector': 'app-management'},{'name': 'PointOfSaleComponent', 'selector': 'app-point-of-sale'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SuccessDialogComponent', 'selector': 'app-success-dialog'},{'name': 'TransactionDialogComponent', 'selector': 'app-transaction-dialog'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'},{'name': 'UsersComponent', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                src/app/auth/manager.guard.ts\n            \n            guard\n            ManagerGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/auth/token-interceptor.service.ts\n            \n            interceptor\n            TokenInterceptorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/layouts/default/default.component.ts\n            \n            component\n            DefaultComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/inventory/inventory.component.ts\n            \n            component\n            InventoryComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/modules/inventory/inventory.component.ts\n            \n            interface\n            Element\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/modules/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/management/course-dialog/course-dialog.component.ts\n            \n            component\n            CourseDialogComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/management/management.component.ts\n            \n            component\n            ManagementComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/modules/point-of-sale/point-of-sale.component.ts\n            \n            component\n            PointOfSaleComponent\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                src/app/modules/point-of-sale/point-of-sale.component.ts\n            \n            interface\n            DialogData\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/modules/point-of-sale/success-dialog/success-dialog.component.ts\n            \n            component\n            SuccessDialogComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/modules/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts\n            \n            component\n            TransactionDialogComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts\n            \n            interface\n            Element\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/transactions/transactions.component.ts\n            \n            component\n            TransactionsComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/modules/transactions/transactions.component.ts\n            \n            interface\n            DialogData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/modules/transactions/transactions.component.ts\n            \n            interface\n            Element\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/modules/users/users.component.ts\n            \n            interface\n            Element\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/sidebar/sidebar.component.ts\n            \n            injectable\n            SidebarComponent\n            \n                85 %\n                (6/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.3\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ^10.2.3\n        \n            @angular/compiler : ^10.2.3\n        \n            @angular/core : ^10.2.3\n        \n            @angular/flex-layout : ^10.0.0-beta.32\n        \n            @angular/forms : ^10.2.3\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ^10.2.3\n        \n            @angular/platform-browser-dynamic : ^10.2.3\n        \n            @angular/router : ^10.2.3\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            highcharts : ^8.2.2\n        \n            highcharts-angular : ^2.8.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPharmacyPosSystem\nThis project was generated with Angular CLI version 10.1.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DefaultModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DefaultModule\n\n\n\ncluster_DefaultModule_declarations\n\n\n\ncluster_DefaultModule_imports\n\n\n\ncluster_DefaultModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDefaultModule\n\nDefaultModule\n\nAppModule -->\n\nDefaultModule->AppModule\n\n\n\n\n\nCourseDialogComponent\n\nCourseDialogComponent\n\nDefaultModule -->\n\nCourseDialogComponent->DefaultModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDefaultModule -->\n\nDashboardComponent->DefaultModule\n\n\n\n\n\nDefaultComponent\n\nDefaultComponent\n\nDefaultModule -->\n\nDefaultComponent->DefaultModule\n\n\n\n\n\nInventoryComponent\n\nInventoryComponent\n\nDefaultModule -->\n\nInventoryComponent->DefaultModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nDefaultModule -->\n\nLoginComponent->DefaultModule\n\n\n\n\n\nManagementComponent\n\nManagementComponent\n\nDefaultModule -->\n\nManagementComponent->DefaultModule\n\n\n\n\n\nPointOfSaleComponent\n\nPointOfSaleComponent\n\nDefaultModule -->\n\nPointOfSaleComponent->DefaultModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nDefaultModule -->\n\nRegisterComponent->DefaultModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nDefaultModule -->\n\nSettingsComponent->DefaultModule\n\n\n\n\n\nSuccessDialogComponent\n\nSuccessDialogComponent\n\nDefaultModule -->\n\nSuccessDialogComponent->DefaultModule\n\n\n\n\n\nTransactionDialogComponent\n\nTransactionDialogComponent\n\nDefaultModule -->\n\nTransactionDialogComponent->DefaultModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nDefaultModule -->\n\nTransactionsComponent->DefaultModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nDefaultModule -->\n\nUsersComponent->DefaultModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDefaultModule -->\n\nSharedModule->DefaultModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedModule->HeaderComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSharedModule->SidebarComponent \n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nDefaultModule -->\n\nTokenInterceptorService->DefaultModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedModule -->\n\nHeaderComponent->SharedModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSharedModule -->\n\nSidebarComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            product   (src/.../management.component.ts)\n                        \n                        \n                            product   (src/.../point-of-sale.component.ts)\n                        \n                        \n                            productStructure   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/management/management.component.ts\n    \n    \n        \n            \n                \n                    \n                    product\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/modules/point-of-sale/point-of-sale.component.ts\n    \n    \n        \n            \n                \n                    \n                    product\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/auth/auth.service.ts\n    \n    \n        \n            \n                \n                    \n                    productStructure\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
