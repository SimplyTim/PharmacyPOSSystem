{"version":3,"sources":["./src/app/modules/transactions/transactions.component.ts","./src/app/auth/manager.guard.ts","./src/app/modules/transactions/transaction-dialog/transaction-dialog.component.html","./src/environments/environment.ts","./src/app/shared/components/sidebar/sidebar.component.ts","./src/app/modules/settings/settings.component.ts","./src/app/modules/point-of-sale/point-of-sale.component.html","./src/app/shared/components/sidebar/sidebar.component.html","./src/app/modules/dashboard/dashboard.component.html","./src/app/modules/dashboard/dashboard.component.ts","./src/app/modules/point-of-sale/success-dialog/success-dialog.component.html","./src/app/auth/auth.guard.ts","./src/app/shared/shared.module.ts","./src/app/auth/token-interceptor.service.ts","./src/app/app.component.ts","./src/app/shared/components/header/header.component.html","./src/app/app.module.ts","./src/app/modules/login/login.component.ts","./src/app/shared/components/header/header.component.ts","./src/app/modules/management/course-dialog/course-dialog.component.ts","./src/app/modules/transactions/transaction-dialog/transaction-dialog.component.ts","./src/app/modules/register/register.component.ts","./src/app/modules/management/course-dialog/course-dialog.component.html","./src/app/layouts/default/default.module.ts","./src/app/modules/management/management.component.html","./src/app/modules/settings/settings.component.html","./src/app/modules/inventory/inventory.component.ts","./src/app/modules/transactions/transactions.component.html","./src/app/layouts/default/default.component.html","./src/app/auth/auth.service.ts","./src/app/modules/login/login.component.html","./src/app/app-routing.module.ts","./src/app/modules/register/register.component.html","./src/app/modules/management/management.component.ts","./src/app/modules/inventory/inventory.component.html","./src/app/modules/point-of-sale/point-of-sale.component.ts","./src/app/layouts/default/default.component.ts","./src/app/app.component.html","./src/main.ts","./src/app/modules/point-of-sale/success-dialog/success-dialog.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\nimport { TransactionDialogComponent } from './transaction-dialog/transaction-dialog.component'\n\n\nexport interface Element {\n  transactionId: string;\n  empId: number;\n  dateTime: string;\n}\n\nexport interface DialogData {\n  items: any;\n  transactionId: number;\n  empId: number;\n  dateTime: string;\n}\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\nexport class TransactionsComponent implements OnInit {\n  dataSource;\n  \n  constructor(private _auth: AuthService, private dialog: MatDialog) { }\n\n  displayedColumns = ['transactionId', 'empId', 'dateTime', 'modification'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnInit(): void {\n    this._auth.getTransactions().subscribe(\n      (res:any) => {\n        this.dataSource = new MatTableDataSource<Element>(res);\n        this.dataSource.paginator = this.paginator;\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  row(transactionId, empId, dateTime){\n\n    this._auth.getTransactionDetail(transactionId).subscribe(\n      (res:any) => {\n        this.openDialog(res, transactionId, empId, dateTime);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  \n  openDialog(data, transactionId, empID, dateTime): void {\n    const dialogRef = this.dialog.open(TransactionDialogComponent, {\n      width: '700px',\n      data: {\n        \"items\" : data,\n        \"transactionId\" : transactionId,\n        \"empId\" : empID,\n        \"dateTime\" : dateTime\n      },\n      autoFocus: false\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManagerGuard implements CanActivate {\n\n  constructor(private _auth: AuthService, private _router: Router) { }\n\n  canActivate(): boolean {\n    if(this._auth.loggedIn() && localStorage.getItem('empType') === 'Manager'){\n      return true\n    } else {\n      this._router.navigate([''])\n      return false\n    }\n  }\n  \n}\n","<h1 mat-dialog-title>Transaction: {{data.transactionId}}</h1>\n<h3>Employee ID: {{data.empId}}</h3>\n<h3>Date: {{data.dateTime}}</h3>\n\n<div class=\"example-container mat-elevation-z0\">\n\n    <mat-table #table [dataSource]=\"dataSource\">\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"productId\">\n        <mat-header-cell *matHeaderCellDef> Product ID </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.productId}} </mat-cell>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef> Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"price\">\n        <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.price}} </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n    </mat-table>\n\n    <mat-paginator [pageSizeOptions]=\"[8]\" showFirstLastButtons></mat-paginator>\n</div>\n\n<div mat-dialog-actions style=\"justify-content: flex-end;\">\n    <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Injectable, OnInit } from '@angular/core';\nimport { AuthService } from '../../../auth/auth.service'\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarComponent implements OnInit {\n  username = \"Username\"\n  type = \"Type\"\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem(\"empType\")){\n      this.type = localStorage.getItem(\"empType\");\n      this.username = localStorage.getItem(\"empFirstName\") + \" \" + localStorage.getItem(\"empLastName\");\n    }\n  }\n\n  setUserDetials(username, type){\n    document.getElementById(\"username\").innerHTML = username;\n    document.getElementById(\"type\").innerHTML = type;\n  }\n\n}\n","import { Component, AfterViewInit, ViewChild} from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements AfterViewInit {\n\n  @ViewChild('markupValue') input; \n  public currentMarkupValue: number; \n\n  constructor(private _auth: AuthService) {}\n\n  ngAfterViewInit(): void {\n    this.currentMarkupValue = this._auth.getMarkupValue();\n    console.log(this.currentMarkupValue); \n  }\n\n  setMargin(){\n    let markupValue: number = this.input.nativeElement.value as number; \n    this._auth.updateMarkup({\"markupVal\": markupValue}).subscribe(\n      (res:any)=>{\n        this._auth.setMarkupValue(markupValue); \n      }\n    ) \n  }\n\n}\n","<mat-grid-list cols=\"5\" rowHeight=\"1.7:1\">\n    <mat-grid-tile colspan=\"4\" rowspan=\"3\">\n        <div class='internalMatGrid'>\n            <mat-card class=\"card\">\n                <mat-grid-list cols=\"5\" rowHeight=\"3:1\">\n                    <mat-grid-tile colspan=\"2\"><div class=\"text-inside-grid\">Product</div></mat-grid-tile>\n                    <mat-grid-tile colspan=\"1\"><div class=\"text-inside-grid\">Price</div></mat-grid-tile>\n                    <mat-grid-tile colspan=\"1\"><div class=\"text-inside-grid\">Quantity</div></mat-grid-tile>\n                    \n                    <form [formGroup]=\"itemsForm\">\n                        <div formArrayName=\"products\">\n                            <div *ngFor=\"let product of productForms.controls; let i=index\" [formGroupName]=\"i\">\n                                <mat-grid-tile colspan=\"2\">\n                                    <mat-form-field appearance=\"none\">\n                                        <input matInput formControlName=\"name\" [readonly]=\"true\">\n                                    </mat-form-field>\n                                </mat-grid-tile>\n                \n                                <mat-grid-tile>\n                                    <mat-form-field appearance=\"none\">\n                                        <input matInput formControlName=\"price\" type=\"number\" [readonly]=\"true\">\n                                        <span matPrefix>$&nbsp;</span>\n                                    </mat-form-field>\n                                </mat-grid-tile>\n                \n                                <mat-grid-tile>\n                                    <mat-form-field appearance=\"standard\">\n                                        <input matInput formControlName=\"quantity\" type=\"number\" (ngModelChange)=\"calculatePrice(i)\" min=\"1\">\n                                    </mat-form-field>\n                                </mat-grid-tile>\n                                \n                                <mat-grid-tile>\n                                    <button mat-raised-button color=\"warn\" (click)=\"deleteProduct(i)\">Remove</button>\n                                </mat-grid-tile>\n                            </div>\n                        </div>\n                    </form>\n                </mat-grid-list>\n            </mat-card>\n        </div>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"1\" rowspan=\"5\">\n        <div class=\"internalMatGrid\">\n            <mat-card id=\"card\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <input matInput #name [ngModel]=\"\" (ngModelChange)=\"autoComplete($event)\" (ngModelChange)=\"autoCompleteName($event)\" [disabled]=\"!activeTransaction\" (blur)=\"initialiseList()\" [matAutocomplete]=\"auto\">\n\n                    <mat-autocomplete #auto=\"matAutocomplete\">      \n                        <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option\">\n                        {{option}}\n                        </mat-option>\n                    </mat-autocomplete>\n\n                    <mat-label>Item Name</mat-label>\n                    <mat-icon matSuffix>search</mat-icon>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <input matInput [disabled]=\"!activeTransaction\" #focus [ngModel]=\"\" (ngModelChange)=\"autoCompleteID($event)\">\n                    <mat-label>Item ID</mat-label>\n                    <mat-icon matSuffix>search</mat-icon>\n                </mat-form-field>\n\n                <button [disabled]=\"!activeTransaction\" mat-raised-button color=\"warn\" (click)=\"clearAllProducts()\" class=\"w-100 sidebutton\">\n                    Clear All Products<mat-icon>clear_all</mat-icon>\n                </button>\n\n                <button [disabled]=\"!activeTransaction\" mat-raised-button color=\"warn\" (click)=\"clearTransaction()\" class=\"w-100 sidebutton\">\n                    Cancel Transaction<mat-icon>clear</mat-icon>\n                </button>\n\n                <button [disabled]=\"activeTransaction\" mat-raised-button color=\"primary\" class=\"w-100 sidebutton\" (click)=\"newTransaction()\">\n                    New Transaction<mat-icon>add</mat-icon>\n                </button>\n\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <input matInput [disabled]=\"!itemQuantity\" #payment [ngModel]=\"\" (ngModelChange)=\"amountPaid($event)\" type=\"number\">\n                    <mat-label>Amount Paid</mat-label>\n                    <mat-icon matSuffix>attach_money</mat-icon>\n                </mat-form-field>\n\n                <button [disabled]=\"!transactionValid\" mat-raised-button color=\"primary\" class=\"w-100 sidebutton\" (click)=\"createTransaction()\">\n                    Finish Transaction<mat-icon>attach_money</mat-icon> \n                </button>  \n            </mat-card>\n        </div>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"4\" rowspan=\"1\">\n        <div class=\"internalMatGrid\">\n            <mat-card id=\"card\">\n                <mat-grid-list cols=\"4\" rowHeight=\"7:1\">\n                    <mat-grid-tile colspan=\"2\"><div class=\"text-inside-grid\">Total: ${{totalPrice}}</div></mat-grid-tile>\n                    <mat-grid-tile colspan=\"2\"><div class=\"text-inside-grid\">Quantity: {{itemQuantity}}</div></mat-grid-tile>\n                </mat-grid-list>\n            </mat-card>\n        </div>\n    </mat-grid-tile>\n</mat-grid-list>","<mat-nav-list>\n    <mat-card class=\"example-card mat-elevation-z0\">\n        <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title id=\"username\">{{ username }}</mat-card-title>\n            <mat-card-subtitle id=\"type\">{{ type }}</mat-card-subtitle>\n        </mat-card-header>\n    </mat-card>\n\n    <mat-divider></mat-divider>\n\n    <h2 matSubheader>Pages</h2>\n\n    <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/\">\n        <mat-icon [ngStyle]=\"{'color':'#3f51b5'}\">dashboard</mat-icon>Dashboard\n    </a>\n    <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/pos\">\n        <mat-icon [ngStyle]=\"{'color':'#3f51b5'}\">point_of_sale</mat-icon>Point Of Sale\n    </a>\n    <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/inventory\">\n        <mat-icon [ngStyle]=\"{'color':'#3f51b5'}\">inbox</mat-icon>Inventory\n    </a>\n    <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/transactions\">\n        <mat-icon [ngStyle]=\"{'color':'#3f51b5'}\">attach_money</mat-icon>Transactions\n    </a>\n    <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/stock-management\" *ngIf=\"authService.loggedIn() && authService.getUserType()!=='Sales'\">\n        <mat-icon [ngStyle]=\"{'color':'#3f51b5'}\">add</mat-icon>Manage Stock\n    </a>\n\n\n    <mat-divider></mat-divider>\n    <br>\n    <div *ngIf=\"authService.loggedIn() && authService.getUserType()==='Manager'\">\n        <h2 matSubheader > Manager Tools</h2>\n\n        <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/settings\">\n            <mat-icon [ngStyle]=\"{'color':'#3f51b5'}\">tune</mat-icon>\n            Global Settings\n        </a>\n\n        <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/contacts\">\n            <mat-icon [ngStyle]=\"{'color':'#3f51b5'}\">people</mat-icon>\n            Users\n        </a>\n    </div>\n\n</mat-nav-list>","<mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n    <mat-grid-tile class=\"tile\" routerLink=\"/pos\">\n      <mat-card class=\"dashboardCard\">\n        <div>\n          <img src=\"../../../assets/img/pos.png\" alt=\"pos\">\n        </div>\n        <h1>Point of Sale</h1>\n        </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile class=\"tile\" routerLink=\"/inventory\">\n      <mat-card class=\"dashboardCard2\">\n        <div>\n          <img src=\"../../../assets/img/inventory-blue.png\" alt=\"pos\">\n        </div>\n        <h1>Inventory</h1>\n        </mat-card>\n    </mat-grid-tile>\n    \n    <mat-grid-tile class=\"tile\" routerLink=\"/transactions\">\n      <mat-card class=\"dashboardCard2\">\n        <div>\n          <img src=\"../../../assets/img/transactions-blue.png\" alt=\"pos\">\n        </div>\n        <h1>Transactions</h1>\n        </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile class=\"tile\" routerLink=\"/\">\n      <mat-card class=\"dashboardCard\">\n        <div>\n          <img src=\"../../../assets/img/account.png\" alt=\"pos\">\n        </div>\n        <h1>Account</h1>\n        </mat-card>\n    </mat-grid-tile>\n</mat-grid-list>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>Transaction Succesful!</h1>\n<div mat-dialog-content>\n  <h3>Change To Give Customer: ${{data.change}}</h3>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _auth: AuthService, private _router: Router) { }\n\n  canActivate(): boolean {\n    if(this._auth.loggedIn()){\n      return true\n    } else {\n      this._router.navigate(['/login'])\n      return false\n    }\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,  \n    FooterComponent, \n    SidebarComponent\n  ],\n  imports: [\n    CommonModule, \n    MatDividerModule,\n    MatToolbarModule, \n    MatIconModule,\n    MatButtonModule, \n    FlexLayoutModule,\n    MatMenuModule,\n    MatListModule,\n    RouterModule,\n    MatGridListModule,\n    MatCardModule\n  ], \n  exports: [\n    HeaderComponent, \n    FooterComponent, \n    SidebarComponent\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest,HttpHandler,HttpEvent,HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(public auth: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    \n    request = request.clone({\n      setHeaders: {\n        Authorization: `JWT ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pharmacy-pos-system';\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <button *ngIf=\"authService.loggedIn()\" mat-icon-button (click)=\"onButtonClick($event)\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <div id=\"appname\" routerLink=\"/\">Point of Sale System</div>\n\n        <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\n            <ul fxLayout=\"row\" fxLayoutGap=\"20px\">\n                <li>\n                    <button *ngIf=\"authService.loggedIn() && authService.getUserType()==='Manager'\" mat-icon-button [matMenuTriggerFor]=\"settings\">\n                        <mat-icon>settings</mat-icon>\n                    </button>\n                    <mat-menu #settings=\"matMenu\">\n                        <button mat-menu-item routerLinkActive=\"list-item-active\" routerLink=\"/register\">\n                            <mat-icon>add</mat-icon>\n                            Create User\n                        </button>\n                    </mat-menu>\n                </li>\n                <li>\n                    <button mat-button [matMenuTriggerFor]=\"menu\">\n                        <mat-icon>person_outline</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button *ngIf=\"!authService.loggedIn()\" mat-menu-item routerLinkActive=\"list-item-active\" routerLink=\"/login\">\n                            <mat-icon>login</mat-icon>\n                            Login\n                        </button>\n\n                        <button *ngIf=\"authService.loggedIn()\" mat-menu-item (click)=\"logout()\">\n                            <mat-icon>login</mat-icon>\n                            Logout\n                        </button>\n                    </mat-menu>\n                </li>\n            </ul>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DefaultModule } from './layouts/default/default.module';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    DefaultModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DefaultComponent } from '../../layouts/default/default.component';\nimport { SidebarComponent } from '../../shared/components/sidebar/sidebar.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  showErrorMessage = false;\n\n  loginUserData = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n  })\n\n  constructor(private _auth: AuthService, private _router: Router, private _snackBar: MatSnackBar, private _default: DefaultComponent, private _sidebar: SidebarComponent) { \n    this._auth.logoutUser() //makes sure the user is logged out if they navigate to the login page\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this._auth.loginUser(this.loginUserData.value).subscribe(\n      (res:any) => {\n        localStorage.setItem('token', res.access_token)\n        this.getCurrentUser();\n        \n        this._router.navigate(['/'])\n\n        this._default.setSideBarOpen(true);\n\n        this._snackBar.open(\"Logged In Succesfully\", \"Close\", {\n          duration: 2000,\n          panelClass: ['blue-snackbar']\n        });\n      },\n      error => {\n        this.showErrorMessage = true;\n      }\n    )\n  }\n\n  getCurrentUser(){\n    this._auth.getCurrentUser().subscribe(\n      (res:any) => {\n        this._sidebar.setUserDetials(res.empFirstName + \" \" + res.empLastName, res.empType);\n        \n        localStorage.setItem('empFirstName', res.empFirstName)\n        localStorage.setItem('empLastName', res.empLastName)\n        localStorage.setItem('empType', res.empType)\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AuthService } from '../../../auth/auth.service'\nimport { DefaultComponent } from '../../../layouts/default/default.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Output() public onClick: EventEmitter<any> = new EventEmitter(); \n\n  constructor(public authService: AuthService, private _default: DefaultComponent) { }\n\n  ngOnInit(): void { \n  }\n\n  public onButtonClick(event):void{\n    this.onClick.emit()\n  }\n\n  logout(){\n    this.authService.logoutUser();\n    this._default.setSideBarOpen(false);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-course-dialog',\n  templateUrl: './course-dialog.component.html',\n  styleUrls: ['./course-dialog.component.css']\n})\nexport class CourseDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<CourseDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close();\n  } \n\n}\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../transactions.component';\nimport { SuccessDialogComponent } from '../../point-of-sale/success-dialog/success-dialog.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\nexport interface Element {\n  productId: number;\n  name: string;\n  price: number;\n}\n\n@Component({\n  selector: 'app-transaction-dialog',\n  templateUrl: './transaction-dialog.component.html',\n  styleUrls: ['./transaction-dialog.component.css']\n})\nexport class TransactionDialogComponent implements OnInit {\n  dataSource;\n\n  constructor(private dialogRef: MatDialogRef<SuccessDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns = ['productId', 'name', 'price'];\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource<Element>(this.data.items);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  close() {\n    this.dialogRef.close();\n  } \n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroupDirective } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  @ViewChild('myFGD', {static: true}) form: NgForm;\n\n  showErrorMessage = false;\n\n  employeeDataForm = new FormGroup({\n    empFirstName: new FormControl(''),\n    empLastName: new FormControl(''),\n    age: new FormControl(''),\n    empType: new FormControl(''),\n    password: new FormControl('')\n  })\n  \n  constructor(private _auth: AuthService, private _snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    console.log(this.employeeDataForm.value)\n\n    this._auth.registerUser(this.employeeDataForm.value).subscribe(\n      (res:any) => {\n        const result = res;\n\n        this.form.resetForm();\n\n        this._snackBar.open(\"Registered Succesfully\", \"Close\", {\n          duration: 3000,\n          panelClass: ['blue-snackbar']\n        });\n        \n      },\n      error => {\n        console.log(error);\n\n        this.showErrorMessage = true;\n      }\n    )\n  }\n    \n}\n","<h2 mat-dialog-title>Products Succesfully Updated</h2>\n\n<mat-dialog-actions>\n    <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n</mat-dialog-actions>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultComponent } from './default.component';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatSidenavModule } from '@angular/material/sidenav'; \nimport { MatDividerModule } from '@angular/material/divider';\nimport { InventoryComponent } from 'src/app/modules/inventory/inventory.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { ManagementComponent } from 'src/app/modules/management/management.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { DashboardComponent } from 'src/app/modules/dashboard/dashboard.component';\nimport { LoginComponent } from 'src/app/modules/login/login.component';\nimport { RegisterComponent } from 'src/app/modules/register/register.component';\nimport { AuthGuard } from '../../auth/auth.guard';\nimport { TokenInterceptorService } from '../../auth/token-interceptor.service';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { SettingsComponent } from 'src/app/modules/settings/settings.component';\nimport { MatDialogModule } from '@angular/material/dialog'; \nimport { PointOfSaleComponent } from 'src/app/modules/point-of-sale/point-of-sale.component';\nimport { CourseDialogComponent } from 'src/app/modules/management/course-dialog/course-dialog.component';\nimport { SuccessDialogComponent } from 'src/app/modules/point-of-sale/success-dialog/success-dialog.component';\nimport { TransactionDialogComponent } from 'src/app/modules/transactions/transaction-dialog/transaction-dialog.component';\nimport { TransactionsComponent } from 'src/app/modules/transactions/transactions.component';\n\n\n@NgModule({\n  declarations: [\n    DefaultComponent, \n    InventoryComponent, \n    ManagementComponent,\n    RegisterComponent,\n    LoginComponent,\n    DashboardComponent, \n    SettingsComponent,\n    PointOfSaleComponent,\n    CourseDialogComponent,\n    SuccessDialogComponent,\n    TransactionsComponent,\n    TransactionDialogComponent\n    \n  ],\n  imports: [\n    CommonModule, \n    RouterModule, \n    SharedModule,\n    MatSidenavModule,\n    MatDividerModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatSelectModule, \n    MatTableModule, \n    ReactiveFormsModule, \n    MatInputModule, \n    MatSelectModule, \n    MatButtonModule, \n    MatCheckboxModule, \n    MatChipsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatGridListModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatIconModule, \n    MatAutocompleteModule, \n    MatDialogModule\n  ],\n  providers: [AuthGuard, \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }],\n  entryComponents: [CourseDialogComponent, SuccessDialogComponent, TransactionDialogComponent], \n})\nexport class DefaultModule { }\n","<form [formGroup]=\"myForm\">\n    <!-- Value: {{ myForm.value | json }} -->\n    \n    <mat-card>\n        <mat-grid-list cols=\"8\" rowHeight=\"2:1\">\n            <div formArrayName=\"products\">\n                <div *ngFor=\"let product of productForms.controls; let i=index\" [formGroupName]=\"i\" (change)=\"calculateSP(i)\" >\n                    \n                    <mat-grid-tile>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Product ID\" formControlName=\"productId\" (change)=\"autofill(i)\">\n                        </mat-form-field>       \n                    </mat-grid-tile>  \n\n                    <mat-grid-tile colspan=\"3\" >\n                        <mat-form-field class=\"product-name-input\">\n                            <input matInput (ngModelChange)=\"autoComplete(i);\" placeholder=\"Product Name\" formControlName=\"name\" (blur)=\"initialiseList(); autofill(i)\" [matAutocomplete]=\"auto\">\n                            \n                            <mat-autocomplete #auto=\"matAutocomplete\">      \n                                <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option\">\n                                {{option}}\n                                </mat-option>\n                            </mat-autocomplete>\n                            \n                        </mat-form-field>\n                    </mat-grid-tile>\n\n                    <mat-grid-tile>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Cost Price\" formControlName=\"costPrice\">\n                        </mat-form-field>\n                    </mat-grid-tile>\n\n                    <mat-grid-tile>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Selling Price\" formControlName=\"price\">\n                        </mat-form-field>\n                    </mat-grid-tile>\n\n                    <mat-grid-tile>\n                        <mat-form-field>\n                            <input matInput placeholder=\"Quantity\" formControlName=\"stock\">\n                        </mat-form-field>\n                    </mat-grid-tile>\n\n                    <mat-grid-tile>\n                        <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"deleteProduct(i)\">Cancel Product Entry</button>\n                    </mat-grid-tile>\n                </div>\n            </div>\n        </mat-grid-list>\n    </mat-card>\n\n\n    <mat-grid-list cols=\"2\" rowHeight=\"10:1\" class=\"utility-buttons\">\n        <mat-grid-tile>\n            <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addProduct()\" class=\"add-button\">Add Product</button>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"updateStock()\" class=\"update-stock\">Update Stock</button>\n        </mat-grid-tile>\n    </mat-grid-list>\n    \n    \n</form>","<mat-card class=\"example-card\">\n    <mat-card-header>\n        <h2 matHeader>Set Automatic Markup Margin</h2>\n    </mat-card-header>\n    \n    <mat-card-content>\n        <div class=\"example-container\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Input %</mat-label>\n              <input matInput #markupValue placeholder=\"{{currentMarkupValue}}\">\n            </mat-form-field>\n            <br>\n        </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" (click)=\"setMargin()\">Set</button>\n    </mat-card-actions>\n  </mat-card>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthService } from '../../auth/auth.service';\n\nexport interface Element {\n  name: string;\n  productId: number;\n  price: number;\n  stock: number;\n}\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent implements OnInit {\n  dataSource;\n  @ViewChild('focus') input: ElementRef;\n\n  constructor(private _auth: AuthService) { }\n\n  displayedColumns = ['productId', 'name', 'price', 'stock'];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnInit(): void {\n    this._auth.getProducts().subscribe(\n      (res:any) => {\n        console.log(res)\n        this.dataSource = new MatTableDataSource<Element>(res);\n        this.dataSource.paginator = this.paginator;\n\n        setTimeout(()=>{\n          this.input.nativeElement.focus();\n        },0);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n\n\n\n\n  \n\n","<mat-form-field appearance=\"outline\" >\n    <mat-label>Search</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input #focus>\n    <mat-icon matSuffix>search</mat-icon>\n</mat-form-field>\n  \n<div class=\"example-container mat-elevation-z8\">\n\n    <mat-table #table [dataSource]=\"dataSource\">\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"transactionId\">\n        <mat-header-cell *matHeaderCellDef> Transaction ID </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.transactionId}} </mat-cell>\n    </ng-container>\n\n    <!-- Employee Column -->\n    <ng-container matColumnDef=\"empId\">\n        <mat-header-cell *matHeaderCellDef> Employee ID </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.empId}} </mat-cell>\n    </ng-container>\n\n    <!-- Date Column -->\n    <ng-container matColumnDef=\"dateTime\">\n        <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.dateTime}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"modification\">\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> \n            <button mat-raised-button color=\"primary\" class=\"tableButton\" (click)=\"row(element.transactionId, element.empId, element.dateTime)\">View</button>\n        </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" colspan=\"6\" *matNoDataRow>\n        <td class=\"mat-cell\">No data matching the search \"{{input.value}}\"</td>\n    </tr>\n    </mat-table>\n\n    <mat-paginator [pageSizeOptions]=\"[8]\" showFirstLastButtons></mat-paginator>\n</div>\n","<app-header (onClick)=\"toggleSideBar($event)\"></app-header>\n\n<mat-drawer-container>\n    <mat-drawer mode=\"side\" [opened]=\"sideBarOpen\">\n        <app-sidebar></app-sidebar>\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n</mat-drawer-container>\n\n<!-- <app-footer></app-footer> -->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\n\ntype productStructure = {\n  \"productId\": string, \n  \"name\": string,\n  \"price\": number,\n  \"stock\": number\n}; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  helper = new JwtHelperService();\n  private _loginUrl = \"https://pharmacypos.herokuapp.com/auth\";\n  private _currentUserUrl = \"https://pharmacypos.herokuapp.com/mydetails\";\n  private _registerUrl = \"https://pharmacypos.herokuapp.com/employee\";\n  private _productsURL = \"https://pharmacypos.herokuapp.com/products\";\n  private _createProductURL = \"https://pharmacypos.herokuapp.com/product\";\n  private _updateProductURL = \"https://pharmacypos.herokuapp.com/product\";\n  private _createTransactionURL = \"https://pharmacypos.herokuapp.com/transaction\";\n  private _addProductsToTransactionURL = \"https://pharmacypos.herokuapp.com/addtotrans\";\n  private _rootURL = \"https://pharmacypos.herokuapp.com\";\n  private _viewTransactionURL = \"https://pharmacypos.herokuapp.com/transactioninfo\";\n  private _viewTransactionDetail = \"https://pharmacypos.herokuapp.com/transaction\";\n  private markupValue: number; \n\n  constructor(private http: HttpClient, private router: Router, private _snackBar: MatSnackBar) { }\n\n  loginUser(user) {\n    return this.http.post(this._loginUrl, user)\n  }\n\n  loggedIn() {\n    try{\n      return !this.helper.isTokenExpired(localStorage.getItem('token'));\n    } catch (Error) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('token')\n  }\n\n  logoutUser() {\n    localStorage.removeItem('token')\n    localStorage.removeItem('empType')\n    localStorage.removeItem('empFirstName')\n    localStorage.removeItem('empLastName')\n    this.router.navigate(['/login'])\n\n    this._snackBar.open(\"Logged Out Succesfully\", \"Close\", {\n      duration: 2000,\n      panelClass: ['blue-snackbar']\n    });\n  }\n\n  getCurrentUser(){\n    return this.http.get<any>(this._currentUserUrl);\n  }\n\n  getUserType(){\n    return localStorage.getItem('empType')\n  }\n\n  getUserName(){\n    return localStorage.getItem('empFirstName') + \" \" + localStorage.getItem('empLastName')\n  }\n\n  registerUser(userdetails){\n    return this.http.post(this._registerUrl, userdetails, {responseType: 'text'})\n  }\n\n  getProducts(){\n    return this.http.get<any>(this._productsURL);\n  }\n\n  \n\n  createProduct(product: productStructure){\n    return this.http.post(this._createProductURL, product,  {responseType: 'text'}); \n  }\n\n  updateProduct(productUpdate){\n    return this.http.put(`${this._rootURL}/product`, productUpdate,  {responseType: 'text'}); \n  }\n\n  updateMarkup(markup){\n    return this.http.put(`${this._rootURL}/setmarkup`, markup,  {responseType: 'text'}); \n  }\n\n  getMarkupValue():number {\n    if(!this.markupValue){\n      this.http.get<{markupId: number, markupVal: number}>(`${this._rootURL}/getmarkup`).subscribe(\n        (res:any) => {\n          this.markupValue = res.markupVal; \n        }\n      )\n    }\n    return this.markupValue; \n  }\n\n  setMarkupValue(value: number){\n    this.markupValue = value; \n  }\n\n  createTransaction(){\n    return this.http.post(this._createTransactionURL, ''); \n  }\n\n  addProductsToTransaction(products, id){\n    return this.http.post(this._addProductsToTransactionURL + \"/\" + id, products, {responseType: 'text'}); \n  }\n\n  getTransactions(){\n    return this.http.get<any>(this._viewTransactionURL);\n  }\n\n  getTransactionDetail(id){\n    return this.http.get<any>(this._viewTransactionDetail + \"/\" + id);\n  }\n\n}\n","<mat-card class=\"login-card\">\n  <mat-card-header>\n    <mat-card-title>Login</mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n    <mat-card id=\"loginFail\" *ngIf=\"showErrorMessage\">Error. Please Check Username or Password</mat-card>\n    <br>\n    <form [formGroup]=\"loginUserData\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Employee ID</mat-label>\n        <input matInput formControlName=\"username\" required type=\"text\">\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" required type=\"password\">\n      </mat-form-field>\n      <br>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!loginUserData.valid\">Login</button>\n    </form>\n  </mat-card-content>\n</mat-card> ","import { componentFactoryName } from '@angular/compiler';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { ManagerGuard } from './auth/manager.guard';\nimport { DefaultComponent } from './layouts/default/default.component';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\nimport { InventoryComponent } from './modules/inventory/inventory.component';\nimport { LoginComponent } from './modules/login/login.component';\nimport { ManagementComponent } from './modules/management/management.component';\nimport { RegisterComponent } from './modules/register/register.component';\nimport { SettingsComponent } from './modules/settings/settings.component';\nimport { PointOfSaleComponent } from './modules/point-of-sale/point-of-sale.component';\nimport { TransactionsComponent } from './modules/transactions/transactions.component';\n\nconst routes: Routes = [{\n  path: '', \n  component: DefaultComponent, \n  children: [\n    {\n      path: '',\n      component: DashboardComponent,\n      canActivate: [AuthGuard]\n    }, \n    {\n      path: 'inventory', \n      component: InventoryComponent,\n      canActivate: [AuthGuard]\n    }, \n    {\n      path: 'login', \n      component: LoginComponent\n    }, \n    {\n      path: 'register', \n      component: RegisterComponent,\n      canActivate: [ManagerGuard]\n    },\n    {\n      path: 'stock-management',\n      component: ManagementComponent,\n      canActivate: [AuthGuard]\n    },\n    {\n      path: 'settings', \n      component: SettingsComponent,\n      canActivate: [ManagerGuard]\n    },\n    {\n      path: 'pos', \n      component: PointOfSaleComponent,\n      canActivate: [AuthGuard]\n    },\n    {\n      path: 'transactions', \n      component: TransactionsComponent,\n      canActivate: [AuthGuard]\n    }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<mat-card class=\"register-card\">\n    <mat-card-header>\n      <mat-card-title>Add Employee</mat-card-title>\n    </mat-card-header>\n  \n    <mat-card-content>\n      <mat-card id=\"registerFail\" *ngIf=\"showErrorMessage\">Error</mat-card>\n      <br>\n      <form [formGroup]=\"employeeDataForm\" (ngSubmit)=\"onSubmit()\" #myFGD=\"ngForm\">\n        <mat-form-field appearance=\"outline\">\n            <mat-label>First Name</mat-label>\n          <input matInput formControlName=\"empFirstName\" required type=\"text\">\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Last Name</mat-label>\n            <input matInput formControlName=\"empLastName\" required type=\"text\">\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Age</mat-label>\n            <input matInput formControlName=\"age\" required type=\"pattern\" min=\"16\" max=\"120\">\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Employee Type</mat-label>\n            <mat-select formControlName=\"empType\" required>\n                <mat-option value=\"Manager\">Manager</mat-option>\n                <mat-option value=\"Data Entry\">Data Entry</mat-option>\n                <mat-option value=\"Sales\">Sales</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput formControlName=\"password\" required type=\"text\">\n        </mat-form-field>\n        <br>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!employeeDataForm.valid\">Register</button>\n      </form>\n    </mat-card-content>\n  </mat-card> ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray} from '@angular/forms'; \nimport { AuthService } from '../../auth/auth.service';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { CourseDialogComponent } from './course-dialog/course-dialog.component';\n\nexport type product = {\n  \"productId\": string, \n  \"name\": string, \n  \"costPrice\": number, \n  \"price\": number, \n  \"stock\": number\n}\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management.component.html',\n  styleUrls: ['./management.component.css']\n})\nexport class ManagementComponent implements OnInit {\n\n  public myForm: FormGroup; \n  public productList; \n  public productNames: string[]; \n  public productItemNumbers: string[]; \n  filteredOptions: string[];\n\n  constructor(private formBuilder: FormBuilder, private _auth: AuthService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n\n    this.myForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n\n    this._auth.getProducts().subscribe(\n      (res:any) => {\n        this.productList = res;\n        this.productNames = []; \n        this.productItemNumbers = []; \n        for(let product of this.productList){\n          this.productNames.push(product.name); \n          this.productItemNumbers.push(product.productId); \n        } \n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  get productForms(){\n    return this.myForm.get('products') as FormArray; \n  }\n\n  addProduct(){\n\n    const product = this.formBuilder.group({\n      productId: [], \n      name: [], \n      costPrice: [], \n      price: [], \n      stock: []\n    })\n    this.productForms.push(product); \n  }\n\n  deleteProduct(i){\n    this.productForms.removeAt(i); \n  }\n\n\n  private _filter(value: string): string[] {\n    if (!value || value==='') return this.productNames;\n    const filterValue = value.toString().toLowerCase();\n    return this.productNames.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  createProduct(createdProducts):void{\n    this._auth.createProduct(createdProducts).subscribe(\n      (res:any) => {\n        console.log(res); \n      }, \n      (error:any) => {\n        console.log(error);\n      }\n    )\n  }\n\n  updateProduct(updatedProducts){\n    this._auth.updateProduct(updatedProducts).subscribe(\n      (res:any) => {\n        console.log(res); \n      }, \n      (error:any) => {\n        console.log(error);\n      }\n    )\n  }\n\n  updateStock(){\n    let productsEntered = this.productForms.value as Array<Object>;\n    let productsCreated = []; \n    let productsUpdated = []; \n\n    productsEntered.forEach(element => {\n      let inProductList: boolean = false; \n      let enteredProduct = element as product; \n\n      for(let item of this.productList){\n        if(item.productId === enteredProduct.productId){\n          productsUpdated.push(enteredProduct); \n          inProductList = true; \n          break; \n        }\n      }\n\n      if(!inProductList){\n        productsCreated.push(enteredProduct); \n      }\n\n      this.openDialog(); \n      this.ngOnInit();\n\n    }); \n\n    \n    if(productsCreated.length !== 0){\n      this.createProduct(productsCreated); \n    }\n    if(productsUpdated.length !== 0){\n      console.log(productsUpdated); \n      this.updateProduct(productsUpdated);  \n    }\n  }\n\n  public autofill(i){\n    let productValues = this.productForms.at(i).value; \n    this.productList.forEach(element => {\n      if(element.name === productValues.name || element.productId == productValues.productId){\n        this.productForms.at(i).get('productId').setValue(`${element.productId}`);\n        this.productForms.at(i).get('name').setValue(`${element.name}`);\n        this.productForms.at(i).get('price').setValue(`${element.price}`); \n        this.productForms.at(i).get('stock').setValue(`${element.stock}`); \n      }\n    });\n  }\n\n  public calculateSP(i){\n    let productValues = this.productForms.at(i).value;  \n    let markupPercentage: number = (this._auth.getMarkupValue()/100) as number; \n    if(!markupPercentage) return; \n    let markupPrice: number = markupPercentage * productValues.costPrice; \n    let sellingPrice: number =  Number(markupPrice) + Number(productValues.costPrice);\n    console.log(sellingPrice); \n    this.productForms.at(i).get('price').setValue(sellingPrice);\n  }\n\n  autoComplete(i){\n    let productEntry = this.productForms.at(i).value.name; \n    console.log(productEntry); \n    this.filteredOptions = this._filter(productEntry); \n  }\n\n  initialiseList(){\n    this.filteredOptions = this.productNames;  \n  }\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    this.dialog.open(CourseDialogComponent, dialogConfig);\n}\n\n}\n","<mat-form-field appearance=\"outline\" >\n  <mat-label>Search</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" #input #focus>\n  <mat-icon matSuffix>search</mat-icon>\n</mat-form-field>\n\n<div class=\"example-container mat-elevation-z8\">\n  \n    <mat-table #table [dataSource]=\"dataSource\">\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"productId\">\n        <mat-header-cell *matHeaderCellDef> Product ID </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.productId}} </mat-cell>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n      </ng-container>\n  \n      <!-- Price Column -->\n      <ng-container matColumnDef=\"price\">\n        <mat-header-cell *matHeaderCellDef> Price </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.price}} </mat-cell>\n      </ng-container>\n  \n      <!-- Stock Column -->\n      <ng-container matColumnDef=\"stock\">\n        <mat-header-cell *matHeaderCellDef> Stock </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.stock}} </mat-cell>\n      </ng-container>\n  \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" colspan=\"6\" *matNoDataRow>\n        <td class=\"mat-cell\">No data matching the search \"{{input.value}}\"</td>\n      </tr>\n    </mat-table>\n\n    <mat-paginator [pageSizeOptions]=\"[8]\" showFirstLastButtons></mat-paginator>\n  </div>\n  ","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AuthService } from '../../auth/auth.service';\nimport { SuccessDialogComponent } from './success-dialog/success-dialog.component'\n\nexport type product = {\n  \"id\": string,\n  \"name\": string, \n  \"price\": number, \n  \"quantity\": number\n}\n\nexport interface DialogData {\n  change: number;\n}\n\n@Component({\n  selector: 'app-point-of-sale',\n  templateUrl: './point-of-sale.component.html',\n  styleUrls: ['./point-of-sale.component.css']\n})\nexport class PointOfSaleComponent implements OnInit {\n  public itemsForm: FormGroup; \n  public activeTransaction = false;\n  public productList; \n  public productNames: string[]; \n  public productItemNumbers: string[];\n  totalPrice = 0;\n  amoutPaid = 0;\n  itemQuantity = 0;\n  transactionValid = false;\n  filteredOptions: string[];\n  @ViewChild('focus') input: ElementRef;\n\n  @ViewChild('payment') payment: ElementRef;\n\n  @ViewChild('name') name: ElementRef;\n\n  constructor(private formBuilder: FormBuilder, private _auth: AuthService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.itemsForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n\n  }\n\n  get productForms(){\n    return this.itemsForm.get('products') as FormArray; \n  }\n\n  addProduct(){\n    const product = this.formBuilder.group({\n      id: [],\n      name: [], \n      price: [], \n      quantity: []\n    })\n    this.productForms.push(product); \n  }\n\n  deleteProduct(i){\n    this.productForms.removeAt(i); \n    this.calculateTotalPrice();\n    this.calculateItemQuantity();\n    this.payment.nativeElement.value = \"\";\n    this.transactionValid = false;\n  }\n\n  newTransaction(){\n    this.itemsForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n\n    //getting items from backend to check stock count\n    this._auth.getProducts().subscribe(\n      (res:any) => {\n        this.productList = res;\n        this.productNames = []; \n        this.productItemNumbers = []; \n        for(let product of this.productList){\n          this.productNames.push(product.name); \n          this.productItemNumbers.push(product.productId); \n        }\n        \n        this.activeTransaction = true;\n        this.totalPrice = 0;\n        this.itemQuantity = 0;\n        this.transactionValid = false;\n        this.payment.nativeElement.value = \"\";\n        this.name.nativeElement.value = \"\";\n        setTimeout(()=>{\n          this.input.nativeElement.focus();\n        },0);\n      },\n      error => {\n        console.log(error)\n      }\n    )\n  }\n\n  clearTransaction(){\n    this.activeTransaction = false;\n    this.input.nativeElement.value = \"\";\n    this.payment.nativeElement.value = \"\";\n    this.name.nativeElement.value = \"\";\n\n    this.itemsForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n\n    this.totalPrice = 0;\n    this.itemQuantity = 0;\n    this.transactionValid = false;\n  }\n\n  clearAllProducts(){\n    this.itemsForm = this.formBuilder.group({\n      products: this.formBuilder.array([])\n    })\n    this.totalPrice = 0;\n    this.itemQuantity = 0;\n    this.transactionValid = false;\n    this.payment.nativeElement.value = \"\";\n  }\n\n  private _filter(value: string): string[] {\n    if (!value || value==='') return this.productNames;\n    const filterValue = value.toString().toLowerCase();\n    return this.productNames.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  autoComplete(value){\n    let productEntry = value; \n    this.filteredOptions = this._filter(productEntry); \n  }\n\n  initialiseList(){\n    this.filteredOptions = this.productNames;  \n  }\n\n  autoCompleteID(value){\n    let itemFound = false;\n    this.productList.forEach(element => {\n      if(value === element.productId && element.stock > 0){\n\n        this.productForms.controls.forEach((element, index) => {\n          if(element.value.id == value){\n            this.productForms.at(index).get('quantity').setValue(element.value.quantity + 1);\n            itemFound = true;\n          }\n        });\n\n        if(itemFound == false){\n          const product = this.formBuilder.group({\n            id: [element.productId],\n            name: [element.name], \n            price: [element.price], \n            quantity: [1]\n          })\n\n          this.productForms.push(product);\n        }\n        \n        this.input.nativeElement.value = \"\";\n        this.calculateTotalPrice();\n\n        this.calculateItemQuantity();\n      }\n    });\n  }\n\n  autoCompleteName(value){\n    let itemFound = false;\n    this.productList.forEach(element => {\n      if(value === element.name && element.stock > 0){\n\n        this.productForms.controls.forEach((element, index) => {\n          if(element.value.name == value){\n            this.productForms.at(index).get('quantity').setValue(element.value.quantity + 1);\n            itemFound = true;\n          }\n        });\n\n        if(itemFound == false){\n          const product = this.formBuilder.group({\n            id: [element.productId],\n            name: [element.name], \n            price: [element.price], \n            quantity: [1]\n          })\n\n          this.productForms.push(product);\n        }\n        \n        this.name.nativeElement.value = \"\";\n        this.calculateTotalPrice();\n\n        this.calculateItemQuantity();\n      }\n    });\n  }\n\n  calculatePrice(i){\n    let product = this.productForms.at(i); \n    \n    this.productList.forEach(element => {\n      if(product.value.id === element.productId){\n        const price = element.price * product.value.quantity\n\n        this.productForms.at(i).get('price').setValue(price.toFixed(2));\n\n        this.calculateTotalPrice();\n        this.calculateItemQuantity();\n        this.payment.nativeElement.value = \"\";\n        this.transactionValid = false;\n      }\n    });\n  }\n\n  calculateTotalPrice(){\n    let productsEntered = this.productForms.value as Array<Object>;\n    let total = 0;\n\n    productsEntered.forEach(element => {\n      let enteredProduct = element as product; \n      total += (enteredProduct.price * enteredProduct.quantity);\n    });\n\n    this.totalPrice = Number(total.toFixed(2));\n  }\n\n  calculateItemQuantity(){\n    let items = this.itemsForm.get('products').value as Array<Object>;\n    let qty = 0;\n\n    items.forEach(element => {\n      let product = element as product; \n\n      qty += product.quantity;\n    });\n\n    this.itemQuantity = qty;\n  }\n\n  createTransaction(){\n    let allProductIDs = [];\n    let transID;\n\n    let items = this.itemsForm.get('products').value as Array<Object>;\n\n    items.forEach(element => {\n      let product = element as product; \n\n      for(let i=0; i<product.quantity;i++){\n        allProductIDs.push({\"productId\": product.id})\n      }\n     \n    });\n\n    this._auth.createTransaction().subscribe(\n      (res:any) => {\n        transID = res.transactionId;\n        this.addProductsToTransaction(allProductIDs, transID);\n      }, \n      (error:any) => {\n        console.log(error);\n      }\n    )\n  }\n\n  addProductsToTransaction(allProductIDs, transID){\n    this._auth.addProductsToTransaction(allProductIDs, transID).subscribe(\n      (res:any) => {\n        console.log(res);\n        let change = this.amoutPaid - this.totalPrice;\n        this.newTransaction();\n        this.openDialog(change.toFixed(2));\n      }, \n      (error:any) => {\n        console.log(error);\n      }\n    )\n  }\n\n  amountPaid(value){\n    if(value >= this.totalPrice){\n      this.transactionValid = true;\n      this.amoutPaid = value;\n    }else{\n      this.transactionValid = false;\n    }\n  }\n\n  openDialog(change): void {\n    const dialogRef = this.dialog.open(SuccessDialogComponent, {\n      width: '300px',\n      data: {\"change\": change},\n      autoFocus: false \n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.input.nativeElement.focus();\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.css']\n})\nexport class DefaultComponent implements OnInit {\n\n  public sideBarOpen: boolean = false; \n\n  constructor(private _auth: AuthService) { }\n\n  ngOnInit(): void {\n    if(this._auth.loggedIn() === true){\n      this.setSideBarOpen(true);\n    }else{\n      this._auth.logoutUser();\n    }\n  }\n\n  public toggleSideBar(event):void{\n    this.sideBarOpen = !this.sideBarOpen; \n  }\n\n  public setSideBarOpen(status: boolean){\n    this.sideBarOpen = status;\n  }\n\n}\n","<router-outlet></router-outlet>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../point-of-sale.component';\n\n@Component({\n  selector: 'app-success-dialog',\n  templateUrl: './success-dialog.component.html',\n  styleUrls: ['./success-dialog.component.css']\n})\nexport class SuccessDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<SuccessDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) { \n    dialogRef.disableClose = true;\n  }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close();\n  } \n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}